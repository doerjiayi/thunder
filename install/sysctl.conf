# Kernel sysctl configuration file for Red Hat Linux
#
# For binary values, 0 is disabled, 1 is enabled.  See sysctl(8) and
# sysctl.conf(5) for more details.

# Controls IP packet forwarding
net.ipv4.ip_forward = 0

# Controls source route verification
net.ipv4.conf.default.rp_filter = 1

# Do not accept source routing
net.ipv4.conf.default.accept_source_route = 0

# Controls the System Request debugging functionality of the kernel
kernel.sysrq = 1

# Controls whether core dumps will append the PID to the core filename.
# Useful for debugging multi-threaded applications.
kernel.core_uses_pid = 1
# Controls the default maxmimum size of a mesage queue
kernel.msgmnb = 65536

# Controls the maximum size of a message, in bytes
kernel.msgmax = 65536

# Controls the maximum shared segment size, in bytes
#kernel.shmmax = 68719476736
kernel.shmmax = 500000000

# Controls the maximum number of shared memory segments, in pages
kernel.shmall = 4294967296
kernel.sem = 250 512000 100 2048

kernel.core_pattern = core-%e-%p-%t

kernel.shmmni = 4096
kernel.msgmni = 2048

# Controls the use of TCP syncookies
net.ipv4.tcp_syncookies = 1

# Disable netfilter on bridges.
#net.bridge.bridge-nf-call-ip6tables = 0
#net.bridge.bridge-nf-call-iptables = 0
#net.bridge.bridge-nf-call-arptables = 0

vm.max_map_count=655360

#TCP选项
#表示开启SYN Cookies。当出现SYN等待队列溢出时，启用cookies来处理，可防范少量SYN攻击，默认为0，表示关闭；
net.ipv4.tcp_syncookies = 1
#表示如果套接字由本端要求关闭,这个参数决定了它保持在FIN-WAIT-2状态的时间
net.ipv4.tcp_fin_timeout = 30
#表示开启重用。允许将TIME-WAIT sockets重新用于新的TCP连接，默认为0，表示关闭；
net.ipv4.tcp_tw_reuse = 1
#表示开启TCP连接中TIME-WAIT sockets的快速回收，默认为0，表示关闭。
net.ipv4.tcp_tw_recycle = 1
#进入SYN包的最大请求队列（还未获得对方确认的连接请求）.默认1024.对重负载服务器,增加该值显然有好处.可调整到16384/32768/65535
net.ipv4.tcp_max_syn_backlog = 4096
#该参数设置系统的TIME_WAIT的数量，如果超过默认值则会被立即清除
net.ipv4.tcp_max_tw_buckets = 20000
#TCP写buffer,可参考的优化值:873200/1746400/3492800/6985600
net.ipv4.tcp_wmem = 873200 1746400 3492800
#TCP读buffer,可参考的优化值:873200/1746400/3492800/6985600
net.ipv4.tcp_rmem = 873200 1746400 3492800
#TCP失败重传次数,默认值15,意味着重传15次才彻底放弃.可减少到5,以尽早释放内核资源
net.ipv4.tcp_retries2 = 5
#以下3个参数与TCP KeepAlive有关.默认值是:
#tcp_keepalive_time = 7200 seconds (2 hours)
#tcp_keepalive_probes = 9
#tcp_keepalive_intvl = 75 seconds
#意思是如果某个TCP连接在idle 2个小时后,内核才发起probe.如果probe 9次(每次75秒)不成功,内核才彻底放弃,认为该连接已失效
#对服务器而言,显然上述值太大.可调整到:
net.ipv4.tcp_keepalive_time = 1800
net.ipv4.tcp_keepalive_probes = 3
net.ipv4.tcp_keepalive_intvl = 30
#对于一个新建连接,内核要发送多少个SYN连接请求才决定放弃.不应该大于255,默认值是5,对应于180秒左右时间.对于大负载,可修改为2.是针对对外的连接
net.ipv4.tcp_syn_retries = 2
#对于远端的连接请求SYN,内核会发送SYN+ACK数据报,以确认收到上一个 SYN连接请求包.
#这是所谓的三次握手机制的第二个步骤.这里决定内核在放弃连接之前所送出的SYN+ACK数目.
#不应该大于255,默认值是5,对应于180秒左右时间.可以根据上面的tcp_syn_retries来决定这个值
net.ipv4.tcp_synack_retries = 2

#SOCKET选项
#缺省socket写buffer,可参考的优化值:873200/1746400/3492800
net.core.wmem_default = 1746400
#最大socket写buffer,可参考的优化值:1746400/3492800/6985600
net.core.wmem_max = 3492800
#缺省socket读buffer,可参考的优化值:873200/1746400/3492800
net.core.rmem_default = 1746400
#最大socket读buffer,可参考的优化值:1746400/3492800/6985600
net.core.rmem_max = 3492800
#每个网络接口接收数据包的最大数目队列.默认是1000,对重负载服务器而言(网络接口接收速度大于内核处理处理速度),该值太低,可调整到16384/32768/65535
net.core.netdev_max_backlog = 10000
#listen()的默认参数,挂起请求的最大数量.默认是128.对繁忙的服务器,增加该值有助于网络性能.可调整到8192/16384/32768
net.core.somaxconn = 327680
#每个socket buffer的最大补助缓存大小,默认10K(10240),也可调整到20k(20480),但建议保留
net.core.optmem_max = 10240

#文件选项
#系统所有进程一共可以打开的文件数量
fs.file-max = 6815744

#防火墙选项
#防火墙跟踪表的大小。注意：如果防火墙没开则会提示error: "net.netfilter.nf_conntrack_max" is an unknown key，忽略即可
#net.netfilter.nf_conntrack_max = 2621440
#如果高负载系统使用了netfilter/iptables，调整以下参数 
#net.ipv4.ip_conntrack_max = 655360
#在内核内存中netfilter可以同时处理的“任务”（连接跟踪条目） 
#net.ipv4.netfilter.ip_conntrack_tcp_timeout_established = 180

#端口选项
#表示用于向外连接的端口范围。缺省情况下很小：32768到61000，改为1024到65000。
net.ipv4.ip_local_port_range = 1025 65535

#其它的一些设置
#路由缓存刷新频率， 当一个路由失败后多长时间跳到另一个,默认是300
net.ipv4.route.gc_timeout = 100

vm.overcommit_memory = 2
vm.overcommit_ratio = 90

net.ipv4.conf.all.arp_filter = 1