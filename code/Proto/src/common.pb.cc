// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common.proto

#include "common.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_common_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BUSI_CARD_CONTENT;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_JSON_CONTENT;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LOCATION_CONTENT;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PICTURE_CONTENT;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RED_PKT_CONTENT;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RISK_WARNING;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SHARE_CONTENT;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TEXT_CONTENT;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_VOICE_CONTENT;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_group_tag;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_user_info;
}  // namespace protobuf_common_2eproto
namespace common {
class msg_contentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<msg_content>
      _instance;
} _msg_content_default_instance_;
class TEXT_CONTENTDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TEXT_CONTENT>
      _instance;
} _TEXT_CONTENT_default_instance_;
class PICTURE_CONTENTDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PICTURE_CONTENT>
      _instance;
} _PICTURE_CONTENT_default_instance_;
class VOICE_CONTENTDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VOICE_CONTENT>
      _instance;
} _VOICE_CONTENT_default_instance_;
class BUSI_CARD_CONTENTDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BUSI_CARD_CONTENT>
      _instance;
} _BUSI_CARD_CONTENT_default_instance_;
class LOCATION_CONTENTDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LOCATION_CONTENT>
      _instance;
} _LOCATION_CONTENT_default_instance_;
class RED_PKT_CONTENTDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RED_PKT_CONTENT>
      _instance;
} _RED_PKT_CONTENT_default_instance_;
class SHARE_CONTENTDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SHARE_CONTENT>
      _instance;
} _SHARE_CONTENT_default_instance_;
class JSON_CONTENTDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<JSON_CONTENT>
      _instance;
} _JSON_CONTENT_default_instance_;
class RISK_WARNINGDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RISK_WARNING>
      _instance;
} _RISK_WARNING_default_instance_;
class errorinfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<errorinfo>
      _instance;
} _errorinfo_default_instance_;
class user_infoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<user_info>
      _instance;
} _user_info_default_instance_;
class auto_attention_friend_infoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<auto_attention_friend_info>
      _instance;
} _auto_attention_friend_info_default_instance_;
class friend_infoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<friend_info>
      _instance;
} _friend_info_default_instance_;
class group_infoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<group_info>
      _instance;
} _group_info_default_instance_;
class user_group_summaryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<user_group_summary>
      _instance;
} _user_group_summary_default_instance_;
class group_member_infoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<group_member_info>
      _instance;
} _group_member_info_default_instance_;
class project_group_member_infoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<project_group_member_info>
      _instance;
} _project_group_member_info_default_instance_;
class group_tagDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<group_tag>
      _instance;
} _group_tag_default_instance_;
class red_packet_infoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<red_packet_info>
      _instance;
} _red_packet_info_default_instance_;
class project_infoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<project_info>
      _instance;
} _project_info_default_instance_;
class project_friendDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<project_friend>
      _instance;
} _project_friend_default_instance_;
}  // namespace common
namespace protobuf_common_2eproto {
static void InitDefaultsmsg_content() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::common::_msg_content_default_instance_;
    new (ptr) ::common::msg_content();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::msg_content::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<9> scc_info_msg_content =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 9, InitDefaultsmsg_content}, {
      &protobuf_common_2eproto::scc_info_TEXT_CONTENT.base,
      &protobuf_common_2eproto::scc_info_PICTURE_CONTENT.base,
      &protobuf_common_2eproto::scc_info_VOICE_CONTENT.base,
      &protobuf_common_2eproto::scc_info_BUSI_CARD_CONTENT.base,
      &protobuf_common_2eproto::scc_info_LOCATION_CONTENT.base,
      &protobuf_common_2eproto::scc_info_RED_PKT_CONTENT.base,
      &protobuf_common_2eproto::scc_info_SHARE_CONTENT.base,
      &protobuf_common_2eproto::scc_info_JSON_CONTENT.base,
      &protobuf_common_2eproto::scc_info_RISK_WARNING.base,}};

static void InitDefaultsTEXT_CONTENT() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::common::_TEXT_CONTENT_default_instance_;
    new (ptr) ::common::TEXT_CONTENT();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::TEXT_CONTENT::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TEXT_CONTENT =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTEXT_CONTENT}, {}};

static void InitDefaultsPICTURE_CONTENT() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::common::_PICTURE_CONTENT_default_instance_;
    new (ptr) ::common::PICTURE_CONTENT();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::PICTURE_CONTENT::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PICTURE_CONTENT =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPICTURE_CONTENT}, {}};

static void InitDefaultsVOICE_CONTENT() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::common::_VOICE_CONTENT_default_instance_;
    new (ptr) ::common::VOICE_CONTENT();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::VOICE_CONTENT::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VOICE_CONTENT =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVOICE_CONTENT}, {}};

static void InitDefaultsBUSI_CARD_CONTENT() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::common::_BUSI_CARD_CONTENT_default_instance_;
    new (ptr) ::common::BUSI_CARD_CONTENT();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::BUSI_CARD_CONTENT::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BUSI_CARD_CONTENT =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBUSI_CARD_CONTENT}, {}};

static void InitDefaultsLOCATION_CONTENT() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::common::_LOCATION_CONTENT_default_instance_;
    new (ptr) ::common::LOCATION_CONTENT();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::LOCATION_CONTENT::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LOCATION_CONTENT =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLOCATION_CONTENT}, {}};

static void InitDefaultsRED_PKT_CONTENT() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::common::_RED_PKT_CONTENT_default_instance_;
    new (ptr) ::common::RED_PKT_CONTENT();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::RED_PKT_CONTENT::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RED_PKT_CONTENT =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRED_PKT_CONTENT}, {}};

static void InitDefaultsSHARE_CONTENT() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::common::_SHARE_CONTENT_default_instance_;
    new (ptr) ::common::SHARE_CONTENT();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::SHARE_CONTENT::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SHARE_CONTENT =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSHARE_CONTENT}, {}};

static void InitDefaultsJSON_CONTENT() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::common::_JSON_CONTENT_default_instance_;
    new (ptr) ::common::JSON_CONTENT();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::JSON_CONTENT::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_JSON_CONTENT =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsJSON_CONTENT}, {}};

static void InitDefaultsRISK_WARNING() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::common::_RISK_WARNING_default_instance_;
    new (ptr) ::common::RISK_WARNING();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::RISK_WARNING::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RISK_WARNING =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRISK_WARNING}, {}};

static void InitDefaultserrorinfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::common::_errorinfo_default_instance_;
    new (ptr) ::common::errorinfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::errorinfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_errorinfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultserrorinfo}, {}};

static void InitDefaultsuser_info() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::common::_user_info_default_instance_;
    new (ptr) ::common::user_info();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::user_info::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_user_info =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsuser_info}, {}};

static void InitDefaultsauto_attention_friend_info() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::common::_auto_attention_friend_info_default_instance_;
    new (ptr) ::common::auto_attention_friend_info();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::auto_attention_friend_info::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_auto_attention_friend_info =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsauto_attention_friend_info}, {}};

static void InitDefaultsfriend_info() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::common::_friend_info_default_instance_;
    new (ptr) ::common::friend_info();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::friend_info::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_friend_info =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsfriend_info}, {}};

static void InitDefaultsgroup_info() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::common::_group_info_default_instance_;
    new (ptr) ::common::group_info();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::group_info::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_group_info =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsgroup_info}, {
      &protobuf_common_2eproto::scc_info_group_tag.base,}};

static void InitDefaultsuser_group_summary() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::common::_user_group_summary_default_instance_;
    new (ptr) ::common::user_group_summary();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::user_group_summary::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_user_group_summary =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsuser_group_summary}, {}};

static void InitDefaultsgroup_member_info() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::common::_group_member_info_default_instance_;
    new (ptr) ::common::group_member_info();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::group_member_info::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_group_member_info =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsgroup_member_info}, {}};

static void InitDefaultsproject_group_member_info() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::common::_project_group_member_info_default_instance_;
    new (ptr) ::common::project_group_member_info();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::project_group_member_info::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_project_group_member_info =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsproject_group_member_info}, {}};

static void InitDefaultsgroup_tag() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::common::_group_tag_default_instance_;
    new (ptr) ::common::group_tag();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::group_tag::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_group_tag =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsgroup_tag}, {}};

static void InitDefaultsred_packet_info() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::common::_red_packet_info_default_instance_;
    new (ptr) ::common::red_packet_info();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::red_packet_info::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_red_packet_info =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsred_packet_info}, {}};

static void InitDefaultsproject_info() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::common::_project_info_default_instance_;
    new (ptr) ::common::project_info();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::project_info::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_project_info =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsproject_info}, {}};

static void InitDefaultsproject_friend() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::common::_project_friend_default_instance_;
    new (ptr) ::common::project_friend();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::project_friend::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_project_friend =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsproject_friend}, {
      &protobuf_common_2eproto::scc_info_user_info.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_msg_content.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TEXT_CONTENT.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PICTURE_CONTENT.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VOICE_CONTENT.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BUSI_CARD_CONTENT.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LOCATION_CONTENT.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RED_PKT_CONTENT.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SHARE_CONTENT.base);
  ::google::protobuf::internal::InitSCC(&scc_info_JSON_CONTENT.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RISK_WARNING.base);
  ::google::protobuf::internal::InitSCC(&scc_info_errorinfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_user_info.base);
  ::google::protobuf::internal::InitSCC(&scc_info_auto_attention_friend_info.base);
  ::google::protobuf::internal::InitSCC(&scc_info_friend_info.base);
  ::google::protobuf::internal::InitSCC(&scc_info_group_info.base);
  ::google::protobuf::internal::InitSCC(&scc_info_user_group_summary.base);
  ::google::protobuf::internal::InitSCC(&scc_info_group_member_info.base);
  ::google::protobuf::internal::InitSCC(&scc_info_project_group_member_info.base);
  ::google::protobuf::internal::InitSCC(&scc_info_group_tag.base);
  ::google::protobuf::internal::InitSCC(&scc_info_red_packet_info.base);
  ::google::protobuf::internal::InitSCC(&scc_info_project_info.base);
  ::google::protobuf::internal::InitSCC(&scc_info_project_friend.base);
}

::google::protobuf::Metadata file_level_metadata[22];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg_content, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg_content, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg_content, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg_content, picture_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg_content, voice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg_content, card_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg_content, location_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg_content, redpkt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg_content, share_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg_content, json_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg_content, waring_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::TEXT_CONTENT, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::TEXT_CONTENT, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::TEXT_CONTENT, msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::TEXT_CONTENT, remind_user_list_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::PICTURE_CONTENT, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::PICTURE_CONTENT, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::PICTURE_CONTENT, picture_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::PICTURE_CONTENT, thumb_pic_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::PICTURE_CONTENT, thumb_width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::PICTURE_CONTENT, thumb_hight_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::VOICE_CONTENT, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::VOICE_CONTENT, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::VOICE_CONTENT, voice_len_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::VOICE_CONTENT, voice_url_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::BUSI_CARD_CONTENT, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::BUSI_CARD_CONTENT, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::BUSI_CARD_CONTENT, card_user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::BUSI_CARD_CONTENT, card_user_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::BUSI_CARD_CONTENT, card_user_url_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::LOCATION_CONTENT, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::LOCATION_CONTENT, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::LOCATION_CONTENT, location_pic_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::LOCATION_CONTENT, longitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::LOCATION_CONTENT, latitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::LOCATION_CONTENT, location_addr_),
  0,
  2,
  3,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::RED_PKT_CONTENT, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::RED_PKT_CONTENT, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::RED_PKT_CONTENT, red_pkg_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::RED_PKT_CONTENT, red_pkg_message_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::SHARE_CONTENT, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::SHARE_CONTENT, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::SHARE_CONTENT, msg_share_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::SHARE_CONTENT, json_msgbody_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::JSON_CONTENT, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::JSON_CONTENT, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::JSON_CONTENT, json_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::JSON_CONTENT, json_body_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::RISK_WARNING, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::RISK_WARNING, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::RISK_WARNING, msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::RISK_WARNING, warning_type_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::errorinfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::errorinfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::errorinfo, error_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::errorinfo, error_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::errorinfo, error_client_show_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::user_info, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::user_info, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::user_info, imid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::user_info, nickname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::user_info, avatar_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::user_info, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::user_info, introduction_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::user_info, sex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::user_info, user_identity_),
  4,
  0,
  1,
  2,
  3,
  5,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::auto_attention_friend_info, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::auto_attention_friend_info, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::auto_attention_friend_info, imid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::auto_attention_friend_info, remark_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::friend_info, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::friend_info, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::friend_info, imid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::friend_info, nickname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::friend_info, avatar_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::friend_info, remark_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::friend_info, relation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::friend_info, guid_),
  4,
  0,
  1,
  2,
  5,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::group_info, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::group_info, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::group_info, group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::group_info, group_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::group_info, avatar_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::group_info, group_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::group_info, group_theme_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::group_info, introduce_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::group_info, is_valid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::group_info, group_scale_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::group_info, is_public_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::group_info, join_verify_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::group_info, group_location_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::group_info, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::group_info, tag_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::group_info, group_member_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::group_info, owner_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::group_info, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::group_info, create_time_),
  8,
  0,
  1,
  9,
  2,
  3,
  10,
  11,
  12,
  13,
  4,
  5,
  ~0u,
  14,
  15,
  6,
  7,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::user_group_summary, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::user_group_summary, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::user_group_summary, group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::user_group_summary, group_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::user_group_summary, group_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::user_group_summary, group_avatar_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::user_group_summary, in_group_role_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::user_group_summary, in_project_role_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::user_group_summary, block_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::user_group_summary, group_member_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::user_group_summary, record_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::user_group_summary, project_id_),
  4,
  0,
  5,
  1,
  6,
  7,
  8,
  9,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::group_member_info, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::group_member_info, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::group_member_info, group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::group_member_info, imid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::group_member_info, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::group_member_info, nick_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::group_member_info, avatar_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::group_member_info, join_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::group_member_info, group_role_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::group_member_info, block_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::group_member_info, project_role_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::group_member_info, liveness_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::group_member_info, member_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::group_member_info, update_time_),
  5,
  6,
  0,
  1,
  2,
  3,
  7,
  8,
  9,
  10,
  11,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::project_group_member_info, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::project_group_member_info, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::project_group_member_info, imid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::project_group_member_info, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::project_group_member_info, project_role_),
  1,
  0,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::group_tag, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::group_tag, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::group_tag, groupid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::group_tag, tag_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::group_tag, group_sum_),
  1,
  0,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::red_packet_info, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::red_packet_info, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::red_packet_info, red_packet_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::project_info, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::project_info, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::project_info, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::project_info, project_name_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::project_friend, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::project_friend, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::project_friend, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::project_friend, user_),
  1,
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 14, sizeof(::common::msg_content)},
  { 23, 30, sizeof(::common::TEXT_CONTENT)},
  { 32, 41, sizeof(::common::PICTURE_CONTENT)},
  { 45, 52, sizeof(::common::VOICE_CONTENT)},
  { 54, 62, sizeof(::common::BUSI_CARD_CONTENT)},
  { 65, 74, sizeof(::common::LOCATION_CONTENT)},
  { 78, 85, sizeof(::common::RED_PKT_CONTENT)},
  { 87, 94, sizeof(::common::SHARE_CONTENT)},
  { 96, 103, sizeof(::common::JSON_CONTENT)},
  { 105, 112, sizeof(::common::RISK_WARNING)},
  { 114, 122, sizeof(::common::errorinfo)},
  { 125, 137, sizeof(::common::user_info)},
  { 144, 151, sizeof(::common::auto_attention_friend_info)},
  { 153, 164, sizeof(::common::friend_info)},
  { 170, 192, sizeof(::common::group_info)},
  { 209, 224, sizeof(::common::user_group_summary)},
  { 234, 251, sizeof(::common::group_member_info)},
  { 263, 271, sizeof(::common::project_group_member_info)},
  { 274, 282, sizeof(::common::group_tag)},
  { 285, 291, sizeof(::common::red_packet_info)},
  { 292, 299, sizeof(::common::project_info)},
  { 301, 308, sizeof(::common::project_friend)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::_msg_content_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::_TEXT_CONTENT_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::_PICTURE_CONTENT_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::_VOICE_CONTENT_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::_BUSI_CARD_CONTENT_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::_LOCATION_CONTENT_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::_RED_PKT_CONTENT_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::_SHARE_CONTENT_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::_JSON_CONTENT_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::_RISK_WARNING_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::_errorinfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::_user_info_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::_auto_attention_friend_info_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::_friend_info_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::_group_info_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::_user_group_summary_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::_group_member_info_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::_project_group_member_info_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::_group_tag_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::_red_packet_info_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::_project_info_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::_project_friend_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "common.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 22);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014common.proto\022\006common\"\357\002\n\013msg_content\022\""
      "\n\004text\030\001 \001(\0132\024.common.TEXT_CONTENT\022(\n\007pi"
      "cture\030\002 \001(\0132\027.common.PICTURE_CONTENT\022$\n\005"
      "voice\030\003 \001(\0132\025.common.VOICE_CONTENT\022\'\n\004ca"
      "rd\030\004 \001(\0132\031.common.BUSI_CARD_CONTENT\022*\n\010l"
      "ocation\030\005 \001(\0132\030.common.LOCATION_CONTENT\022"
      "\'\n\006redpkt\030\006 \001(\0132\027.common.RED_PKT_CONTENT"
      "\022$\n\005share\030\007 \001(\0132\025.common.SHARE_CONTENT\022\""
      "\n\004json\030\010 \001(\0132\024.common.JSON_CONTENT\022$\n\006wa"
      "ring\030\t \001(\0132\024.common.RISK_WARNING\"5\n\014TEXT"
      "_CONTENT\022\013\n\003msg\030\001 \002(\014\022\030\n\020remind_user_lis"
      "t\030\002 \003(\r\"c\n\017PICTURE_CONTENT\022\023\n\013picture_ur"
      "l\030\001 \002(\014\022\021\n\tthumb_pic\030\002 \002(\014\022\023\n\013thumb_widt"
      "h\030\003 \002(\r\022\023\n\013thumb_hight\030\004 \002(\r\"5\n\rVOICE_CO"
      "NTENT\022\021\n\tvoice_len\030\001 \002(\r\022\021\n\tvoice_url\030\002 "
      "\002(\014\"X\n\021BUSI_CARD_CONTENT\022\024\n\014card_user_id"
      "\030\001 \002(\r\022\026\n\016card_user_name\030\002 \002(\014\022\025\n\rcard_u"
      "ser_url\030\003 \002(\014\"h\n\020LOCATION_CONTENT\022\030\n\020loc"
      "ation_pic_url\030\001 \002(\014\022\021\n\tlongitude\030\002 \002(\001\022\020"
      "\n\010latitude\030\003 \002(\001\022\025\n\rlocation_addr\030\004 \002(\014\""
      ">\n\017RED_PKT_CONTENT\022\022\n\nred_pkg_id\030\001 \002(\r\022\027"
      "\n\017red_pkg_message\030\002 \002(\014\"=\n\rSHARE_CONTENT"
      "\022\026\n\016msg_share_type\030\001 \002(\r\022\024\n\014json_msgbody"
      "\030\002 \002(\014\"4\n\014JSON_CONTENT\022\021\n\tjson_type\030\001 \001("
      "\r\022\021\n\tjson_body\030\002 \002(\014\"1\n\014RISK_WARNING\022\013\n\003"
      "msg\030\001 \002(\014\022\024\n\014warning_type\030\002 \002(\r\"N\n\terror"
      "info\022\022\n\nerror_code\030\001 \002(\005\022\022\n\nerror_info\030\002"
      " \001(\014\022\031\n\021error_client_show\030\003 \001(\014\"\207\001\n\tuser"
      "_info\022\014\n\004imid\030\001 \002(\r\022\020\n\010nickname\030\002 \001(\014\022\022\n"
      "\navatar_url\030\003 \001(\014\022\014\n\004guid\030\004 \001(\014\022\024\n\014intro"
      "duction\030\005 \001(\014\022\013\n\003sex\030\006 \001(\r\022\025\n\ruser_ident"
      "ity\030\007 \002(\004\":\n\032auto_attention_friend_info\022"
      "\014\n\004imid\030\001 \002(\r\022\016\n\006remark\030\002 \002(\014\"q\n\013friend_"
      "info\022\014\n\004imid\030\001 \002(\r\022\020\n\010nickname\030\002 \001(\014\022\022\n\n"
      "avatar_url\030\003 \001(\014\022\016\n\006remark\030\004 \001(\014\022\020\n\010rela"
      "tion\030\005 \001(\r\022\014\n\004guid\030\006 \001(\014\"\366\002\n\ngroup_info\022"
      "\020\n\010group_id\030\001 \002(\r\022\022\n\ngroup_name\030\002 \001(\014\022\022\n"
      "\navatar_url\030\003 \001(\014\022\022\n\ngroup_type\030\004 \001(\r\022\023\n"
      "\013group_theme\030\005 \001(\014\022\021\n\tintroduce\030\006 \001(\014\022\020\n"
      "\010is_valid\030\007 \001(\r\022\023\n\013group_scale\030\010 \001(\r\022\021\n\t"
      "is_public\030\t \001(\r\022\030\n\020join_verify_type\030\n \001("
      "\r\022\026\n\016group_location\030\013 \001(\014\022\022\n\nproject_id\030"
      "\014 \001(\014\022#\n\010tag_list\030\r \003(\0132\021.common.group_t"
      "ag\022\030\n\020group_member_num\030\016 \001(\r\022\020\n\010owner_id"
      "\030\017 \002(\r\022\014\n\004guid\030\020 \002(\014\022\023\n\013create_time\030\021 \001("
      "\014\"\357\001\n\022user_group_summary\022\020\n\010group_id\030\001 \002"
      "(\r\022\022\n\ngroup_name\030\002 \002(\014\022\022\n\ngroup_type\030\003 \002"
      "(\r\022\030\n\020group_avatar_url\030\004 \002(\014\022\025\n\rin_group"
      "_role\030\005 \002(\r\022\027\n\017in_project_role\030\006 \001(\r\022\022\n\n"
      "block_type\030\007 \002(\r\022\030\n\020group_member_num\030\010 \002"
      "(\r\022\023\n\013record_time\030\n \001(\014\022\022\n\nproject_id\030\013 "
      "\001(\014\"\363\001\n\021group_member_info\022\020\n\010group_id\030\001 "
      "\002(\r\022\014\n\004imid\030\002 \002(\r\022\014\n\004guid\030\003 \002(\014\022\021\n\tnick_"
      "name\030\004 \001(\014\022\016\n\006avatar\030\005 \001(\014\022\021\n\tjoin_time\030"
      "\006 \001(\014\022\022\n\ngroup_role\030\007 \001(\r\022\022\n\nblock_type\030"
      "\010 \001(\r\022\024\n\014project_role\030\t \001(\r\022\020\n\010liveness\030"
      "\n \001(\r\022\025\n\rmember_status\030\013 \001(\r\022\023\n\013update_t"
      "ime\030\014 \001(\t\"M\n\031project_group_member_info\022\014"
      "\n\004imid\030\001 \002(\r\022\014\n\004guid\030\002 \002(\014\022\024\n\014project_ro"
      "le\030\t \001(\r\"A\n\tgroup_tag\022\017\n\007groupId\030\001 \001(\r\022\020"
      "\n\010tag_name\030\002 \001(\014\022\021\n\tgroup_sum\030\003 \001(\r\"(\n\017r"
      "ed_packet_info\022\025\n\rred_packet_id\030\001 \001(\003\"8\n"
      "\014project_info\022\022\n\nproject_id\030\001 \001(\014\022\024\n\014pro"
      "ject_name\030\002 \001(\014\"\?\n\016project_friend\022\014\n\004typ"
      "e\030\001 \001(\r\022\037\n\004user\030\002 \002(\0132\021.common.user_info"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2600);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "common.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_common_2eproto
namespace common {

// ===================================================================

void msg_content::InitAsDefaultInstance() {
  ::common::_msg_content_default_instance_._instance.get_mutable()->text_ = const_cast< ::common::TEXT_CONTENT*>(
      ::common::TEXT_CONTENT::internal_default_instance());
  ::common::_msg_content_default_instance_._instance.get_mutable()->picture_ = const_cast< ::common::PICTURE_CONTENT*>(
      ::common::PICTURE_CONTENT::internal_default_instance());
  ::common::_msg_content_default_instance_._instance.get_mutable()->voice_ = const_cast< ::common::VOICE_CONTENT*>(
      ::common::VOICE_CONTENT::internal_default_instance());
  ::common::_msg_content_default_instance_._instance.get_mutable()->card_ = const_cast< ::common::BUSI_CARD_CONTENT*>(
      ::common::BUSI_CARD_CONTENT::internal_default_instance());
  ::common::_msg_content_default_instance_._instance.get_mutable()->location_ = const_cast< ::common::LOCATION_CONTENT*>(
      ::common::LOCATION_CONTENT::internal_default_instance());
  ::common::_msg_content_default_instance_._instance.get_mutable()->redpkt_ = const_cast< ::common::RED_PKT_CONTENT*>(
      ::common::RED_PKT_CONTENT::internal_default_instance());
  ::common::_msg_content_default_instance_._instance.get_mutable()->share_ = const_cast< ::common::SHARE_CONTENT*>(
      ::common::SHARE_CONTENT::internal_default_instance());
  ::common::_msg_content_default_instance_._instance.get_mutable()->json_ = const_cast< ::common::JSON_CONTENT*>(
      ::common::JSON_CONTENT::internal_default_instance());
  ::common::_msg_content_default_instance_._instance.get_mutable()->waring_ = const_cast< ::common::RISK_WARNING*>(
      ::common::RISK_WARNING::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int msg_content::kTextFieldNumber;
const int msg_content::kPictureFieldNumber;
const int msg_content::kVoiceFieldNumber;
const int msg_content::kCardFieldNumber;
const int msg_content::kLocationFieldNumber;
const int msg_content::kRedpktFieldNumber;
const int msg_content::kShareFieldNumber;
const int msg_content::kJsonFieldNumber;
const int msg_content::kWaringFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

msg_content::msg_content()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_common_2eproto::scc_info_msg_content.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.msg_content)
}
msg_content::msg_content(const msg_content& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_text()) {
    text_ = new ::common::TEXT_CONTENT(*from.text_);
  } else {
    text_ = NULL;
  }
  if (from.has_picture()) {
    picture_ = new ::common::PICTURE_CONTENT(*from.picture_);
  } else {
    picture_ = NULL;
  }
  if (from.has_voice()) {
    voice_ = new ::common::VOICE_CONTENT(*from.voice_);
  } else {
    voice_ = NULL;
  }
  if (from.has_card()) {
    card_ = new ::common::BUSI_CARD_CONTENT(*from.card_);
  } else {
    card_ = NULL;
  }
  if (from.has_location()) {
    location_ = new ::common::LOCATION_CONTENT(*from.location_);
  } else {
    location_ = NULL;
  }
  if (from.has_redpkt()) {
    redpkt_ = new ::common::RED_PKT_CONTENT(*from.redpkt_);
  } else {
    redpkt_ = NULL;
  }
  if (from.has_share()) {
    share_ = new ::common::SHARE_CONTENT(*from.share_);
  } else {
    share_ = NULL;
  }
  if (from.has_json()) {
    json_ = new ::common::JSON_CONTENT(*from.json_);
  } else {
    json_ = NULL;
  }
  if (from.has_waring()) {
    waring_ = new ::common::RISK_WARNING(*from.waring_);
  } else {
    waring_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:common.msg_content)
}

void msg_content::SharedCtor() {
  ::memset(&text_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&waring_) -
      reinterpret_cast<char*>(&text_)) + sizeof(waring_));
}

msg_content::~msg_content() {
  // @@protoc_insertion_point(destructor:common.msg_content)
  SharedDtor();
}

void msg_content::SharedDtor() {
  if (this != internal_default_instance()) delete text_;
  if (this != internal_default_instance()) delete picture_;
  if (this != internal_default_instance()) delete voice_;
  if (this != internal_default_instance()) delete card_;
  if (this != internal_default_instance()) delete location_;
  if (this != internal_default_instance()) delete redpkt_;
  if (this != internal_default_instance()) delete share_;
  if (this != internal_default_instance()) delete json_;
  if (this != internal_default_instance()) delete waring_;
}

void msg_content::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* msg_content::descriptor() {
  ::protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const msg_content& msg_content::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_common_2eproto::scc_info_msg_content.base);
  return *internal_default_instance();
}


void msg_content::Clear() {
// @@protoc_insertion_point(message_clear_start:common.msg_content)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(text_ != NULL);
      text_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(picture_ != NULL);
      picture_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(voice_ != NULL);
      voice_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(card_ != NULL);
      card_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(location_ != NULL);
      location_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(redpkt_ != NULL);
      redpkt_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(share_ != NULL);
      share_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(json_ != NULL);
      json_->Clear();
    }
  }
  if (cached_has_bits & 0x00000100u) {
    GOOGLE_DCHECK(waring_ != NULL);
    waring_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool msg_content::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.msg_content)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .common.TEXT_CONTENT text = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_text()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .common.PICTURE_CONTENT picture = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_picture()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .common.VOICE_CONTENT voice = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_voice()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .common.BUSI_CARD_CONTENT card = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_card()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .common.LOCATION_CONTENT location = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_location()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .common.RED_PKT_CONTENT redpkt = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_redpkt()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .common.SHARE_CONTENT share = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_share()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .common.JSON_CONTENT json = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_json()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .common.RISK_WARNING waring = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_waring()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.msg_content)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.msg_content)
  return false;
#undef DO_
}

void msg_content::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.msg_content)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .common.TEXT_CONTENT text = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_text(), output);
  }

  // optional .common.PICTURE_CONTENT picture = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_picture(), output);
  }

  // optional .common.VOICE_CONTENT voice = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_voice(), output);
  }

  // optional .common.BUSI_CARD_CONTENT card = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_card(), output);
  }

  // optional .common.LOCATION_CONTENT location = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_location(), output);
  }

  // optional .common.RED_PKT_CONTENT redpkt = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_redpkt(), output);
  }

  // optional .common.SHARE_CONTENT share = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_share(), output);
  }

  // optional .common.JSON_CONTENT json = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_json(), output);
  }

  // optional .common.RISK_WARNING waring = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_waring(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:common.msg_content)
}

::google::protobuf::uint8* msg_content::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.msg_content)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .common.TEXT_CONTENT text = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_text(), deterministic, target);
  }

  // optional .common.PICTURE_CONTENT picture = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_picture(), deterministic, target);
  }

  // optional .common.VOICE_CONTENT voice = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_voice(), deterministic, target);
  }

  // optional .common.BUSI_CARD_CONTENT card = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_card(), deterministic, target);
  }

  // optional .common.LOCATION_CONTENT location = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_location(), deterministic, target);
  }

  // optional .common.RED_PKT_CONTENT redpkt = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_redpkt(), deterministic, target);
  }

  // optional .common.SHARE_CONTENT share = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_share(), deterministic, target);
  }

  // optional .common.JSON_CONTENT json = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_json(), deterministic, target);
  }

  // optional .common.RISK_WARNING waring = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_waring(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.msg_content)
  return target;
}

size_t msg_content::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.msg_content)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional .common.TEXT_CONTENT text = 1;
    if (has_text()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *text_);
    }

    // optional .common.PICTURE_CONTENT picture = 2;
    if (has_picture()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *picture_);
    }

    // optional .common.VOICE_CONTENT voice = 3;
    if (has_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *voice_);
    }

    // optional .common.BUSI_CARD_CONTENT card = 4;
    if (has_card()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *card_);
    }

    // optional .common.LOCATION_CONTENT location = 5;
    if (has_location()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *location_);
    }

    // optional .common.RED_PKT_CONTENT redpkt = 6;
    if (has_redpkt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *redpkt_);
    }

    // optional .common.SHARE_CONTENT share = 7;
    if (has_share()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *share_);
    }

    // optional .common.JSON_CONTENT json = 8;
    if (has_json()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *json_);
    }

  }
  // optional .common.RISK_WARNING waring = 9;
  if (has_waring()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *waring_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void msg_content::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.msg_content)
  GOOGLE_DCHECK_NE(&from, this);
  const msg_content* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const msg_content>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.msg_content)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.msg_content)
    MergeFrom(*source);
  }
}

void msg_content::MergeFrom(const msg_content& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.msg_content)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_text()->::common::TEXT_CONTENT::MergeFrom(from.text());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_picture()->::common::PICTURE_CONTENT::MergeFrom(from.picture());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_voice()->::common::VOICE_CONTENT::MergeFrom(from.voice());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_card()->::common::BUSI_CARD_CONTENT::MergeFrom(from.card());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_location()->::common::LOCATION_CONTENT::MergeFrom(from.location());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_redpkt()->::common::RED_PKT_CONTENT::MergeFrom(from.redpkt());
    }
    if (cached_has_bits & 0x00000040u) {
      mutable_share()->::common::SHARE_CONTENT::MergeFrom(from.share());
    }
    if (cached_has_bits & 0x00000080u) {
      mutable_json()->::common::JSON_CONTENT::MergeFrom(from.json());
    }
  }
  if (cached_has_bits & 0x00000100u) {
    mutable_waring()->::common::RISK_WARNING::MergeFrom(from.waring());
  }
}

void msg_content::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.msg_content)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void msg_content::CopyFrom(const msg_content& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.msg_content)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool msg_content::IsInitialized() const {
  if (has_text()) {
    if (!this->text_->IsInitialized()) return false;
  }
  if (has_picture()) {
    if (!this->picture_->IsInitialized()) return false;
  }
  if (has_voice()) {
    if (!this->voice_->IsInitialized()) return false;
  }
  if (has_card()) {
    if (!this->card_->IsInitialized()) return false;
  }
  if (has_location()) {
    if (!this->location_->IsInitialized()) return false;
  }
  if (has_redpkt()) {
    if (!this->redpkt_->IsInitialized()) return false;
  }
  if (has_share()) {
    if (!this->share_->IsInitialized()) return false;
  }
  if (has_json()) {
    if (!this->json_->IsInitialized()) return false;
  }
  if (has_waring()) {
    if (!this->waring_->IsInitialized()) return false;
  }
  return true;
}

void msg_content::Swap(msg_content* other) {
  if (other == this) return;
  InternalSwap(other);
}
void msg_content::InternalSwap(msg_content* other) {
  using std::swap;
  swap(text_, other->text_);
  swap(picture_, other->picture_);
  swap(voice_, other->voice_);
  swap(card_, other->card_);
  swap(location_, other->location_);
  swap(redpkt_, other->redpkt_);
  swap(share_, other->share_);
  swap(json_, other->json_);
  swap(waring_, other->waring_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata msg_content::GetMetadata() const {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TEXT_CONTENT::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TEXT_CONTENT::kMsgFieldNumber;
const int TEXT_CONTENT::kRemindUserListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TEXT_CONTENT::TEXT_CONTENT()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_common_2eproto::scc_info_TEXT_CONTENT.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.TEXT_CONTENT)
}
TEXT_CONTENT::TEXT_CONTENT(const TEXT_CONTENT& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      remind_user_list_(from.remind_user_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  // @@protoc_insertion_point(copy_constructor:common.TEXT_CONTENT)
}

void TEXT_CONTENT::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TEXT_CONTENT::~TEXT_CONTENT() {
  // @@protoc_insertion_point(destructor:common.TEXT_CONTENT)
  SharedDtor();
}

void TEXT_CONTENT::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TEXT_CONTENT::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TEXT_CONTENT::descriptor() {
  ::protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TEXT_CONTENT& TEXT_CONTENT::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_common_2eproto::scc_info_TEXT_CONTENT.base);
  return *internal_default_instance();
}


void TEXT_CONTENT::Clear() {
// @@protoc_insertion_point(message_clear_start:common.TEXT_CONTENT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  remind_user_list_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    msg_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TEXT_CONTENT::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.TEXT_CONTENT)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes msg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 remind_user_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16u, input, this->mutable_remind_user_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_remind_user_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.TEXT_CONTENT)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.TEXT_CONTENT)
  return false;
#undef DO_
}

void TEXT_CONTENT::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.TEXT_CONTENT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes msg = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->msg(), output);
  }

  // repeated uint32 remind_user_list = 2;
  for (int i = 0, n = this->remind_user_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->remind_user_list(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:common.TEXT_CONTENT)
}

::google::protobuf::uint8* TEXT_CONTENT::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.TEXT_CONTENT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes msg = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->msg(), target);
  }

  // repeated uint32 remind_user_list = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(2, this->remind_user_list_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.TEXT_CONTENT)
  return target;
}

size_t TEXT_CONTENT::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.TEXT_CONTENT)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required bytes msg = 1;
  if (has_msg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->msg());
  }
  // repeated uint32 remind_user_list = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->remind_user_list_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->remind_user_list_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TEXT_CONTENT::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.TEXT_CONTENT)
  GOOGLE_DCHECK_NE(&from, this);
  const TEXT_CONTENT* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TEXT_CONTENT>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.TEXT_CONTENT)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.TEXT_CONTENT)
    MergeFrom(*source);
  }
}

void TEXT_CONTENT::MergeFrom(const TEXT_CONTENT& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.TEXT_CONTENT)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  remind_user_list_.MergeFrom(from.remind_user_list_);
  if (from.has_msg()) {
    set_has_msg();
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
}

void TEXT_CONTENT::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.TEXT_CONTENT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TEXT_CONTENT::CopyFrom(const TEXT_CONTENT& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.TEXT_CONTENT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TEXT_CONTENT::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void TEXT_CONTENT::Swap(TEXT_CONTENT* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TEXT_CONTENT::InternalSwap(TEXT_CONTENT* other) {
  using std::swap;
  remind_user_list_.InternalSwap(&other->remind_user_list_);
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TEXT_CONTENT::GetMetadata() const {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PICTURE_CONTENT::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PICTURE_CONTENT::kPictureUrlFieldNumber;
const int PICTURE_CONTENT::kThumbPicFieldNumber;
const int PICTURE_CONTENT::kThumbWidthFieldNumber;
const int PICTURE_CONTENT::kThumbHightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PICTURE_CONTENT::PICTURE_CONTENT()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_common_2eproto::scc_info_PICTURE_CONTENT.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.PICTURE_CONTENT)
}
PICTURE_CONTENT::PICTURE_CONTENT(const PICTURE_CONTENT& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  picture_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_picture_url()) {
    picture_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.picture_url_);
  }
  thumb_pic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_thumb_pic()) {
    thumb_pic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.thumb_pic_);
  }
  ::memcpy(&thumb_width_, &from.thumb_width_,
    static_cast<size_t>(reinterpret_cast<char*>(&thumb_hight_) -
    reinterpret_cast<char*>(&thumb_width_)) + sizeof(thumb_hight_));
  // @@protoc_insertion_point(copy_constructor:common.PICTURE_CONTENT)
}

void PICTURE_CONTENT::SharedCtor() {
  picture_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thumb_pic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&thumb_width_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&thumb_hight_) -
      reinterpret_cast<char*>(&thumb_width_)) + sizeof(thumb_hight_));
}

PICTURE_CONTENT::~PICTURE_CONTENT() {
  // @@protoc_insertion_point(destructor:common.PICTURE_CONTENT)
  SharedDtor();
}

void PICTURE_CONTENT::SharedDtor() {
  picture_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thumb_pic_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PICTURE_CONTENT::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PICTURE_CONTENT::descriptor() {
  ::protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PICTURE_CONTENT& PICTURE_CONTENT::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_common_2eproto::scc_info_PICTURE_CONTENT.base);
  return *internal_default_instance();
}


void PICTURE_CONTENT::Clear() {
// @@protoc_insertion_point(message_clear_start:common.PICTURE_CONTENT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      picture_url_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      thumb_pic_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 12u) {
    ::memset(&thumb_width_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&thumb_hight_) -
        reinterpret_cast<char*>(&thumb_width_)) + sizeof(thumb_hight_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PICTURE_CONTENT::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.PICTURE_CONTENT)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes picture_url = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_picture_url()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes thumb_pic = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_thumb_pic()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 thumb_width = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_thumb_width();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &thumb_width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 thumb_hight = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_thumb_hight();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &thumb_hight_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.PICTURE_CONTENT)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.PICTURE_CONTENT)
  return false;
#undef DO_
}

void PICTURE_CONTENT::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.PICTURE_CONTENT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes picture_url = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->picture_url(), output);
  }

  // required bytes thumb_pic = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->thumb_pic(), output);
  }

  // required uint32 thumb_width = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->thumb_width(), output);
  }

  // required uint32 thumb_hight = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->thumb_hight(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:common.PICTURE_CONTENT)
}

::google::protobuf::uint8* PICTURE_CONTENT::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.PICTURE_CONTENT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes picture_url = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->picture_url(), target);
  }

  // required bytes thumb_pic = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->thumb_pic(), target);
  }

  // required uint32 thumb_width = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->thumb_width(), target);
  }

  // required uint32 thumb_hight = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->thumb_hight(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.PICTURE_CONTENT)
  return target;
}

size_t PICTURE_CONTENT::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:common.PICTURE_CONTENT)
  size_t total_size = 0;

  if (has_picture_url()) {
    // required bytes picture_url = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->picture_url());
  }

  if (has_thumb_pic()) {
    // required bytes thumb_pic = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->thumb_pic());
  }

  if (has_thumb_width()) {
    // required uint32 thumb_width = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->thumb_width());
  }

  if (has_thumb_hight()) {
    // required uint32 thumb_hight = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->thumb_hight());
  }

  return total_size;
}
size_t PICTURE_CONTENT::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.PICTURE_CONTENT)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required bytes picture_url = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->picture_url());

    // required bytes thumb_pic = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->thumb_pic());

    // required uint32 thumb_width = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->thumb_width());

    // required uint32 thumb_hight = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->thumb_hight());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PICTURE_CONTENT::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.PICTURE_CONTENT)
  GOOGLE_DCHECK_NE(&from, this);
  const PICTURE_CONTENT* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PICTURE_CONTENT>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.PICTURE_CONTENT)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.PICTURE_CONTENT)
    MergeFrom(*source);
  }
}

void PICTURE_CONTENT::MergeFrom(const PICTURE_CONTENT& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.PICTURE_CONTENT)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_picture_url();
      picture_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.picture_url_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_thumb_pic();
      thumb_pic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.thumb_pic_);
    }
    if (cached_has_bits & 0x00000004u) {
      thumb_width_ = from.thumb_width_;
    }
    if (cached_has_bits & 0x00000008u) {
      thumb_hight_ = from.thumb_hight_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PICTURE_CONTENT::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.PICTURE_CONTENT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PICTURE_CONTENT::CopyFrom(const PICTURE_CONTENT& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.PICTURE_CONTENT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PICTURE_CONTENT::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void PICTURE_CONTENT::Swap(PICTURE_CONTENT* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PICTURE_CONTENT::InternalSwap(PICTURE_CONTENT* other) {
  using std::swap;
  picture_url_.Swap(&other->picture_url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  thumb_pic_.Swap(&other->thumb_pic_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(thumb_width_, other->thumb_width_);
  swap(thumb_hight_, other->thumb_hight_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PICTURE_CONTENT::GetMetadata() const {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VOICE_CONTENT::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VOICE_CONTENT::kVoiceLenFieldNumber;
const int VOICE_CONTENT::kVoiceUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VOICE_CONTENT::VOICE_CONTENT()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_common_2eproto::scc_info_VOICE_CONTENT.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.VOICE_CONTENT)
}
VOICE_CONTENT::VOICE_CONTENT(const VOICE_CONTENT& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  voice_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_voice_url()) {
    voice_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.voice_url_);
  }
  voice_len_ = from.voice_len_;
  // @@protoc_insertion_point(copy_constructor:common.VOICE_CONTENT)
}

void VOICE_CONTENT::SharedCtor() {
  voice_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  voice_len_ = 0u;
}

VOICE_CONTENT::~VOICE_CONTENT() {
  // @@protoc_insertion_point(destructor:common.VOICE_CONTENT)
  SharedDtor();
}

void VOICE_CONTENT::SharedDtor() {
  voice_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void VOICE_CONTENT::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VOICE_CONTENT::descriptor() {
  ::protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VOICE_CONTENT& VOICE_CONTENT::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_common_2eproto::scc_info_VOICE_CONTENT.base);
  return *internal_default_instance();
}


void VOICE_CONTENT::Clear() {
// @@protoc_insertion_point(message_clear_start:common.VOICE_CONTENT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    voice_url_.ClearNonDefaultToEmptyNoArena();
  }
  voice_len_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VOICE_CONTENT::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.VOICE_CONTENT)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 voice_len = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_voice_len();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &voice_len_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes voice_url = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_voice_url()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.VOICE_CONTENT)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.VOICE_CONTENT)
  return false;
#undef DO_
}

void VOICE_CONTENT::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.VOICE_CONTENT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 voice_len = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->voice_len(), output);
  }

  // required bytes voice_url = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->voice_url(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:common.VOICE_CONTENT)
}

::google::protobuf::uint8* VOICE_CONTENT::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.VOICE_CONTENT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 voice_len = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->voice_len(), target);
  }

  // required bytes voice_url = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->voice_url(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.VOICE_CONTENT)
  return target;
}

size_t VOICE_CONTENT::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:common.VOICE_CONTENT)
  size_t total_size = 0;

  if (has_voice_url()) {
    // required bytes voice_url = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->voice_url());
  }

  if (has_voice_len()) {
    // required uint32 voice_len = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->voice_len());
  }

  return total_size;
}
size_t VOICE_CONTENT::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.VOICE_CONTENT)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bytes voice_url = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->voice_url());

    // required uint32 voice_len = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->voice_len());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VOICE_CONTENT::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.VOICE_CONTENT)
  GOOGLE_DCHECK_NE(&from, this);
  const VOICE_CONTENT* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VOICE_CONTENT>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.VOICE_CONTENT)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.VOICE_CONTENT)
    MergeFrom(*source);
  }
}

void VOICE_CONTENT::MergeFrom(const VOICE_CONTENT& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.VOICE_CONTENT)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_voice_url();
      voice_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.voice_url_);
    }
    if (cached_has_bits & 0x00000002u) {
      voice_len_ = from.voice_len_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void VOICE_CONTENT::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.VOICE_CONTENT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VOICE_CONTENT::CopyFrom(const VOICE_CONTENT& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.VOICE_CONTENT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VOICE_CONTENT::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void VOICE_CONTENT::Swap(VOICE_CONTENT* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VOICE_CONTENT::InternalSwap(VOICE_CONTENT* other) {
  using std::swap;
  voice_url_.Swap(&other->voice_url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(voice_len_, other->voice_len_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VOICE_CONTENT::GetMetadata() const {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BUSI_CARD_CONTENT::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BUSI_CARD_CONTENT::kCardUserIdFieldNumber;
const int BUSI_CARD_CONTENT::kCardUserNameFieldNumber;
const int BUSI_CARD_CONTENT::kCardUserUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BUSI_CARD_CONTENT::BUSI_CARD_CONTENT()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_common_2eproto::scc_info_BUSI_CARD_CONTENT.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.BUSI_CARD_CONTENT)
}
BUSI_CARD_CONTENT::BUSI_CARD_CONTENT(const BUSI_CARD_CONTENT& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  card_user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_card_user_name()) {
    card_user_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.card_user_name_);
  }
  card_user_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_card_user_url()) {
    card_user_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.card_user_url_);
  }
  card_user_id_ = from.card_user_id_;
  // @@protoc_insertion_point(copy_constructor:common.BUSI_CARD_CONTENT)
}

void BUSI_CARD_CONTENT::SharedCtor() {
  card_user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  card_user_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  card_user_id_ = 0u;
}

BUSI_CARD_CONTENT::~BUSI_CARD_CONTENT() {
  // @@protoc_insertion_point(destructor:common.BUSI_CARD_CONTENT)
  SharedDtor();
}

void BUSI_CARD_CONTENT::SharedDtor() {
  card_user_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  card_user_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BUSI_CARD_CONTENT::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BUSI_CARD_CONTENT::descriptor() {
  ::protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BUSI_CARD_CONTENT& BUSI_CARD_CONTENT::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_common_2eproto::scc_info_BUSI_CARD_CONTENT.base);
  return *internal_default_instance();
}


void BUSI_CARD_CONTENT::Clear() {
// @@protoc_insertion_point(message_clear_start:common.BUSI_CARD_CONTENT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      card_user_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      card_user_url_.ClearNonDefaultToEmptyNoArena();
    }
  }
  card_user_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BUSI_CARD_CONTENT::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.BUSI_CARD_CONTENT)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 card_user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_card_user_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &card_user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes card_user_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_card_user_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes card_user_url = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_card_user_url()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.BUSI_CARD_CONTENT)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.BUSI_CARD_CONTENT)
  return false;
#undef DO_
}

void BUSI_CARD_CONTENT::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.BUSI_CARD_CONTENT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 card_user_id = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->card_user_id(), output);
  }

  // required bytes card_user_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->card_user_name(), output);
  }

  // required bytes card_user_url = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->card_user_url(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:common.BUSI_CARD_CONTENT)
}

::google::protobuf::uint8* BUSI_CARD_CONTENT::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.BUSI_CARD_CONTENT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 card_user_id = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->card_user_id(), target);
  }

  // required bytes card_user_name = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->card_user_name(), target);
  }

  // required bytes card_user_url = 3;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->card_user_url(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.BUSI_CARD_CONTENT)
  return target;
}

size_t BUSI_CARD_CONTENT::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:common.BUSI_CARD_CONTENT)
  size_t total_size = 0;

  if (has_card_user_name()) {
    // required bytes card_user_name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->card_user_name());
  }

  if (has_card_user_url()) {
    // required bytes card_user_url = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->card_user_url());
  }

  if (has_card_user_id()) {
    // required uint32 card_user_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->card_user_id());
  }

  return total_size;
}
size_t BUSI_CARD_CONTENT::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.BUSI_CARD_CONTENT)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required bytes card_user_name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->card_user_name());

    // required bytes card_user_url = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->card_user_url());

    // required uint32 card_user_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->card_user_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BUSI_CARD_CONTENT::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.BUSI_CARD_CONTENT)
  GOOGLE_DCHECK_NE(&from, this);
  const BUSI_CARD_CONTENT* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BUSI_CARD_CONTENT>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.BUSI_CARD_CONTENT)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.BUSI_CARD_CONTENT)
    MergeFrom(*source);
  }
}

void BUSI_CARD_CONTENT::MergeFrom(const BUSI_CARD_CONTENT& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.BUSI_CARD_CONTENT)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_card_user_name();
      card_user_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.card_user_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_card_user_url();
      card_user_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.card_user_url_);
    }
    if (cached_has_bits & 0x00000004u) {
      card_user_id_ = from.card_user_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BUSI_CARD_CONTENT::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.BUSI_CARD_CONTENT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BUSI_CARD_CONTENT::CopyFrom(const BUSI_CARD_CONTENT& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.BUSI_CARD_CONTENT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BUSI_CARD_CONTENT::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void BUSI_CARD_CONTENT::Swap(BUSI_CARD_CONTENT* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BUSI_CARD_CONTENT::InternalSwap(BUSI_CARD_CONTENT* other) {
  using std::swap;
  card_user_name_.Swap(&other->card_user_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  card_user_url_.Swap(&other->card_user_url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(card_user_id_, other->card_user_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BUSI_CARD_CONTENT::GetMetadata() const {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LOCATION_CONTENT::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LOCATION_CONTENT::kLocationPicUrlFieldNumber;
const int LOCATION_CONTENT::kLongitudeFieldNumber;
const int LOCATION_CONTENT::kLatitudeFieldNumber;
const int LOCATION_CONTENT::kLocationAddrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LOCATION_CONTENT::LOCATION_CONTENT()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_common_2eproto::scc_info_LOCATION_CONTENT.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.LOCATION_CONTENT)
}
LOCATION_CONTENT::LOCATION_CONTENT(const LOCATION_CONTENT& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  location_pic_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_location_pic_url()) {
    location_pic_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_pic_url_);
  }
  location_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_location_addr()) {
    location_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_addr_);
  }
  ::memcpy(&longitude_, &from.longitude_,
    static_cast<size_t>(reinterpret_cast<char*>(&latitude_) -
    reinterpret_cast<char*>(&longitude_)) + sizeof(latitude_));
  // @@protoc_insertion_point(copy_constructor:common.LOCATION_CONTENT)
}

void LOCATION_CONTENT::SharedCtor() {
  location_pic_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&longitude_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&latitude_) -
      reinterpret_cast<char*>(&longitude_)) + sizeof(latitude_));
}

LOCATION_CONTENT::~LOCATION_CONTENT() {
  // @@protoc_insertion_point(destructor:common.LOCATION_CONTENT)
  SharedDtor();
}

void LOCATION_CONTENT::SharedDtor() {
  location_pic_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LOCATION_CONTENT::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LOCATION_CONTENT::descriptor() {
  ::protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LOCATION_CONTENT& LOCATION_CONTENT::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_common_2eproto::scc_info_LOCATION_CONTENT.base);
  return *internal_default_instance();
}


void LOCATION_CONTENT::Clear() {
// @@protoc_insertion_point(message_clear_start:common.LOCATION_CONTENT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      location_pic_url_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      location_addr_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 12u) {
    ::memset(&longitude_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&latitude_) -
        reinterpret_cast<char*>(&longitude_)) + sizeof(latitude_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LOCATION_CONTENT::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.LOCATION_CONTENT)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes location_pic_url = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_location_pic_url()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double longitude = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_longitude();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &longitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double latitude = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_latitude();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &latitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes location_addr = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_location_addr()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.LOCATION_CONTENT)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.LOCATION_CONTENT)
  return false;
#undef DO_
}

void LOCATION_CONTENT::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.LOCATION_CONTENT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes location_pic_url = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->location_pic_url(), output);
  }

  // required double longitude = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->longitude(), output);
  }

  // required double latitude = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->latitude(), output);
  }

  // required bytes location_addr = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->location_addr(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:common.LOCATION_CONTENT)
}

::google::protobuf::uint8* LOCATION_CONTENT::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.LOCATION_CONTENT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes location_pic_url = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->location_pic_url(), target);
  }

  // required double longitude = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->longitude(), target);
  }

  // required double latitude = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->latitude(), target);
  }

  // required bytes location_addr = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->location_addr(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.LOCATION_CONTENT)
  return target;
}

size_t LOCATION_CONTENT::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:common.LOCATION_CONTENT)
  size_t total_size = 0;

  if (has_location_pic_url()) {
    // required bytes location_pic_url = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->location_pic_url());
  }

  if (has_location_addr()) {
    // required bytes location_addr = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->location_addr());
  }

  if (has_longitude()) {
    // required double longitude = 2;
    total_size += 1 + 8;
  }

  if (has_latitude()) {
    // required double latitude = 3;
    total_size += 1 + 8;
  }

  return total_size;
}
size_t LOCATION_CONTENT::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.LOCATION_CONTENT)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required bytes location_pic_url = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->location_pic_url());

    // required bytes location_addr = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->location_addr());

    // required double longitude = 2;
    total_size += 1 + 8;

    // required double latitude = 3;
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LOCATION_CONTENT::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.LOCATION_CONTENT)
  GOOGLE_DCHECK_NE(&from, this);
  const LOCATION_CONTENT* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LOCATION_CONTENT>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.LOCATION_CONTENT)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.LOCATION_CONTENT)
    MergeFrom(*source);
  }
}

void LOCATION_CONTENT::MergeFrom(const LOCATION_CONTENT& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.LOCATION_CONTENT)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_location_pic_url();
      location_pic_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_pic_url_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_location_addr();
      location_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_addr_);
    }
    if (cached_has_bits & 0x00000004u) {
      longitude_ = from.longitude_;
    }
    if (cached_has_bits & 0x00000008u) {
      latitude_ = from.latitude_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LOCATION_CONTENT::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.LOCATION_CONTENT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LOCATION_CONTENT::CopyFrom(const LOCATION_CONTENT& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.LOCATION_CONTENT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LOCATION_CONTENT::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void LOCATION_CONTENT::Swap(LOCATION_CONTENT* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LOCATION_CONTENT::InternalSwap(LOCATION_CONTENT* other) {
  using std::swap;
  location_pic_url_.Swap(&other->location_pic_url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  location_addr_.Swap(&other->location_addr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(longitude_, other->longitude_);
  swap(latitude_, other->latitude_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LOCATION_CONTENT::GetMetadata() const {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RED_PKT_CONTENT::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RED_PKT_CONTENT::kRedPkgIdFieldNumber;
const int RED_PKT_CONTENT::kRedPkgMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RED_PKT_CONTENT::RED_PKT_CONTENT()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_common_2eproto::scc_info_RED_PKT_CONTENT.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.RED_PKT_CONTENT)
}
RED_PKT_CONTENT::RED_PKT_CONTENT(const RED_PKT_CONTENT& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  red_pkg_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_red_pkg_message()) {
    red_pkg_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.red_pkg_message_);
  }
  red_pkg_id_ = from.red_pkg_id_;
  // @@protoc_insertion_point(copy_constructor:common.RED_PKT_CONTENT)
}

void RED_PKT_CONTENT::SharedCtor() {
  red_pkg_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  red_pkg_id_ = 0u;
}

RED_PKT_CONTENT::~RED_PKT_CONTENT() {
  // @@protoc_insertion_point(destructor:common.RED_PKT_CONTENT)
  SharedDtor();
}

void RED_PKT_CONTENT::SharedDtor() {
  red_pkg_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RED_PKT_CONTENT::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RED_PKT_CONTENT::descriptor() {
  ::protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RED_PKT_CONTENT& RED_PKT_CONTENT::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_common_2eproto::scc_info_RED_PKT_CONTENT.base);
  return *internal_default_instance();
}


void RED_PKT_CONTENT::Clear() {
// @@protoc_insertion_point(message_clear_start:common.RED_PKT_CONTENT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    red_pkg_message_.ClearNonDefaultToEmptyNoArena();
  }
  red_pkg_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RED_PKT_CONTENT::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.RED_PKT_CONTENT)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 red_pkg_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_red_pkg_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &red_pkg_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes red_pkg_message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_red_pkg_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.RED_PKT_CONTENT)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.RED_PKT_CONTENT)
  return false;
#undef DO_
}

void RED_PKT_CONTENT::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.RED_PKT_CONTENT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 red_pkg_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->red_pkg_id(), output);
  }

  // required bytes red_pkg_message = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->red_pkg_message(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:common.RED_PKT_CONTENT)
}

::google::protobuf::uint8* RED_PKT_CONTENT::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.RED_PKT_CONTENT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 red_pkg_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->red_pkg_id(), target);
  }

  // required bytes red_pkg_message = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->red_pkg_message(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.RED_PKT_CONTENT)
  return target;
}

size_t RED_PKT_CONTENT::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:common.RED_PKT_CONTENT)
  size_t total_size = 0;

  if (has_red_pkg_message()) {
    // required bytes red_pkg_message = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->red_pkg_message());
  }

  if (has_red_pkg_id()) {
    // required uint32 red_pkg_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->red_pkg_id());
  }

  return total_size;
}
size_t RED_PKT_CONTENT::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.RED_PKT_CONTENT)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bytes red_pkg_message = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->red_pkg_message());

    // required uint32 red_pkg_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->red_pkg_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RED_PKT_CONTENT::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.RED_PKT_CONTENT)
  GOOGLE_DCHECK_NE(&from, this);
  const RED_PKT_CONTENT* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RED_PKT_CONTENT>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.RED_PKT_CONTENT)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.RED_PKT_CONTENT)
    MergeFrom(*source);
  }
}

void RED_PKT_CONTENT::MergeFrom(const RED_PKT_CONTENT& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.RED_PKT_CONTENT)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_red_pkg_message();
      red_pkg_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.red_pkg_message_);
    }
    if (cached_has_bits & 0x00000002u) {
      red_pkg_id_ = from.red_pkg_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RED_PKT_CONTENT::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.RED_PKT_CONTENT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RED_PKT_CONTENT::CopyFrom(const RED_PKT_CONTENT& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.RED_PKT_CONTENT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RED_PKT_CONTENT::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void RED_PKT_CONTENT::Swap(RED_PKT_CONTENT* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RED_PKT_CONTENT::InternalSwap(RED_PKT_CONTENT* other) {
  using std::swap;
  red_pkg_message_.Swap(&other->red_pkg_message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(red_pkg_id_, other->red_pkg_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RED_PKT_CONTENT::GetMetadata() const {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SHARE_CONTENT::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SHARE_CONTENT::kMsgShareTypeFieldNumber;
const int SHARE_CONTENT::kJsonMsgbodyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SHARE_CONTENT::SHARE_CONTENT()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_common_2eproto::scc_info_SHARE_CONTENT.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.SHARE_CONTENT)
}
SHARE_CONTENT::SHARE_CONTENT(const SHARE_CONTENT& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  json_msgbody_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_json_msgbody()) {
    json_msgbody_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.json_msgbody_);
  }
  msg_share_type_ = from.msg_share_type_;
  // @@protoc_insertion_point(copy_constructor:common.SHARE_CONTENT)
}

void SHARE_CONTENT::SharedCtor() {
  json_msgbody_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_share_type_ = 0u;
}

SHARE_CONTENT::~SHARE_CONTENT() {
  // @@protoc_insertion_point(destructor:common.SHARE_CONTENT)
  SharedDtor();
}

void SHARE_CONTENT::SharedDtor() {
  json_msgbody_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SHARE_CONTENT::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SHARE_CONTENT::descriptor() {
  ::protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SHARE_CONTENT& SHARE_CONTENT::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_common_2eproto::scc_info_SHARE_CONTENT.base);
  return *internal_default_instance();
}


void SHARE_CONTENT::Clear() {
// @@protoc_insertion_point(message_clear_start:common.SHARE_CONTENT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    json_msgbody_.ClearNonDefaultToEmptyNoArena();
  }
  msg_share_type_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SHARE_CONTENT::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.SHARE_CONTENT)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 msg_share_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_msg_share_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msg_share_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes json_msgbody = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_json_msgbody()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.SHARE_CONTENT)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.SHARE_CONTENT)
  return false;
#undef DO_
}

void SHARE_CONTENT::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.SHARE_CONTENT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 msg_share_type = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->msg_share_type(), output);
  }

  // required bytes json_msgbody = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->json_msgbody(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:common.SHARE_CONTENT)
}

::google::protobuf::uint8* SHARE_CONTENT::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.SHARE_CONTENT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 msg_share_type = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->msg_share_type(), target);
  }

  // required bytes json_msgbody = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->json_msgbody(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.SHARE_CONTENT)
  return target;
}

size_t SHARE_CONTENT::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:common.SHARE_CONTENT)
  size_t total_size = 0;

  if (has_json_msgbody()) {
    // required bytes json_msgbody = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->json_msgbody());
  }

  if (has_msg_share_type()) {
    // required uint32 msg_share_type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msg_share_type());
  }

  return total_size;
}
size_t SHARE_CONTENT::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.SHARE_CONTENT)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bytes json_msgbody = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->json_msgbody());

    // required uint32 msg_share_type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msg_share_type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SHARE_CONTENT::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.SHARE_CONTENT)
  GOOGLE_DCHECK_NE(&from, this);
  const SHARE_CONTENT* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SHARE_CONTENT>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.SHARE_CONTENT)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.SHARE_CONTENT)
    MergeFrom(*source);
  }
}

void SHARE_CONTENT::MergeFrom(const SHARE_CONTENT& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.SHARE_CONTENT)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_json_msgbody();
      json_msgbody_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.json_msgbody_);
    }
    if (cached_has_bits & 0x00000002u) {
      msg_share_type_ = from.msg_share_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SHARE_CONTENT::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.SHARE_CONTENT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SHARE_CONTENT::CopyFrom(const SHARE_CONTENT& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.SHARE_CONTENT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SHARE_CONTENT::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void SHARE_CONTENT::Swap(SHARE_CONTENT* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SHARE_CONTENT::InternalSwap(SHARE_CONTENT* other) {
  using std::swap;
  json_msgbody_.Swap(&other->json_msgbody_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msg_share_type_, other->msg_share_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SHARE_CONTENT::GetMetadata() const {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void JSON_CONTENT::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JSON_CONTENT::kJsonTypeFieldNumber;
const int JSON_CONTENT::kJsonBodyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JSON_CONTENT::JSON_CONTENT()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_common_2eproto::scc_info_JSON_CONTENT.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.JSON_CONTENT)
}
JSON_CONTENT::JSON_CONTENT(const JSON_CONTENT& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  json_body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_json_body()) {
    json_body_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.json_body_);
  }
  json_type_ = from.json_type_;
  // @@protoc_insertion_point(copy_constructor:common.JSON_CONTENT)
}

void JSON_CONTENT::SharedCtor() {
  json_body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  json_type_ = 0u;
}

JSON_CONTENT::~JSON_CONTENT() {
  // @@protoc_insertion_point(destructor:common.JSON_CONTENT)
  SharedDtor();
}

void JSON_CONTENT::SharedDtor() {
  json_body_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void JSON_CONTENT::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* JSON_CONTENT::descriptor() {
  ::protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const JSON_CONTENT& JSON_CONTENT::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_common_2eproto::scc_info_JSON_CONTENT.base);
  return *internal_default_instance();
}


void JSON_CONTENT::Clear() {
// @@protoc_insertion_point(message_clear_start:common.JSON_CONTENT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    json_body_.ClearNonDefaultToEmptyNoArena();
  }
  json_type_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool JSON_CONTENT::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.JSON_CONTENT)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 json_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_json_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &json_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes json_body = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_json_body()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.JSON_CONTENT)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.JSON_CONTENT)
  return false;
#undef DO_
}

void JSON_CONTENT::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.JSON_CONTENT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 json_type = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->json_type(), output);
  }

  // required bytes json_body = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->json_body(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:common.JSON_CONTENT)
}

::google::protobuf::uint8* JSON_CONTENT::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.JSON_CONTENT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 json_type = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->json_type(), target);
  }

  // required bytes json_body = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->json_body(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.JSON_CONTENT)
  return target;
}

size_t JSON_CONTENT::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.JSON_CONTENT)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required bytes json_body = 2;
  if (has_json_body()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->json_body());
  }
  // optional uint32 json_type = 1;
  if (has_json_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->json_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void JSON_CONTENT::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.JSON_CONTENT)
  GOOGLE_DCHECK_NE(&from, this);
  const JSON_CONTENT* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JSON_CONTENT>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.JSON_CONTENT)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.JSON_CONTENT)
    MergeFrom(*source);
  }
}

void JSON_CONTENT::MergeFrom(const JSON_CONTENT& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.JSON_CONTENT)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_json_body();
      json_body_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.json_body_);
    }
    if (cached_has_bits & 0x00000002u) {
      json_type_ = from.json_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void JSON_CONTENT::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.JSON_CONTENT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JSON_CONTENT::CopyFrom(const JSON_CONTENT& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.JSON_CONTENT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JSON_CONTENT::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void JSON_CONTENT::Swap(JSON_CONTENT* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JSON_CONTENT::InternalSwap(JSON_CONTENT* other) {
  using std::swap;
  json_body_.Swap(&other->json_body_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(json_type_, other->json_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata JSON_CONTENT::GetMetadata() const {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RISK_WARNING::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RISK_WARNING::kMsgFieldNumber;
const int RISK_WARNING::kWarningTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RISK_WARNING::RISK_WARNING()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_common_2eproto::scc_info_RISK_WARNING.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.RISK_WARNING)
}
RISK_WARNING::RISK_WARNING(const RISK_WARNING& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  warning_type_ = from.warning_type_;
  // @@protoc_insertion_point(copy_constructor:common.RISK_WARNING)
}

void RISK_WARNING::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  warning_type_ = 0u;
}

RISK_WARNING::~RISK_WARNING() {
  // @@protoc_insertion_point(destructor:common.RISK_WARNING)
  SharedDtor();
}

void RISK_WARNING::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RISK_WARNING::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RISK_WARNING::descriptor() {
  ::protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RISK_WARNING& RISK_WARNING::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_common_2eproto::scc_info_RISK_WARNING.base);
  return *internal_default_instance();
}


void RISK_WARNING::Clear() {
// @@protoc_insertion_point(message_clear_start:common.RISK_WARNING)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    msg_.ClearNonDefaultToEmptyNoArena();
  }
  warning_type_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RISK_WARNING::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.RISK_WARNING)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes msg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 warning_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_warning_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &warning_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.RISK_WARNING)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.RISK_WARNING)
  return false;
#undef DO_
}

void RISK_WARNING::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.RISK_WARNING)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes msg = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->msg(), output);
  }

  // required uint32 warning_type = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->warning_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:common.RISK_WARNING)
}

::google::protobuf::uint8* RISK_WARNING::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.RISK_WARNING)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes msg = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->msg(), target);
  }

  // required uint32 warning_type = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->warning_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.RISK_WARNING)
  return target;
}

size_t RISK_WARNING::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:common.RISK_WARNING)
  size_t total_size = 0;

  if (has_msg()) {
    // required bytes msg = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->msg());
  }

  if (has_warning_type()) {
    // required uint32 warning_type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->warning_type());
  }

  return total_size;
}
size_t RISK_WARNING::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.RISK_WARNING)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bytes msg = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->msg());

    // required uint32 warning_type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->warning_type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RISK_WARNING::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.RISK_WARNING)
  GOOGLE_DCHECK_NE(&from, this);
  const RISK_WARNING* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RISK_WARNING>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.RISK_WARNING)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.RISK_WARNING)
    MergeFrom(*source);
  }
}

void RISK_WARNING::MergeFrom(const RISK_WARNING& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.RISK_WARNING)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (cached_has_bits & 0x00000002u) {
      warning_type_ = from.warning_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RISK_WARNING::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.RISK_WARNING)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RISK_WARNING::CopyFrom(const RISK_WARNING& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.RISK_WARNING)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RISK_WARNING::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void RISK_WARNING::Swap(RISK_WARNING* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RISK_WARNING::InternalSwap(RISK_WARNING* other) {
  using std::swap;
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(warning_type_, other->warning_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RISK_WARNING::GetMetadata() const {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void errorinfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int errorinfo::kErrorCodeFieldNumber;
const int errorinfo::kErrorInfoFieldNumber;
const int errorinfo::kErrorClientShowFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

errorinfo::errorinfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_common_2eproto::scc_info_errorinfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.errorinfo)
}
errorinfo::errorinfo(const errorinfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_error_info()) {
    error_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_info_);
  }
  error_client_show_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_error_client_show()) {
    error_client_show_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_client_show_);
  }
  error_code_ = from.error_code_;
  // @@protoc_insertion_point(copy_constructor:common.errorinfo)
}

void errorinfo::SharedCtor() {
  error_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_client_show_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_code_ = 0;
}

errorinfo::~errorinfo() {
  // @@protoc_insertion_point(destructor:common.errorinfo)
  SharedDtor();
}

void errorinfo::SharedDtor() {
  error_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_client_show_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void errorinfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* errorinfo::descriptor() {
  ::protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const errorinfo& errorinfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_common_2eproto::scc_info_errorinfo.base);
  return *internal_default_instance();
}


void errorinfo::Clear() {
// @@protoc_insertion_point(message_clear_start:common.errorinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      error_info_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      error_client_show_.ClearNonDefaultToEmptyNoArena();
    }
  }
  error_code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool errorinfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.errorinfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 error_code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_error_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes error_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_error_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes error_client_show = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_error_client_show()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.errorinfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.errorinfo)
  return false;
#undef DO_
}

void errorinfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.errorinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 error_code = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->error_code(), output);
  }

  // optional bytes error_info = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->error_info(), output);
  }

  // optional bytes error_client_show = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->error_client_show(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:common.errorinfo)
}

::google::protobuf::uint8* errorinfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.errorinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 error_code = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->error_code(), target);
  }

  // optional bytes error_info = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->error_info(), target);
  }

  // optional bytes error_client_show = 3;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->error_client_show(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.errorinfo)
  return target;
}

size_t errorinfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.errorinfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 error_code = 1;
  if (has_error_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error_code());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes error_info = 2;
    if (has_error_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->error_info());
    }

    // optional bytes error_client_show = 3;
    if (has_error_client_show()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->error_client_show());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void errorinfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.errorinfo)
  GOOGLE_DCHECK_NE(&from, this);
  const errorinfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const errorinfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.errorinfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.errorinfo)
    MergeFrom(*source);
  }
}

void errorinfo::MergeFrom(const errorinfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.errorinfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_error_info();
      error_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_info_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_error_client_show();
      error_client_show_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_client_show_);
    }
    if (cached_has_bits & 0x00000004u) {
      error_code_ = from.error_code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void errorinfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.errorinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void errorinfo::CopyFrom(const errorinfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.errorinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool errorinfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  return true;
}

void errorinfo::Swap(errorinfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void errorinfo::InternalSwap(errorinfo* other) {
  using std::swap;
  error_info_.Swap(&other->error_info_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  error_client_show_.Swap(&other->error_client_show_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(error_code_, other->error_code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata errorinfo::GetMetadata() const {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void user_info::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int user_info::kImidFieldNumber;
const int user_info::kNicknameFieldNumber;
const int user_info::kAvatarUrlFieldNumber;
const int user_info::kGuidFieldNumber;
const int user_info::kIntroductionFieldNumber;
const int user_info::kSexFieldNumber;
const int user_info::kUserIdentityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

user_info::user_info()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_common_2eproto::scc_info_user_info.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.user_info)
}
user_info::user_info(const user_info& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nickname()) {
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  avatar_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_avatar_url()) {
    avatar_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.avatar_url_);
  }
  guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_guid()) {
    guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_);
  }
  introduction_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_introduction()) {
    introduction_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.introduction_);
  }
  ::memcpy(&imid_, &from.imid_,
    static_cast<size_t>(reinterpret_cast<char*>(&user_identity_) -
    reinterpret_cast<char*>(&imid_)) + sizeof(user_identity_));
  // @@protoc_insertion_point(copy_constructor:common.user_info)
}

void user_info::SharedCtor() {
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  avatar_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  introduction_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&imid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_identity_) -
      reinterpret_cast<char*>(&imid_)) + sizeof(user_identity_));
}

user_info::~user_info() {
  // @@protoc_insertion_point(destructor:common.user_info)
  SharedDtor();
}

void user_info::SharedDtor() {
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  avatar_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  introduction_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void user_info::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* user_info::descriptor() {
  ::protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const user_info& user_info::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_common_2eproto::scc_info_user_info.base);
  return *internal_default_instance();
}


void user_info::Clear() {
// @@protoc_insertion_point(message_clear_start:common.user_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      nickname_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      avatar_url_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      guid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      introduction_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 112u) {
    ::memset(&imid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&user_identity_) -
        reinterpret_cast<char*>(&imid_)) + sizeof(user_identity_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool user_info::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.user_info)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 imid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_imid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &imid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes nickname = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_nickname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes avatar_url = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_avatar_url()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes guid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_guid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes introduction = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_introduction()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 sex = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_sex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 user_identity = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_user_identity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &user_identity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.user_info)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.user_info)
  return false;
#undef DO_
}

void user_info::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.user_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 imid = 1;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->imid(), output);
  }

  // optional bytes nickname = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->nickname(), output);
  }

  // optional bytes avatar_url = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->avatar_url(), output);
  }

  // optional bytes guid = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->guid(), output);
  }

  // optional bytes introduction = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->introduction(), output);
  }

  // optional uint32 sex = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->sex(), output);
  }

  // required uint64 user_identity = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->user_identity(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:common.user_info)
}

::google::protobuf::uint8* user_info::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.user_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 imid = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->imid(), target);
  }

  // optional bytes nickname = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->nickname(), target);
  }

  // optional bytes avatar_url = 3;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->avatar_url(), target);
  }

  // optional bytes guid = 4;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->guid(), target);
  }

  // optional bytes introduction = 5;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->introduction(), target);
  }

  // optional uint32 sex = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->sex(), target);
  }

  // required uint64 user_identity = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->user_identity(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.user_info)
  return target;
}

size_t user_info::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:common.user_info)
  size_t total_size = 0;

  if (has_imid()) {
    // required uint32 imid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->imid());
  }

  if (has_user_identity()) {
    // required uint64 user_identity = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->user_identity());
  }

  return total_size;
}
size_t user_info::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.user_info)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000050) ^ 0x00000050) == 0) {  // All required fields are present.
    // required uint32 imid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->imid());

    // required uint64 user_identity = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->user_identity());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional bytes nickname = 2;
    if (has_nickname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->nickname());
    }

    // optional bytes avatar_url = 3;
    if (has_avatar_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->avatar_url());
    }

    // optional bytes guid = 4;
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->guid());
    }

    // optional bytes introduction = 5;
    if (has_introduction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->introduction());
    }

  }
  // optional uint32 sex = 6;
  if (has_sex()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sex());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void user_info::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.user_info)
  GOOGLE_DCHECK_NE(&from, this);
  const user_info* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const user_info>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.user_info)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.user_info)
    MergeFrom(*source);
  }
}

void user_info::MergeFrom(const user_info& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.user_info)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_nickname();
      nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_avatar_url();
      avatar_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.avatar_url_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_guid();
      guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_introduction();
      introduction_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.introduction_);
    }
    if (cached_has_bits & 0x00000010u) {
      imid_ = from.imid_;
    }
    if (cached_has_bits & 0x00000020u) {
      sex_ = from.sex_;
    }
    if (cached_has_bits & 0x00000040u) {
      user_identity_ = from.user_identity_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void user_info::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.user_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void user_info::CopyFrom(const user_info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.user_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool user_info::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000050) != 0x00000050) return false;
  return true;
}

void user_info::Swap(user_info* other) {
  if (other == this) return;
  InternalSwap(other);
}
void user_info::InternalSwap(user_info* other) {
  using std::swap;
  nickname_.Swap(&other->nickname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  avatar_url_.Swap(&other->avatar_url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  guid_.Swap(&other->guid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  introduction_.Swap(&other->introduction_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(imid_, other->imid_);
  swap(sex_, other->sex_);
  swap(user_identity_, other->user_identity_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata user_info::GetMetadata() const {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void auto_attention_friend_info::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int auto_attention_friend_info::kImidFieldNumber;
const int auto_attention_friend_info::kRemarkFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

auto_attention_friend_info::auto_attention_friend_info()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_common_2eproto::scc_info_auto_attention_friend_info.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.auto_attention_friend_info)
}
auto_attention_friend_info::auto_attention_friend_info(const auto_attention_friend_info& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  remark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_remark()) {
    remark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remark_);
  }
  imid_ = from.imid_;
  // @@protoc_insertion_point(copy_constructor:common.auto_attention_friend_info)
}

void auto_attention_friend_info::SharedCtor() {
  remark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imid_ = 0u;
}

auto_attention_friend_info::~auto_attention_friend_info() {
  // @@protoc_insertion_point(destructor:common.auto_attention_friend_info)
  SharedDtor();
}

void auto_attention_friend_info::SharedDtor() {
  remark_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void auto_attention_friend_info::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* auto_attention_friend_info::descriptor() {
  ::protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const auto_attention_friend_info& auto_attention_friend_info::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_common_2eproto::scc_info_auto_attention_friend_info.base);
  return *internal_default_instance();
}


void auto_attention_friend_info::Clear() {
// @@protoc_insertion_point(message_clear_start:common.auto_attention_friend_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    remark_.ClearNonDefaultToEmptyNoArena();
  }
  imid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool auto_attention_friend_info::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.auto_attention_friend_info)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 imid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_imid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &imid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes remark = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_remark()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.auto_attention_friend_info)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.auto_attention_friend_info)
  return false;
#undef DO_
}

void auto_attention_friend_info::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.auto_attention_friend_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 imid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->imid(), output);
  }

  // required bytes remark = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->remark(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:common.auto_attention_friend_info)
}

::google::protobuf::uint8* auto_attention_friend_info::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.auto_attention_friend_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 imid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->imid(), target);
  }

  // required bytes remark = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->remark(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.auto_attention_friend_info)
  return target;
}

size_t auto_attention_friend_info::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:common.auto_attention_friend_info)
  size_t total_size = 0;

  if (has_remark()) {
    // required bytes remark = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->remark());
  }

  if (has_imid()) {
    // required uint32 imid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->imid());
  }

  return total_size;
}
size_t auto_attention_friend_info::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.auto_attention_friend_info)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bytes remark = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->remark());

    // required uint32 imid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->imid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void auto_attention_friend_info::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.auto_attention_friend_info)
  GOOGLE_DCHECK_NE(&from, this);
  const auto_attention_friend_info* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const auto_attention_friend_info>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.auto_attention_friend_info)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.auto_attention_friend_info)
    MergeFrom(*source);
  }
}

void auto_attention_friend_info::MergeFrom(const auto_attention_friend_info& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.auto_attention_friend_info)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_remark();
      remark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remark_);
    }
    if (cached_has_bits & 0x00000002u) {
      imid_ = from.imid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void auto_attention_friend_info::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.auto_attention_friend_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void auto_attention_friend_info::CopyFrom(const auto_attention_friend_info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.auto_attention_friend_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool auto_attention_friend_info::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void auto_attention_friend_info::Swap(auto_attention_friend_info* other) {
  if (other == this) return;
  InternalSwap(other);
}
void auto_attention_friend_info::InternalSwap(auto_attention_friend_info* other) {
  using std::swap;
  remark_.Swap(&other->remark_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(imid_, other->imid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata auto_attention_friend_info::GetMetadata() const {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void friend_info::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int friend_info::kImidFieldNumber;
const int friend_info::kNicknameFieldNumber;
const int friend_info::kAvatarUrlFieldNumber;
const int friend_info::kRemarkFieldNumber;
const int friend_info::kRelationFieldNumber;
const int friend_info::kGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

friend_info::friend_info()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_common_2eproto::scc_info_friend_info.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.friend_info)
}
friend_info::friend_info(const friend_info& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nickname()) {
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  avatar_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_avatar_url()) {
    avatar_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.avatar_url_);
  }
  remark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_remark()) {
    remark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remark_);
  }
  guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_guid()) {
    guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_);
  }
  ::memcpy(&imid_, &from.imid_,
    static_cast<size_t>(reinterpret_cast<char*>(&relation_) -
    reinterpret_cast<char*>(&imid_)) + sizeof(relation_));
  // @@protoc_insertion_point(copy_constructor:common.friend_info)
}

void friend_info::SharedCtor() {
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  avatar_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&imid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&relation_) -
      reinterpret_cast<char*>(&imid_)) + sizeof(relation_));
}

friend_info::~friend_info() {
  // @@protoc_insertion_point(destructor:common.friend_info)
  SharedDtor();
}

void friend_info::SharedDtor() {
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  avatar_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remark_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void friend_info::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* friend_info::descriptor() {
  ::protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const friend_info& friend_info::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_common_2eproto::scc_info_friend_info.base);
  return *internal_default_instance();
}


void friend_info::Clear() {
// @@protoc_insertion_point(message_clear_start:common.friend_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      nickname_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      avatar_url_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      remark_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      guid_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 48u) {
    ::memset(&imid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&relation_) -
        reinterpret_cast<char*>(&imid_)) + sizeof(relation_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool friend_info::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.friend_info)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 imid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_imid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &imid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes nickname = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_nickname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes avatar_url = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_avatar_url()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes remark = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_remark()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 relation = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_relation();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &relation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes guid = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_guid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.friend_info)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.friend_info)
  return false;
#undef DO_
}

void friend_info::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.friend_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 imid = 1;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->imid(), output);
  }

  // optional bytes nickname = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->nickname(), output);
  }

  // optional bytes avatar_url = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->avatar_url(), output);
  }

  // optional bytes remark = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->remark(), output);
  }

  // optional uint32 relation = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->relation(), output);
  }

  // optional bytes guid = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->guid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:common.friend_info)
}

::google::protobuf::uint8* friend_info::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.friend_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 imid = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->imid(), target);
  }

  // optional bytes nickname = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->nickname(), target);
  }

  // optional bytes avatar_url = 3;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->avatar_url(), target);
  }

  // optional bytes remark = 4;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->remark(), target);
  }

  // optional uint32 relation = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->relation(), target);
  }

  // optional bytes guid = 6;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->guid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.friend_info)
  return target;
}

size_t friend_info::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.friend_info)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 imid = 1;
  if (has_imid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->imid());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional bytes nickname = 2;
    if (has_nickname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->nickname());
    }

    // optional bytes avatar_url = 3;
    if (has_avatar_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->avatar_url());
    }

    // optional bytes remark = 4;
    if (has_remark()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->remark());
    }

    // optional bytes guid = 6;
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->guid());
    }

  }
  // optional uint32 relation = 5;
  if (has_relation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->relation());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void friend_info::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.friend_info)
  GOOGLE_DCHECK_NE(&from, this);
  const friend_info* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const friend_info>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.friend_info)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.friend_info)
    MergeFrom(*source);
  }
}

void friend_info::MergeFrom(const friend_info& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.friend_info)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_nickname();
      nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_avatar_url();
      avatar_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.avatar_url_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_remark();
      remark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remark_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_guid();
      guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_);
    }
    if (cached_has_bits & 0x00000010u) {
      imid_ = from.imid_;
    }
    if (cached_has_bits & 0x00000020u) {
      relation_ = from.relation_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void friend_info::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.friend_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void friend_info::CopyFrom(const friend_info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.friend_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool friend_info::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000010) != 0x00000010) return false;
  return true;
}

void friend_info::Swap(friend_info* other) {
  if (other == this) return;
  InternalSwap(other);
}
void friend_info::InternalSwap(friend_info* other) {
  using std::swap;
  nickname_.Swap(&other->nickname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  avatar_url_.Swap(&other->avatar_url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  remark_.Swap(&other->remark_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  guid_.Swap(&other->guid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(imid_, other->imid_);
  swap(relation_, other->relation_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata friend_info::GetMetadata() const {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void group_info::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int group_info::kGroupIdFieldNumber;
const int group_info::kGroupNameFieldNumber;
const int group_info::kAvatarUrlFieldNumber;
const int group_info::kGroupTypeFieldNumber;
const int group_info::kGroupThemeFieldNumber;
const int group_info::kIntroduceFieldNumber;
const int group_info::kIsValidFieldNumber;
const int group_info::kGroupScaleFieldNumber;
const int group_info::kIsPublicFieldNumber;
const int group_info::kJoinVerifyTypeFieldNumber;
const int group_info::kGroupLocationFieldNumber;
const int group_info::kProjectIdFieldNumber;
const int group_info::kTagListFieldNumber;
const int group_info::kGroupMemberNumFieldNumber;
const int group_info::kOwnerIdFieldNumber;
const int group_info::kGuidFieldNumber;
const int group_info::kCreateTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

group_info::group_info()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_common_2eproto::scc_info_group_info.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.group_info)
}
group_info::group_info(const group_info& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      tag_list_(from.tag_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  group_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_group_name()) {
    group_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_name_);
  }
  avatar_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_avatar_url()) {
    avatar_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.avatar_url_);
  }
  group_theme_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_group_theme()) {
    group_theme_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_theme_);
  }
  introduce_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_introduce()) {
    introduce_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.introduce_);
  }
  group_location_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_group_location()) {
    group_location_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_location_);
  }
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_project_id()) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_guid()) {
    guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_);
  }
  create_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_create_time()) {
    create_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.create_time_);
  }
  ::memcpy(&group_id_, &from.group_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&owner_id_) -
    reinterpret_cast<char*>(&group_id_)) + sizeof(owner_id_));
  // @@protoc_insertion_point(copy_constructor:common.group_info)
}

void group_info::SharedCtor() {
  group_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  avatar_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_theme_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  introduce_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_location_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  create_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&owner_id_) -
      reinterpret_cast<char*>(&group_id_)) + sizeof(owner_id_));
}

group_info::~group_info() {
  // @@protoc_insertion_point(destructor:common.group_info)
  SharedDtor();
}

void group_info::SharedDtor() {
  group_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  avatar_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_theme_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  introduce_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_location_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  create_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void group_info::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* group_info::descriptor() {
  ::protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const group_info& group_info::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_common_2eproto::scc_info_group_info.base);
  return *internal_default_instance();
}


void group_info::Clear() {
// @@protoc_insertion_point(message_clear_start:common.group_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tag_list_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      group_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      avatar_url_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      group_theme_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      introduce_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      group_location_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      project_id_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000040u) {
      guid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000080u) {
      create_time_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 65280u) {
    ::memset(&group_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&owner_id_) -
        reinterpret_cast<char*>(&group_id_)) + sizeof(owner_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool group_info::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.group_info)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 group_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_group_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes group_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_group_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes avatar_url = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_avatar_url()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 group_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_group_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes group_theme = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_group_theme()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes introduce = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_introduce()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 is_valid = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_is_valid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &is_valid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 group_scale = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_group_scale();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_scale_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 is_public = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_is_public();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &is_public_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 join_verify_type = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_join_verify_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &join_verify_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes group_location = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_group_location()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes project_id = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_project_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .common.group_tag tag_list = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_tag_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 group_member_num = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          set_has_group_member_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_member_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 owner_id = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          set_has_owner_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &owner_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes guid = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_guid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes create_time = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_create_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.group_info)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.group_info)
  return false;
#undef DO_
}

void group_info::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.group_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 group_id = 1;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->group_id(), output);
  }

  // optional bytes group_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->group_name(), output);
  }

  // optional bytes avatar_url = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->avatar_url(), output);
  }

  // optional uint32 group_type = 4;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->group_type(), output);
  }

  // optional bytes group_theme = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->group_theme(), output);
  }

  // optional bytes introduce = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->introduce(), output);
  }

  // optional uint32 is_valid = 7;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->is_valid(), output);
  }

  // optional uint32 group_scale = 8;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->group_scale(), output);
  }

  // optional uint32 is_public = 9;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->is_public(), output);
  }

  // optional uint32 join_verify_type = 10;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->join_verify_type(), output);
  }

  // optional bytes group_location = 11;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      11, this->group_location(), output);
  }

  // optional bytes project_id = 12;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      12, this->project_id(), output);
  }

  // repeated .common.group_tag tag_list = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tag_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13,
      this->tag_list(static_cast<int>(i)),
      output);
  }

  // optional uint32 group_member_num = 14;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->group_member_num(), output);
  }

  // required uint32 owner_id = 15;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->owner_id(), output);
  }

  // required bytes guid = 16;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      16, this->guid(), output);
  }

  // optional bytes create_time = 17;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      17, this->create_time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:common.group_info)
}

::google::protobuf::uint8* group_info::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.group_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 group_id = 1;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->group_id(), target);
  }

  // optional bytes group_name = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->group_name(), target);
  }

  // optional bytes avatar_url = 3;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->avatar_url(), target);
  }

  // optional uint32 group_type = 4;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->group_type(), target);
  }

  // optional bytes group_theme = 5;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->group_theme(), target);
  }

  // optional bytes introduce = 6;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->introduce(), target);
  }

  // optional uint32 is_valid = 7;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->is_valid(), target);
  }

  // optional uint32 group_scale = 8;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->group_scale(), target);
  }

  // optional uint32 is_public = 9;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->is_public(), target);
  }

  // optional uint32 join_verify_type = 10;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->join_verify_type(), target);
  }

  // optional bytes group_location = 11;
  if (cached_has_bits & 0x00000010u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        11, this->group_location(), target);
  }

  // optional bytes project_id = 12;
  if (cached_has_bits & 0x00000020u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        12, this->project_id(), target);
  }

  // repeated .common.group_tag tag_list = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tag_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->tag_list(static_cast<int>(i)), deterministic, target);
  }

  // optional uint32 group_member_num = 14;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->group_member_num(), target);
  }

  // required uint32 owner_id = 15;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->owner_id(), target);
  }

  // required bytes guid = 16;
  if (cached_has_bits & 0x00000040u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        16, this->guid(), target);
  }

  // optional bytes create_time = 17;
  if (cached_has_bits & 0x00000080u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        17, this->create_time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.group_info)
  return target;
}

size_t group_info::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:common.group_info)
  size_t total_size = 0;

  if (has_guid()) {
    // required bytes guid = 16;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->guid());
  }

  if (has_group_id()) {
    // required uint32 group_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());
  }

  if (has_owner_id()) {
    // required uint32 owner_id = 15;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->owner_id());
  }

  return total_size;
}
size_t group_info::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.group_info)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00008140) ^ 0x00008140) == 0) {  // All required fields are present.
    // required bytes guid = 16;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->guid());

    // required uint32 group_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());

    // required uint32 owner_id = 15;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->owner_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .common.group_tag tag_list = 13;
  {
    unsigned int count = static_cast<unsigned int>(this->tag_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->tag_list(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 63u) {
    // optional bytes group_name = 2;
    if (has_group_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->group_name());
    }

    // optional bytes avatar_url = 3;
    if (has_avatar_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->avatar_url());
    }

    // optional bytes group_theme = 5;
    if (has_group_theme()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->group_theme());
    }

    // optional bytes introduce = 6;
    if (has_introduce()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->introduce());
    }

    // optional bytes group_location = 11;
    if (has_group_location()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->group_location());
    }

    // optional bytes project_id = 12;
    if (has_project_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->project_id());
    }

  }
  // optional bytes create_time = 17;
  if (has_create_time()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->create_time());
  }

  if (_has_bits_[8 / 32] & 32256u) {
    // optional uint32 group_type = 4;
    if (has_group_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->group_type());
    }

    // optional uint32 is_valid = 7;
    if (has_is_valid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->is_valid());
    }

    // optional uint32 group_scale = 8;
    if (has_group_scale()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->group_scale());
    }

    // optional uint32 is_public = 9;
    if (has_is_public()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->is_public());
    }

    // optional uint32 join_verify_type = 10;
    if (has_join_verify_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->join_verify_type());
    }

    // optional uint32 group_member_num = 14;
    if (has_group_member_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->group_member_num());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void group_info::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.group_info)
  GOOGLE_DCHECK_NE(&from, this);
  const group_info* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const group_info>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.group_info)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.group_info)
    MergeFrom(*source);
  }
}

void group_info::MergeFrom(const group_info& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.group_info)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tag_list_.MergeFrom(from.tag_list_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_group_name();
      group_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_avatar_url();
      avatar_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.avatar_url_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_group_theme();
      group_theme_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_theme_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_introduce();
      introduce_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.introduce_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_group_location();
      group_location_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_location_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_project_id();
      project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_guid();
      guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_);
    }
    if (cached_has_bits & 0x00000080u) {
      set_has_create_time();
      create_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.create_time_);
    }
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      group_id_ = from.group_id_;
    }
    if (cached_has_bits & 0x00000200u) {
      group_type_ = from.group_type_;
    }
    if (cached_has_bits & 0x00000400u) {
      is_valid_ = from.is_valid_;
    }
    if (cached_has_bits & 0x00000800u) {
      group_scale_ = from.group_scale_;
    }
    if (cached_has_bits & 0x00001000u) {
      is_public_ = from.is_public_;
    }
    if (cached_has_bits & 0x00002000u) {
      join_verify_type_ = from.join_verify_type_;
    }
    if (cached_has_bits & 0x00004000u) {
      group_member_num_ = from.group_member_num_;
    }
    if (cached_has_bits & 0x00008000u) {
      owner_id_ = from.owner_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void group_info::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.group_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void group_info::CopyFrom(const group_info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.group_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool group_info::IsInitialized() const {
  if ((_has_bits_[0] & 0x00008140) != 0x00008140) return false;
  return true;
}

void group_info::Swap(group_info* other) {
  if (other == this) return;
  InternalSwap(other);
}
void group_info::InternalSwap(group_info* other) {
  using std::swap;
  CastToBase(&tag_list_)->InternalSwap(CastToBase(&other->tag_list_));
  group_name_.Swap(&other->group_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  avatar_url_.Swap(&other->avatar_url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  group_theme_.Swap(&other->group_theme_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  introduce_.Swap(&other->introduce_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  group_location_.Swap(&other->group_location_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  guid_.Swap(&other->guid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  create_time_.Swap(&other->create_time_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(group_id_, other->group_id_);
  swap(group_type_, other->group_type_);
  swap(is_valid_, other->is_valid_);
  swap(group_scale_, other->group_scale_);
  swap(is_public_, other->is_public_);
  swap(join_verify_type_, other->join_verify_type_);
  swap(group_member_num_, other->group_member_num_);
  swap(owner_id_, other->owner_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata group_info::GetMetadata() const {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void user_group_summary::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int user_group_summary::kGroupIdFieldNumber;
const int user_group_summary::kGroupNameFieldNumber;
const int user_group_summary::kGroupTypeFieldNumber;
const int user_group_summary::kGroupAvatarUrlFieldNumber;
const int user_group_summary::kInGroupRoleFieldNumber;
const int user_group_summary::kInProjectRoleFieldNumber;
const int user_group_summary::kBlockTypeFieldNumber;
const int user_group_summary::kGroupMemberNumFieldNumber;
const int user_group_summary::kRecordTimeFieldNumber;
const int user_group_summary::kProjectIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

user_group_summary::user_group_summary()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_common_2eproto::scc_info_user_group_summary.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.user_group_summary)
}
user_group_summary::user_group_summary(const user_group_summary& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  group_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_group_name()) {
    group_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_name_);
  }
  group_avatar_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_group_avatar_url()) {
    group_avatar_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_avatar_url_);
  }
  record_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_record_time()) {
    record_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.record_time_);
  }
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_project_id()) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  ::memcpy(&group_id_, &from.group_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&group_member_num_) -
    reinterpret_cast<char*>(&group_id_)) + sizeof(group_member_num_));
  // @@protoc_insertion_point(copy_constructor:common.user_group_summary)
}

void user_group_summary::SharedCtor() {
  group_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_avatar_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  record_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&group_member_num_) -
      reinterpret_cast<char*>(&group_id_)) + sizeof(group_member_num_));
}

user_group_summary::~user_group_summary() {
  // @@protoc_insertion_point(destructor:common.user_group_summary)
  SharedDtor();
}

void user_group_summary::SharedDtor() {
  group_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_avatar_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  record_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void user_group_summary::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* user_group_summary::descriptor() {
  ::protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const user_group_summary& user_group_summary::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_common_2eproto::scc_info_user_group_summary.base);
  return *internal_default_instance();
}


void user_group_summary::Clear() {
// @@protoc_insertion_point(message_clear_start:common.user_group_summary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      group_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      group_avatar_url_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      record_time_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      project_id_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 240u) {
    ::memset(&group_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&in_project_role_) -
        reinterpret_cast<char*>(&group_id_)) + sizeof(in_project_role_));
  }
  if (cached_has_bits & 768u) {
    ::memset(&block_type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&group_member_num_) -
        reinterpret_cast<char*>(&block_type_)) + sizeof(group_member_num_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool user_group_summary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.user_group_summary)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 group_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_group_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes group_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_group_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 group_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_group_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes group_avatar_url = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_group_avatar_url()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 in_group_role = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_in_group_role();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &in_group_role_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 in_project_role = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_in_project_role();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &in_project_role_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 block_type = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_block_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &block_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 group_member_num = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_group_member_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_member_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes record_time = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_record_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes project_id = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_project_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.user_group_summary)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.user_group_summary)
  return false;
#undef DO_
}

void user_group_summary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.user_group_summary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 group_id = 1;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->group_id(), output);
  }

  // required bytes group_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->group_name(), output);
  }

  // required uint32 group_type = 3;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->group_type(), output);
  }

  // required bytes group_avatar_url = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->group_avatar_url(), output);
  }

  // required uint32 in_group_role = 5;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->in_group_role(), output);
  }

  // optional uint32 in_project_role = 6;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->in_project_role(), output);
  }

  // required uint32 block_type = 7;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->block_type(), output);
  }

  // required uint32 group_member_num = 8;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->group_member_num(), output);
  }

  // optional bytes record_time = 10;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      10, this->record_time(), output);
  }

  // optional bytes project_id = 11;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      11, this->project_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:common.user_group_summary)
}

::google::protobuf::uint8* user_group_summary::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.user_group_summary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 group_id = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->group_id(), target);
  }

  // required bytes group_name = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->group_name(), target);
  }

  // required uint32 group_type = 3;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->group_type(), target);
  }

  // required bytes group_avatar_url = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->group_avatar_url(), target);
  }

  // required uint32 in_group_role = 5;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->in_group_role(), target);
  }

  // optional uint32 in_project_role = 6;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->in_project_role(), target);
  }

  // required uint32 block_type = 7;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->block_type(), target);
  }

  // required uint32 group_member_num = 8;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->group_member_num(), target);
  }

  // optional bytes record_time = 10;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        10, this->record_time(), target);
  }

  // optional bytes project_id = 11;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        11, this->project_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.user_group_summary)
  return target;
}

size_t user_group_summary::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:common.user_group_summary)
  size_t total_size = 0;

  if (has_group_name()) {
    // required bytes group_name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->group_name());
  }

  if (has_group_avatar_url()) {
    // required bytes group_avatar_url = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->group_avatar_url());
  }

  if (has_group_id()) {
    // required uint32 group_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());
  }

  if (has_group_type()) {
    // required uint32 group_type = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_type());
  }

  if (has_in_group_role()) {
    // required uint32 in_group_role = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->in_group_role());
  }

  if (has_block_type()) {
    // required uint32 block_type = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->block_type());
  }

  if (has_group_member_num()) {
    // required uint32 group_member_num = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_member_num());
  }

  return total_size;
}
size_t user_group_summary::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.user_group_summary)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000373) ^ 0x00000373) == 0) {  // All required fields are present.
    // required bytes group_name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->group_name());

    // required bytes group_avatar_url = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->group_avatar_url());

    // required uint32 group_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());

    // required uint32 group_type = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_type());

    // required uint32 in_group_role = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->in_group_role());

    // required uint32 block_type = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->block_type());

    // required uint32 group_member_num = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_member_num());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 12u) {
    // optional bytes record_time = 10;
    if (has_record_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->record_time());
    }

    // optional bytes project_id = 11;
    if (has_project_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->project_id());
    }

  }
  // optional uint32 in_project_role = 6;
  if (has_in_project_role()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->in_project_role());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void user_group_summary::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.user_group_summary)
  GOOGLE_DCHECK_NE(&from, this);
  const user_group_summary* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const user_group_summary>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.user_group_summary)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.user_group_summary)
    MergeFrom(*source);
  }
}

void user_group_summary::MergeFrom(const user_group_summary& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.user_group_summary)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_group_name();
      group_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_group_avatar_url();
      group_avatar_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_avatar_url_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_record_time();
      record_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.record_time_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_project_id();
      project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
    }
    if (cached_has_bits & 0x00000010u) {
      group_id_ = from.group_id_;
    }
    if (cached_has_bits & 0x00000020u) {
      group_type_ = from.group_type_;
    }
    if (cached_has_bits & 0x00000040u) {
      in_group_role_ = from.in_group_role_;
    }
    if (cached_has_bits & 0x00000080u) {
      in_project_role_ = from.in_project_role_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 768u) {
    if (cached_has_bits & 0x00000100u) {
      block_type_ = from.block_type_;
    }
    if (cached_has_bits & 0x00000200u) {
      group_member_num_ = from.group_member_num_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void user_group_summary::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.user_group_summary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void user_group_summary::CopyFrom(const user_group_summary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.user_group_summary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool user_group_summary::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000373) != 0x00000373) return false;
  return true;
}

void user_group_summary::Swap(user_group_summary* other) {
  if (other == this) return;
  InternalSwap(other);
}
void user_group_summary::InternalSwap(user_group_summary* other) {
  using std::swap;
  group_name_.Swap(&other->group_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  group_avatar_url_.Swap(&other->group_avatar_url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  record_time_.Swap(&other->record_time_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(group_id_, other->group_id_);
  swap(group_type_, other->group_type_);
  swap(in_group_role_, other->in_group_role_);
  swap(in_project_role_, other->in_project_role_);
  swap(block_type_, other->block_type_);
  swap(group_member_num_, other->group_member_num_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata user_group_summary::GetMetadata() const {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void group_member_info::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int group_member_info::kGroupIdFieldNumber;
const int group_member_info::kImidFieldNumber;
const int group_member_info::kGuidFieldNumber;
const int group_member_info::kNickNameFieldNumber;
const int group_member_info::kAvatarFieldNumber;
const int group_member_info::kJoinTimeFieldNumber;
const int group_member_info::kGroupRoleFieldNumber;
const int group_member_info::kBlockTypeFieldNumber;
const int group_member_info::kProjectRoleFieldNumber;
const int group_member_info::kLivenessFieldNumber;
const int group_member_info::kMemberStatusFieldNumber;
const int group_member_info::kUpdateTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

group_member_info::group_member_info()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_common_2eproto::scc_info_group_member_info.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.group_member_info)
}
group_member_info::group_member_info(const group_member_info& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_guid()) {
    guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_);
  }
  nick_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nick_name()) {
    nick_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nick_name_);
  }
  avatar_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_avatar()) {
    avatar_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.avatar_);
  }
  join_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_join_time()) {
    join_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.join_time_);
  }
  update_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_update_time()) {
    update_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.update_time_);
  }
  ::memcpy(&group_id_, &from.group_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&member_status_) -
    reinterpret_cast<char*>(&group_id_)) + sizeof(member_status_));
  // @@protoc_insertion_point(copy_constructor:common.group_member_info)
}

void group_member_info::SharedCtor() {
  guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nick_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  avatar_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  join_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  update_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&member_status_) -
      reinterpret_cast<char*>(&group_id_)) + sizeof(member_status_));
}

group_member_info::~group_member_info() {
  // @@protoc_insertion_point(destructor:common.group_member_info)
  SharedDtor();
}

void group_member_info::SharedDtor() {
  guid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nick_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  avatar_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  join_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  update_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void group_member_info::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* group_member_info::descriptor() {
  ::protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const group_member_info& group_member_info::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_common_2eproto::scc_info_group_member_info.base);
  return *internal_default_instance();
}


void group_member_info::Clear() {
// @@protoc_insertion_point(message_clear_start:common.group_member_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      guid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      nick_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      avatar_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      join_time_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      update_time_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 224u) {
    ::memset(&group_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&group_role_) -
        reinterpret_cast<char*>(&group_id_)) + sizeof(group_role_));
  }
  if (cached_has_bits & 3840u) {
    ::memset(&block_type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&member_status_) -
        reinterpret_cast<char*>(&block_type_)) + sizeof(member_status_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool group_member_info::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.group_member_info)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 group_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_group_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 imid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_imid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &imid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes guid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_guid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes nick_name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_nick_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes avatar = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_avatar()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes join_time = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_join_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 group_role = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_group_role();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_role_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 block_type = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_block_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &block_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 project_role = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_project_role();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &project_role_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 liveness = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_liveness();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &liveness_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 member_status = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_member_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &member_status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string update_time = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_update_time()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->update_time().data(), static_cast<int>(this->update_time().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "common.group_member_info.update_time");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.group_member_info)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.group_member_info)
  return false;
#undef DO_
}

void group_member_info::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.group_member_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 group_id = 1;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->group_id(), output);
  }

  // required uint32 imid = 2;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->imid(), output);
  }

  // required bytes guid = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->guid(), output);
  }

  // optional bytes nick_name = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->nick_name(), output);
  }

  // optional bytes avatar = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->avatar(), output);
  }

  // optional bytes join_time = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->join_time(), output);
  }

  // optional uint32 group_role = 7;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->group_role(), output);
  }

  // optional uint32 block_type = 8;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->block_type(), output);
  }

  // optional uint32 project_role = 9;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->project_role(), output);
  }

  // optional uint32 liveness = 10;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->liveness(), output);
  }

  // optional uint32 member_status = 11;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->member_status(), output);
  }

  // optional string update_time = 12;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->update_time().data(), static_cast<int>(this->update_time().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "common.group_member_info.update_time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->update_time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:common.group_member_info)
}

::google::protobuf::uint8* group_member_info::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.group_member_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 group_id = 1;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->group_id(), target);
  }

  // required uint32 imid = 2;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->imid(), target);
  }

  // required bytes guid = 3;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->guid(), target);
  }

  // optional bytes nick_name = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->nick_name(), target);
  }

  // optional bytes avatar = 5;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->avatar(), target);
  }

  // optional bytes join_time = 6;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->join_time(), target);
  }

  // optional uint32 group_role = 7;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->group_role(), target);
  }

  // optional uint32 block_type = 8;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->block_type(), target);
  }

  // optional uint32 project_role = 9;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->project_role(), target);
  }

  // optional uint32 liveness = 10;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->liveness(), target);
  }

  // optional uint32 member_status = 11;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->member_status(), target);
  }

  // optional string update_time = 12;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->update_time().data(), static_cast<int>(this->update_time().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "common.group_member_info.update_time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->update_time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.group_member_info)
  return target;
}

size_t group_member_info::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:common.group_member_info)
  size_t total_size = 0;

  if (has_guid()) {
    // required bytes guid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->guid());
  }

  if (has_group_id()) {
    // required uint32 group_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());
  }

  if (has_imid()) {
    // required uint32 imid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->imid());
  }

  return total_size;
}
size_t group_member_info::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.group_member_info)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000061) ^ 0x00000061) == 0) {  // All required fields are present.
    // required bytes guid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->guid());

    // required uint32 group_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());

    // required uint32 imid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->imid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 30u) {
    // optional bytes nick_name = 4;
    if (has_nick_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->nick_name());
    }

    // optional bytes avatar = 5;
    if (has_avatar()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->avatar());
    }

    // optional bytes join_time = 6;
    if (has_join_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->join_time());
    }

    // optional string update_time = 12;
    if (has_update_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->update_time());
    }

  }
  // optional uint32 group_role = 7;
  if (has_group_role()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_role());
  }

  if (_has_bits_[8 / 32] & 3840u) {
    // optional uint32 block_type = 8;
    if (has_block_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->block_type());
    }

    // optional uint32 project_role = 9;
    if (has_project_role()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->project_role());
    }

    // optional uint32 liveness = 10;
    if (has_liveness()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->liveness());
    }

    // optional uint32 member_status = 11;
    if (has_member_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->member_status());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void group_member_info::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.group_member_info)
  GOOGLE_DCHECK_NE(&from, this);
  const group_member_info* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const group_member_info>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.group_member_info)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.group_member_info)
    MergeFrom(*source);
  }
}

void group_member_info::MergeFrom(const group_member_info& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.group_member_info)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_guid();
      guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_nick_name();
      nick_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nick_name_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_avatar();
      avatar_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.avatar_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_join_time();
      join_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.join_time_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_update_time();
      update_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.update_time_);
    }
    if (cached_has_bits & 0x00000020u) {
      group_id_ = from.group_id_;
    }
    if (cached_has_bits & 0x00000040u) {
      imid_ = from.imid_;
    }
    if (cached_has_bits & 0x00000080u) {
      group_role_ = from.group_role_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 3840u) {
    if (cached_has_bits & 0x00000100u) {
      block_type_ = from.block_type_;
    }
    if (cached_has_bits & 0x00000200u) {
      project_role_ = from.project_role_;
    }
    if (cached_has_bits & 0x00000400u) {
      liveness_ = from.liveness_;
    }
    if (cached_has_bits & 0x00000800u) {
      member_status_ = from.member_status_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void group_member_info::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.group_member_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void group_member_info::CopyFrom(const group_member_info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.group_member_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool group_member_info::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000061) != 0x00000061) return false;
  return true;
}

void group_member_info::Swap(group_member_info* other) {
  if (other == this) return;
  InternalSwap(other);
}
void group_member_info::InternalSwap(group_member_info* other) {
  using std::swap;
  guid_.Swap(&other->guid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  nick_name_.Swap(&other->nick_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  avatar_.Swap(&other->avatar_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  join_time_.Swap(&other->join_time_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  update_time_.Swap(&other->update_time_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(group_id_, other->group_id_);
  swap(imid_, other->imid_);
  swap(group_role_, other->group_role_);
  swap(block_type_, other->block_type_);
  swap(project_role_, other->project_role_);
  swap(liveness_, other->liveness_);
  swap(member_status_, other->member_status_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata group_member_info::GetMetadata() const {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void project_group_member_info::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int project_group_member_info::kImidFieldNumber;
const int project_group_member_info::kGuidFieldNumber;
const int project_group_member_info::kProjectRoleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

project_group_member_info::project_group_member_info()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_common_2eproto::scc_info_project_group_member_info.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.project_group_member_info)
}
project_group_member_info::project_group_member_info(const project_group_member_info& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_guid()) {
    guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_);
  }
  ::memcpy(&imid_, &from.imid_,
    static_cast<size_t>(reinterpret_cast<char*>(&project_role_) -
    reinterpret_cast<char*>(&imid_)) + sizeof(project_role_));
  // @@protoc_insertion_point(copy_constructor:common.project_group_member_info)
}

void project_group_member_info::SharedCtor() {
  guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&imid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&project_role_) -
      reinterpret_cast<char*>(&imid_)) + sizeof(project_role_));
}

project_group_member_info::~project_group_member_info() {
  // @@protoc_insertion_point(destructor:common.project_group_member_info)
  SharedDtor();
}

void project_group_member_info::SharedDtor() {
  guid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void project_group_member_info::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* project_group_member_info::descriptor() {
  ::protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const project_group_member_info& project_group_member_info::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_common_2eproto::scc_info_project_group_member_info.base);
  return *internal_default_instance();
}


void project_group_member_info::Clear() {
// @@protoc_insertion_point(message_clear_start:common.project_group_member_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    guid_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&imid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&project_role_) -
        reinterpret_cast<char*>(&imid_)) + sizeof(project_role_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool project_group_member_info::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.project_group_member_info)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 imid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_imid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &imid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes guid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_guid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 project_role = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_project_role();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &project_role_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.project_group_member_info)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.project_group_member_info)
  return false;
#undef DO_
}

void project_group_member_info::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.project_group_member_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 imid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->imid(), output);
  }

  // required bytes guid = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->guid(), output);
  }

  // optional uint32 project_role = 9;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->project_role(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:common.project_group_member_info)
}

::google::protobuf::uint8* project_group_member_info::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.project_group_member_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 imid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->imid(), target);
  }

  // required bytes guid = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->guid(), target);
  }

  // optional uint32 project_role = 9;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->project_role(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.project_group_member_info)
  return target;
}

size_t project_group_member_info::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:common.project_group_member_info)
  size_t total_size = 0;

  if (has_guid()) {
    // required bytes guid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->guid());
  }

  if (has_imid()) {
    // required uint32 imid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->imid());
  }

  return total_size;
}
size_t project_group_member_info::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.project_group_member_info)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bytes guid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->guid());

    // required uint32 imid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->imid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional uint32 project_role = 9;
  if (has_project_role()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->project_role());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void project_group_member_info::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.project_group_member_info)
  GOOGLE_DCHECK_NE(&from, this);
  const project_group_member_info* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const project_group_member_info>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.project_group_member_info)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.project_group_member_info)
    MergeFrom(*source);
  }
}

void project_group_member_info::MergeFrom(const project_group_member_info& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.project_group_member_info)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_guid();
      guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_);
    }
    if (cached_has_bits & 0x00000002u) {
      imid_ = from.imid_;
    }
    if (cached_has_bits & 0x00000004u) {
      project_role_ = from.project_role_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void project_group_member_info::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.project_group_member_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void project_group_member_info::CopyFrom(const project_group_member_info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.project_group_member_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool project_group_member_info::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void project_group_member_info::Swap(project_group_member_info* other) {
  if (other == this) return;
  InternalSwap(other);
}
void project_group_member_info::InternalSwap(project_group_member_info* other) {
  using std::swap;
  guid_.Swap(&other->guid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(imid_, other->imid_);
  swap(project_role_, other->project_role_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata project_group_member_info::GetMetadata() const {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void group_tag::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int group_tag::kGroupIdFieldNumber;
const int group_tag::kTagNameFieldNumber;
const int group_tag::kGroupSumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

group_tag::group_tag()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_common_2eproto::scc_info_group_tag.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.group_tag)
}
group_tag::group_tag(const group_tag& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tag_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_tag_name()) {
    tag_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tag_name_);
  }
  ::memcpy(&groupid_, &from.groupid_,
    static_cast<size_t>(reinterpret_cast<char*>(&group_sum_) -
    reinterpret_cast<char*>(&groupid_)) + sizeof(group_sum_));
  // @@protoc_insertion_point(copy_constructor:common.group_tag)
}

void group_tag::SharedCtor() {
  tag_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&groupid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&group_sum_) -
      reinterpret_cast<char*>(&groupid_)) + sizeof(group_sum_));
}

group_tag::~group_tag() {
  // @@protoc_insertion_point(destructor:common.group_tag)
  SharedDtor();
}

void group_tag::SharedDtor() {
  tag_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void group_tag::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* group_tag::descriptor() {
  ::protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const group_tag& group_tag::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_common_2eproto::scc_info_group_tag.base);
  return *internal_default_instance();
}


void group_tag::Clear() {
// @@protoc_insertion_point(message_clear_start:common.group_tag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    tag_name_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&groupid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&group_sum_) -
        reinterpret_cast<char*>(&groupid_)) + sizeof(group_sum_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool group_tag::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.group_tag)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 groupId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_groupid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes tag_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_tag_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 group_sum = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_group_sum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_sum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.group_tag)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.group_tag)
  return false;
#undef DO_
}

void group_tag::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.group_tag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 groupId = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->groupid(), output);
  }

  // optional bytes tag_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->tag_name(), output);
  }

  // optional uint32 group_sum = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->group_sum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:common.group_tag)
}

::google::protobuf::uint8* group_tag::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.group_tag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 groupId = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->groupid(), target);
  }

  // optional bytes tag_name = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->tag_name(), target);
  }

  // optional uint32 group_sum = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->group_sum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.group_tag)
  return target;
}

size_t group_tag::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.group_tag)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional bytes tag_name = 2;
    if (has_tag_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->tag_name());
    }

    // optional uint32 groupId = 1;
    if (has_groupid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->groupid());
    }

    // optional uint32 group_sum = 3;
    if (has_group_sum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->group_sum());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void group_tag::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.group_tag)
  GOOGLE_DCHECK_NE(&from, this);
  const group_tag* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const group_tag>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.group_tag)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.group_tag)
    MergeFrom(*source);
  }
}

void group_tag::MergeFrom(const group_tag& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.group_tag)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_tag_name();
      tag_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tag_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      groupid_ = from.groupid_;
    }
    if (cached_has_bits & 0x00000004u) {
      group_sum_ = from.group_sum_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void group_tag::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.group_tag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void group_tag::CopyFrom(const group_tag& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.group_tag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool group_tag::IsInitialized() const {
  return true;
}

void group_tag::Swap(group_tag* other) {
  if (other == this) return;
  InternalSwap(other);
}
void group_tag::InternalSwap(group_tag* other) {
  using std::swap;
  tag_name_.Swap(&other->tag_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(groupid_, other->groupid_);
  swap(group_sum_, other->group_sum_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata group_tag::GetMetadata() const {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void red_packet_info::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int red_packet_info::kRedPacketIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

red_packet_info::red_packet_info()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_common_2eproto::scc_info_red_packet_info.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.red_packet_info)
}
red_packet_info::red_packet_info(const red_packet_info& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  red_packet_id_ = from.red_packet_id_;
  // @@protoc_insertion_point(copy_constructor:common.red_packet_info)
}

void red_packet_info::SharedCtor() {
  red_packet_id_ = GOOGLE_LONGLONG(0);
}

red_packet_info::~red_packet_info() {
  // @@protoc_insertion_point(destructor:common.red_packet_info)
  SharedDtor();
}

void red_packet_info::SharedDtor() {
}

void red_packet_info::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* red_packet_info::descriptor() {
  ::protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const red_packet_info& red_packet_info::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_common_2eproto::scc_info_red_packet_info.base);
  return *internal_default_instance();
}


void red_packet_info::Clear() {
// @@protoc_insertion_point(message_clear_start:common.red_packet_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  red_packet_id_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool red_packet_info::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.red_packet_info)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 red_packet_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_red_packet_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &red_packet_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.red_packet_info)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.red_packet_info)
  return false;
#undef DO_
}

void red_packet_info::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.red_packet_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 red_packet_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->red_packet_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:common.red_packet_info)
}

::google::protobuf::uint8* red_packet_info::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.red_packet_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 red_packet_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->red_packet_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.red_packet_info)
  return target;
}

size_t red_packet_info::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.red_packet_info)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int64 red_packet_id = 1;
  if (has_red_packet_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->red_packet_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void red_packet_info::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.red_packet_info)
  GOOGLE_DCHECK_NE(&from, this);
  const red_packet_info* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const red_packet_info>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.red_packet_info)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.red_packet_info)
    MergeFrom(*source);
  }
}

void red_packet_info::MergeFrom(const red_packet_info& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.red_packet_info)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_red_packet_id()) {
    set_red_packet_id(from.red_packet_id());
  }
}

void red_packet_info::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.red_packet_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void red_packet_info::CopyFrom(const red_packet_info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.red_packet_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool red_packet_info::IsInitialized() const {
  return true;
}

void red_packet_info::Swap(red_packet_info* other) {
  if (other == this) return;
  InternalSwap(other);
}
void red_packet_info::InternalSwap(red_packet_info* other) {
  using std::swap;
  swap(red_packet_id_, other->red_packet_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata red_packet_info::GetMetadata() const {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void project_info::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int project_info::kProjectIdFieldNumber;
const int project_info::kProjectNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

project_info::project_info()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_common_2eproto::scc_info_project_info.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.project_info)
}
project_info::project_info(const project_info& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_project_id()) {
    project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
  }
  project_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_project_name()) {
    project_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_name_);
  }
  // @@protoc_insertion_point(copy_constructor:common.project_info)
}

void project_info::SharedCtor() {
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  project_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

project_info::~project_info() {
  // @@protoc_insertion_point(destructor:common.project_info)
  SharedDtor();
}

void project_info::SharedDtor() {
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  project_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void project_info::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* project_info::descriptor() {
  ::protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const project_info& project_info::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_common_2eproto::scc_info_project_info.base);
  return *internal_default_instance();
}


void project_info::Clear() {
// @@protoc_insertion_point(message_clear_start:common.project_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      project_id_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      project_name_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool project_info::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.project_info)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes project_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_project_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes project_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_project_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.project_info)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.project_info)
  return false;
#undef DO_
}

void project_info::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.project_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes project_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->project_id(), output);
  }

  // optional bytes project_name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->project_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:common.project_info)
}

::google::protobuf::uint8* project_info::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.project_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes project_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->project_id(), target);
  }

  // optional bytes project_name = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->project_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.project_info)
  return target;
}

size_t project_info::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.project_info)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes project_id = 1;
    if (has_project_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->project_id());
    }

    // optional bytes project_name = 2;
    if (has_project_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->project_name());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void project_info::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.project_info)
  GOOGLE_DCHECK_NE(&from, this);
  const project_info* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const project_info>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.project_info)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.project_info)
    MergeFrom(*source);
  }
}

void project_info::MergeFrom(const project_info& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.project_info)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_project_id();
      project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_project_name();
      project_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_name_);
    }
  }
}

void project_info::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.project_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void project_info::CopyFrom(const project_info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.project_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool project_info::IsInitialized() const {
  return true;
}

void project_info::Swap(project_info* other) {
  if (other == this) return;
  InternalSwap(other);
}
void project_info::InternalSwap(project_info* other) {
  using std::swap;
  project_id_.Swap(&other->project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  project_name_.Swap(&other->project_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata project_info::GetMetadata() const {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void project_friend::InitAsDefaultInstance() {
  ::common::_project_friend_default_instance_._instance.get_mutable()->user_ = const_cast< ::common::user_info*>(
      ::common::user_info::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int project_friend::kTypeFieldNumber;
const int project_friend::kUserFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

project_friend::project_friend()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_common_2eproto::scc_info_project_friend.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.project_friend)
}
project_friend::project_friend(const project_friend& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_user()) {
    user_ = new ::common::user_info(*from.user_);
  } else {
    user_ = NULL;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:common.project_friend)
}

void project_friend::SharedCtor() {
  ::memset(&user_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&user_)) + sizeof(type_));
}

project_friend::~project_friend() {
  // @@protoc_insertion_point(destructor:common.project_friend)
  SharedDtor();
}

void project_friend::SharedDtor() {
  if (this != internal_default_instance()) delete user_;
}

void project_friend::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* project_friend::descriptor() {
  ::protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const project_friend& project_friend::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_common_2eproto::scc_info_project_friend.base);
  return *internal_default_instance();
}


void project_friend::Clear() {
// @@protoc_insertion_point(message_clear_start:common.project_friend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(user_ != NULL);
    user_->Clear();
  }
  type_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool project_friend::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.project_friend)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .common.user_info user = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_user()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.project_friend)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.project_friend)
  return false;
#undef DO_
}

void project_friend::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.project_friend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 type = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type(), output);
  }

  // required .common.user_info user = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_user(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:common.project_friend)
}

::google::protobuf::uint8* project_friend::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.project_friend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 type = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type(), target);
  }

  // required .common.user_info user = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_user(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.project_friend)
  return target;
}

size_t project_friend::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.project_friend)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .common.user_info user = 2;
  if (has_user()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *user_);
  }
  // optional uint32 type = 1;
  if (has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void project_friend::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.project_friend)
  GOOGLE_DCHECK_NE(&from, this);
  const project_friend* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const project_friend>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.project_friend)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.project_friend)
    MergeFrom(*source);
  }
}

void project_friend::MergeFrom(const project_friend& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.project_friend)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_user()->::common::user_info::MergeFrom(from.user());
    }
    if (cached_has_bits & 0x00000002u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void project_friend::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.project_friend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void project_friend::CopyFrom(const project_friend& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.project_friend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool project_friend::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_user()) {
    if (!this->user_->IsInitialized()) return false;
  }
  return true;
}

void project_friend::Swap(project_friend* other) {
  if (other == this) return;
  InternalSwap(other);
}
void project_friend::InternalSwap(project_friend* other) {
  using std::swap;
  swap(user_, other->user_);
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata project_friend::GetMetadata() const {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace common
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::common::msg_content* Arena::CreateMaybeMessage< ::common::msg_content >(Arena* arena) {
  return Arena::CreateInternal< ::common::msg_content >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::common::TEXT_CONTENT* Arena::CreateMaybeMessage< ::common::TEXT_CONTENT >(Arena* arena) {
  return Arena::CreateInternal< ::common::TEXT_CONTENT >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::common::PICTURE_CONTENT* Arena::CreateMaybeMessage< ::common::PICTURE_CONTENT >(Arena* arena) {
  return Arena::CreateInternal< ::common::PICTURE_CONTENT >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::common::VOICE_CONTENT* Arena::CreateMaybeMessage< ::common::VOICE_CONTENT >(Arena* arena) {
  return Arena::CreateInternal< ::common::VOICE_CONTENT >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::common::BUSI_CARD_CONTENT* Arena::CreateMaybeMessage< ::common::BUSI_CARD_CONTENT >(Arena* arena) {
  return Arena::CreateInternal< ::common::BUSI_CARD_CONTENT >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::common::LOCATION_CONTENT* Arena::CreateMaybeMessage< ::common::LOCATION_CONTENT >(Arena* arena) {
  return Arena::CreateInternal< ::common::LOCATION_CONTENT >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::common::RED_PKT_CONTENT* Arena::CreateMaybeMessage< ::common::RED_PKT_CONTENT >(Arena* arena) {
  return Arena::CreateInternal< ::common::RED_PKT_CONTENT >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::common::SHARE_CONTENT* Arena::CreateMaybeMessage< ::common::SHARE_CONTENT >(Arena* arena) {
  return Arena::CreateInternal< ::common::SHARE_CONTENT >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::common::JSON_CONTENT* Arena::CreateMaybeMessage< ::common::JSON_CONTENT >(Arena* arena) {
  return Arena::CreateInternal< ::common::JSON_CONTENT >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::common::RISK_WARNING* Arena::CreateMaybeMessage< ::common::RISK_WARNING >(Arena* arena) {
  return Arena::CreateInternal< ::common::RISK_WARNING >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::common::errorinfo* Arena::CreateMaybeMessage< ::common::errorinfo >(Arena* arena) {
  return Arena::CreateInternal< ::common::errorinfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::common::user_info* Arena::CreateMaybeMessage< ::common::user_info >(Arena* arena) {
  return Arena::CreateInternal< ::common::user_info >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::common::auto_attention_friend_info* Arena::CreateMaybeMessage< ::common::auto_attention_friend_info >(Arena* arena) {
  return Arena::CreateInternal< ::common::auto_attention_friend_info >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::common::friend_info* Arena::CreateMaybeMessage< ::common::friend_info >(Arena* arena) {
  return Arena::CreateInternal< ::common::friend_info >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::common::group_info* Arena::CreateMaybeMessage< ::common::group_info >(Arena* arena) {
  return Arena::CreateInternal< ::common::group_info >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::common::user_group_summary* Arena::CreateMaybeMessage< ::common::user_group_summary >(Arena* arena) {
  return Arena::CreateInternal< ::common::user_group_summary >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::common::group_member_info* Arena::CreateMaybeMessage< ::common::group_member_info >(Arena* arena) {
  return Arena::CreateInternal< ::common::group_member_info >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::common::project_group_member_info* Arena::CreateMaybeMessage< ::common::project_group_member_info >(Arena* arena) {
  return Arena::CreateInternal< ::common::project_group_member_info >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::common::group_tag* Arena::CreateMaybeMessage< ::common::group_tag >(Arena* arena) {
  return Arena::CreateInternal< ::common::group_tag >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::common::red_packet_info* Arena::CreateMaybeMessage< ::common::red_packet_info >(Arena* arena) {
  return Arena::CreateInternal< ::common::red_packet_info >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::common::project_info* Arena::CreateMaybeMessage< ::common::project_info >(Arena* arena) {
  return Arena::CreateInternal< ::common::project_info >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::common::project_friend* Arena::CreateMaybeMessage< ::common::project_friend >(Arena* arena) {
  return Arena::CreateInternal< ::common::project_friend >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
