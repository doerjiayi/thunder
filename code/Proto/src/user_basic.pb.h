// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: user_basic.proto

#ifndef PROTOBUF_INCLUDED_user_5fbasic_2eproto
#define PROTOBUF_INCLUDED_user_5fbasic_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_user_5fbasic_2eproto 

namespace protobuf_user_5fbasic_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_user_5fbasic_2eproto
class user_basic;
class user_basicDefaultTypeInternal;
extern user_basicDefaultTypeInternal _user_basic_default_instance_;
namespace google {
namespace protobuf {
template<> ::user_basic* Arena::CreateMaybeMessage<::user_basic>(Arena*);
}  // namespace protobuf
}  // namespace google

// ===================================================================

class user_basic : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:user_basic) */ {
 public:
  user_basic();
  virtual ~user_basic();

  user_basic(const user_basic& from);

  inline user_basic& operator=(const user_basic& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  user_basic(user_basic&& from) noexcept
    : user_basic() {
    *this = ::std::move(from);
  }

  inline user_basic& operator=(user_basic&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const user_basic& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const user_basic* internal_default_instance() {
    return reinterpret_cast<const user_basic*>(
               &_user_basic_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(user_basic* other);
  friend void swap(user_basic& a, user_basic& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline user_basic* New() const final {
    return CreateMaybeMessage<user_basic>(NULL);
  }

  user_basic* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<user_basic>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const user_basic& from);
  void MergeFrom(const user_basic& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(user_basic* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes appguid = 2;
  void clear_appguid();
  static const int kAppguidFieldNumber = 2;
  const ::std::string& appguid() const;
  void set_appguid(const ::std::string& value);
  #if LANG_CXX11
  void set_appguid(::std::string&& value);
  #endif
  void set_appguid(const char* value);
  void set_appguid(const void* value, size_t size);
  ::std::string* mutable_appguid();
  ::std::string* release_appguid();
  void set_allocated_appguid(::std::string* appguid);

  // bytes appsecret = 3;
  void clear_appsecret();
  static const int kAppsecretFieldNumber = 3;
  const ::std::string& appsecret() const;
  void set_appsecret(const ::std::string& value);
  #if LANG_CXX11
  void set_appsecret(::std::string&& value);
  #endif
  void set_appsecret(const char* value);
  void set_appsecret(const void* value, size_t size);
  ::std::string* mutable_appsecret();
  ::std::string* release_appsecret();
  void set_allocated_appsecret(::std::string* appsecret);

  // bytes account = 6;
  void clear_account();
  static const int kAccountFieldNumber = 6;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  #if LANG_CXX11
  void set_account(::std::string&& value);
  #endif
  void set_account(const char* value);
  void set_account(const void* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // bytes nickname = 7;
  void clear_nickname();
  static const int kNicknameFieldNumber = 7;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const void* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // bytes avatar = 8;
  void clear_avatar();
  static const int kAvatarFieldNumber = 8;
  const ::std::string& avatar() const;
  void set_avatar(const ::std::string& value);
  #if LANG_CXX11
  void set_avatar(::std::string&& value);
  #endif
  void set_avatar(const char* value);
  void set_avatar(const void* value, size_t size);
  ::std::string* mutable_avatar();
  ::std::string* release_avatar();
  void set_allocated_avatar(::std::string* avatar);

  // string login_ip = 11;
  void clear_login_ip();
  static const int kLoginIpFieldNumber = 11;
  const ::std::string& login_ip() const;
  void set_login_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_login_ip(::std::string&& value);
  #endif
  void set_login_ip(const char* value);
  void set_login_ip(const char* value, size_t size);
  ::std::string* mutable_login_ip();
  ::std::string* release_login_ip();
  void set_allocated_login_ip(::std::string* login_ip);

  // uint32 appid = 1;
  void clear_appid();
  static const int kAppidFieldNumber = 1;
  ::google::protobuf::uint32 appid() const;
  void set_appid(::google::protobuf::uint32 value);

  // uint32 userid = 5;
  void clear_userid();
  static const int kUseridFieldNumber = 5;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // uint64 login_token = 4;
  void clear_login_token();
  static const int kLoginTokenFieldNumber = 4;
  ::google::protobuf::uint64 login_token() const;
  void set_login_token(::google::protobuf::uint64 value);

  // uint32 user_type = 9;
  void clear_user_type();
  static const int kUserTypeFieldNumber = 9;
  ::google::protobuf::uint32 user_type() const;
  void set_user_type(::google::protobuf::uint32 value);

  // uint32 login_client_type = 10;
  void clear_login_client_type();
  static const int kLoginClientTypeFieldNumber = 10;
  ::google::protobuf::uint32 login_client_type() const;
  void set_login_client_type(::google::protobuf::uint32 value);

  // uint64 user_identity = 12;
  void clear_user_identity();
  static const int kUserIdentityFieldNumber = 12;
  ::google::protobuf::uint64 user_identity() const;
  void set_user_identity(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:user_basic)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr appguid_;
  ::google::protobuf::internal::ArenaStringPtr appsecret_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::internal::ArenaStringPtr avatar_;
  ::google::protobuf::internal::ArenaStringPtr login_ip_;
  ::google::protobuf::uint32 appid_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint64 login_token_;
  ::google::protobuf::uint32 user_type_;
  ::google::protobuf::uint32 login_client_type_;
  ::google::protobuf::uint64 user_identity_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_user_5fbasic_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// user_basic

// uint32 appid = 1;
inline void user_basic::clear_appid() {
  appid_ = 0u;
}
inline ::google::protobuf::uint32 user_basic::appid() const {
  // @@protoc_insertion_point(field_get:user_basic.appid)
  return appid_;
}
inline void user_basic::set_appid(::google::protobuf::uint32 value) {
  
  appid_ = value;
  // @@protoc_insertion_point(field_set:user_basic.appid)
}

// bytes appguid = 2;
inline void user_basic::clear_appguid() {
  appguid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& user_basic::appguid() const {
  // @@protoc_insertion_point(field_get:user_basic.appguid)
  return appguid_.GetNoArena();
}
inline void user_basic::set_appguid(const ::std::string& value) {
  
  appguid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:user_basic.appguid)
}
#if LANG_CXX11
inline void user_basic::set_appguid(::std::string&& value) {
  
  appguid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:user_basic.appguid)
}
#endif
inline void user_basic::set_appguid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appguid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:user_basic.appguid)
}
inline void user_basic::set_appguid(const void* value, size_t size) {
  
  appguid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:user_basic.appguid)
}
inline ::std::string* user_basic::mutable_appguid() {
  
  // @@protoc_insertion_point(field_mutable:user_basic.appguid)
  return appguid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* user_basic::release_appguid() {
  // @@protoc_insertion_point(field_release:user_basic.appguid)
  
  return appguid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void user_basic::set_allocated_appguid(::std::string* appguid) {
  if (appguid != NULL) {
    
  } else {
    
  }
  appguid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appguid);
  // @@protoc_insertion_point(field_set_allocated:user_basic.appguid)
}

// bytes appsecret = 3;
inline void user_basic::clear_appsecret() {
  appsecret_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& user_basic::appsecret() const {
  // @@protoc_insertion_point(field_get:user_basic.appsecret)
  return appsecret_.GetNoArena();
}
inline void user_basic::set_appsecret(const ::std::string& value) {
  
  appsecret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:user_basic.appsecret)
}
#if LANG_CXX11
inline void user_basic::set_appsecret(::std::string&& value) {
  
  appsecret_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:user_basic.appsecret)
}
#endif
inline void user_basic::set_appsecret(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appsecret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:user_basic.appsecret)
}
inline void user_basic::set_appsecret(const void* value, size_t size) {
  
  appsecret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:user_basic.appsecret)
}
inline ::std::string* user_basic::mutable_appsecret() {
  
  // @@protoc_insertion_point(field_mutable:user_basic.appsecret)
  return appsecret_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* user_basic::release_appsecret() {
  // @@protoc_insertion_point(field_release:user_basic.appsecret)
  
  return appsecret_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void user_basic::set_allocated_appsecret(::std::string* appsecret) {
  if (appsecret != NULL) {
    
  } else {
    
  }
  appsecret_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appsecret);
  // @@protoc_insertion_point(field_set_allocated:user_basic.appsecret)
}

// uint64 login_token = 4;
inline void user_basic::clear_login_token() {
  login_token_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 user_basic::login_token() const {
  // @@protoc_insertion_point(field_get:user_basic.login_token)
  return login_token_;
}
inline void user_basic::set_login_token(::google::protobuf::uint64 value) {
  
  login_token_ = value;
  // @@protoc_insertion_point(field_set:user_basic.login_token)
}

// uint32 userid = 5;
inline void user_basic::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 user_basic::userid() const {
  // @@protoc_insertion_point(field_get:user_basic.userid)
  return userid_;
}
inline void user_basic::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:user_basic.userid)
}

// bytes account = 6;
inline void user_basic::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& user_basic::account() const {
  // @@protoc_insertion_point(field_get:user_basic.account)
  return account_.GetNoArena();
}
inline void user_basic::set_account(const ::std::string& value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:user_basic.account)
}
#if LANG_CXX11
inline void user_basic::set_account(::std::string&& value) {
  
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:user_basic.account)
}
#endif
inline void user_basic::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:user_basic.account)
}
inline void user_basic::set_account(const void* value, size_t size) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:user_basic.account)
}
inline ::std::string* user_basic::mutable_account() {
  
  // @@protoc_insertion_point(field_mutable:user_basic.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* user_basic::release_account() {
  // @@protoc_insertion_point(field_release:user_basic.account)
  
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void user_basic::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    
  } else {
    
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:user_basic.account)
}

// bytes nickname = 7;
inline void user_basic::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& user_basic::nickname() const {
  // @@protoc_insertion_point(field_get:user_basic.nickname)
  return nickname_.GetNoArena();
}
inline void user_basic::set_nickname(const ::std::string& value) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:user_basic.nickname)
}
#if LANG_CXX11
inline void user_basic::set_nickname(::std::string&& value) {
  
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:user_basic.nickname)
}
#endif
inline void user_basic::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:user_basic.nickname)
}
inline void user_basic::set_nickname(const void* value, size_t size) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:user_basic.nickname)
}
inline ::std::string* user_basic::mutable_nickname() {
  
  // @@protoc_insertion_point(field_mutable:user_basic.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* user_basic::release_nickname() {
  // @@protoc_insertion_point(field_release:user_basic.nickname)
  
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void user_basic::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    
  } else {
    
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:user_basic.nickname)
}

// bytes avatar = 8;
inline void user_basic::clear_avatar() {
  avatar_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& user_basic::avatar() const {
  // @@protoc_insertion_point(field_get:user_basic.avatar)
  return avatar_.GetNoArena();
}
inline void user_basic::set_avatar(const ::std::string& value) {
  
  avatar_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:user_basic.avatar)
}
#if LANG_CXX11
inline void user_basic::set_avatar(::std::string&& value) {
  
  avatar_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:user_basic.avatar)
}
#endif
inline void user_basic::set_avatar(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  avatar_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:user_basic.avatar)
}
inline void user_basic::set_avatar(const void* value, size_t size) {
  
  avatar_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:user_basic.avatar)
}
inline ::std::string* user_basic::mutable_avatar() {
  
  // @@protoc_insertion_point(field_mutable:user_basic.avatar)
  return avatar_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* user_basic::release_avatar() {
  // @@protoc_insertion_point(field_release:user_basic.avatar)
  
  return avatar_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void user_basic::set_allocated_avatar(::std::string* avatar) {
  if (avatar != NULL) {
    
  } else {
    
  }
  avatar_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), avatar);
  // @@protoc_insertion_point(field_set_allocated:user_basic.avatar)
}

// uint32 user_type = 9;
inline void user_basic::clear_user_type() {
  user_type_ = 0u;
}
inline ::google::protobuf::uint32 user_basic::user_type() const {
  // @@protoc_insertion_point(field_get:user_basic.user_type)
  return user_type_;
}
inline void user_basic::set_user_type(::google::protobuf::uint32 value) {
  
  user_type_ = value;
  // @@protoc_insertion_point(field_set:user_basic.user_type)
}

// uint32 login_client_type = 10;
inline void user_basic::clear_login_client_type() {
  login_client_type_ = 0u;
}
inline ::google::protobuf::uint32 user_basic::login_client_type() const {
  // @@protoc_insertion_point(field_get:user_basic.login_client_type)
  return login_client_type_;
}
inline void user_basic::set_login_client_type(::google::protobuf::uint32 value) {
  
  login_client_type_ = value;
  // @@protoc_insertion_point(field_set:user_basic.login_client_type)
}

// string login_ip = 11;
inline void user_basic::clear_login_ip() {
  login_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& user_basic::login_ip() const {
  // @@protoc_insertion_point(field_get:user_basic.login_ip)
  return login_ip_.GetNoArena();
}
inline void user_basic::set_login_ip(const ::std::string& value) {
  
  login_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:user_basic.login_ip)
}
#if LANG_CXX11
inline void user_basic::set_login_ip(::std::string&& value) {
  
  login_ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:user_basic.login_ip)
}
#endif
inline void user_basic::set_login_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  login_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:user_basic.login_ip)
}
inline void user_basic::set_login_ip(const char* value, size_t size) {
  
  login_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:user_basic.login_ip)
}
inline ::std::string* user_basic::mutable_login_ip() {
  
  // @@protoc_insertion_point(field_mutable:user_basic.login_ip)
  return login_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* user_basic::release_login_ip() {
  // @@protoc_insertion_point(field_release:user_basic.login_ip)
  
  return login_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void user_basic::set_allocated_login_ip(::std::string* login_ip) {
  if (login_ip != NULL) {
    
  } else {
    
  }
  login_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), login_ip);
  // @@protoc_insertion_point(field_set_allocated:user_basic.login_ip)
}

// uint64 user_identity = 12;
inline void user_basic::clear_user_identity() {
  user_identity_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 user_basic::user_identity() const {
  // @@protoc_insertion_point(field_get:user_basic.user_identity)
  return user_identity_;
}
inline void user_basic::set_user_identity(::google::protobuf::uint64 value) {
  
  user_identity_ = value;
  // @@protoc_insertion_point(field_set:user_basic.user_identity)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_user_5fbasic_2eproto
