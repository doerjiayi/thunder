// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server_internal.proto

#include "server_internal.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_common_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_errorinfo;
}  // namespace protobuf_common_2eproto
class personal_notifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<personal_notify>
      _instance;
} _personal_notify_default_instance_;
class group_notifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<group_notify>
      _instance;
} _group_notify_default_instance_;
class offical_userset_notifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<offical_userset_notify>
      _instance;
} _offical_userset_notify_default_instance_;
class offical_specified_notifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<offical_specified_notify>
      _instance;
} _offical_specified_notify_default_instance_;
class user_registerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<user_register>
      _instance;
} _user_register_default_instance_;
class user_register_ackDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<user_register_ack>
      _instance;
} _user_register_ack_default_instance_;
namespace protobuf_server_5finternal_2eproto {
static void InitDefaultspersonal_notify() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_personal_notify_default_instance_;
    new (ptr) ::personal_notify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::personal_notify::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_personal_notify =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultspersonal_notify}, {}};

static void InitDefaultsgroup_notify() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_group_notify_default_instance_;
    new (ptr) ::group_notify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::group_notify::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_group_notify =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsgroup_notify}, {}};

static void InitDefaultsoffical_userset_notify() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_offical_userset_notify_default_instance_;
    new (ptr) ::offical_userset_notify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::offical_userset_notify::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_offical_userset_notify =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsoffical_userset_notify}, {}};

static void InitDefaultsoffical_specified_notify() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_offical_specified_notify_default_instance_;
    new (ptr) ::offical_specified_notify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::offical_specified_notify::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_offical_specified_notify =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsoffical_specified_notify}, {}};

static void InitDefaultsuser_register() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_user_register_default_instance_;
    new (ptr) ::user_register();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::user_register::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_user_register =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsuser_register}, {}};

static void InitDefaultsuser_register_ack() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_user_register_ack_default_instance_;
    new (ptr) ::user_register_ack();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::user_register_ack::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_user_register_ack =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsuser_register_ack}, {
      &protobuf_common_2eproto::scc_info_errorinfo.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_personal_notify.base);
  ::google::protobuf::internal::InitSCC(&scc_info_group_notify.base);
  ::google::protobuf::internal::InitSCC(&scc_info_offical_userset_notify.base);
  ::google::protobuf::internal::InitSCC(&scc_info_offical_specified_notify.base);
  ::google::protobuf::internal::InitSCC(&scc_info_user_register.base);
  ::google::protobuf::internal::InitSCC(&scc_info_user_register_ack.base);
}

::google::protobuf::Metadata file_level_metadata[6];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::personal_notify, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::personal_notify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::personal_notify, imid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::group_notify, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::group_notify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::group_notify, imid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::offical_userset_notify, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::offical_userset_notify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::offical_userset_notify, imid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::offical_specified_notify, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::offical_specified_notify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::offical_specified_notify, imid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::user_register, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::user_register, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::user_register, user_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::user_register, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::user_register, nickname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::user_register, avatar_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::user_register, mobile_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::user_register, introduction_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::user_register, gender_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::user_register, add_identity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::user_register, del_identity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::user_register, company_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::user_register, occupation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::user_register, industry_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::user_register, area_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::user_register, password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::user_register, imid_),
  10,
  0,
  1,
  2,
  3,
  4,
  11,
  12,
  13,
  5,
  6,
  7,
  8,
  9,
  14,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::user_register_ack, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::user_register_ack, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::user_register_ack, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::user_register_ack, imid_),
  0,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(::personal_notify)},
  { 7, 13, sizeof(::group_notify)},
  { 14, 20, sizeof(::offical_userset_notify)},
  { 21, 27, sizeof(::offical_specified_notify)},
  { 28, 48, sizeof(::user_register)},
  { 63, 70, sizeof(::user_register_ack)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_personal_notify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_group_notify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_offical_userset_notify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_offical_specified_notify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_user_register_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_user_register_ack_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "server_internal.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\025server_internal.proto\032\014common.proto\"\037\n"
      "\017personal_notify\022\014\n\004imid\030\001 \002(\r\"\034\n\014group_"
      "notify\022\014\n\004imid\030\001 \002(\r\"&\n\026offical_userset_"
      "notify\022\014\n\004imid\030\001 \002(\r\"(\n\030offical_specifie"
      "d_notify\022\014\n\004imid\030\001 \002(\r\"\231\002\n\ruser_register"
      "\022\021\n\tuser_type\030\001 \002(\r\022\014\n\004guid\030\002 \002(\014\022\020\n\010nic"
      "kname\030\003 \001(\014\022\016\n\006avatar\030\004 \001(\014\022\016\n\006mobile\030\005 "
      "\001(\t\022\024\n\014introduction\030\006 \001(\014\022\016\n\006gender\030\007 \001("
      "\005\022\024\n\014add_identity\030\010 \001(\004\022\024\n\014del_identity\030"
      "\t \001(\004\022\017\n\007company\030\n \001(\014\022\022\n\noccupation\030\013 \001"
      "(\014\022\020\n\010industry\030\014 \001(\014\022\014\n\004area\030\r \001(\014\022\020\n\010pa"
      "ssword\030\016 \001(\014\022\014\n\004imid\030\017 \001(\r\"C\n\021user_regis"
      "ter_ack\022 \n\005error\030\001 \001(\0132\021.common.errorinf"
      "o\022\014\n\004imid\030\002 \001(\r"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 535);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "server_internal.proto", &protobuf_RegisterTypes);
  ::protobuf_common_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_server_5finternal_2eproto

// ===================================================================

void personal_notify::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int personal_notify::kImidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

personal_notify::personal_notify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_server_5finternal_2eproto::scc_info_personal_notify.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:personal_notify)
}
personal_notify::personal_notify(const personal_notify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  imid_ = from.imid_;
  // @@protoc_insertion_point(copy_constructor:personal_notify)
}

void personal_notify::SharedCtor() {
  imid_ = 0u;
}

personal_notify::~personal_notify() {
  // @@protoc_insertion_point(destructor:personal_notify)
  SharedDtor();
}

void personal_notify::SharedDtor() {
}

void personal_notify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* personal_notify::descriptor() {
  ::protobuf_server_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_server_5finternal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const personal_notify& personal_notify::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_server_5finternal_2eproto::scc_info_personal_notify.base);
  return *internal_default_instance();
}


void personal_notify::Clear() {
// @@protoc_insertion_point(message_clear_start:personal_notify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  imid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool personal_notify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:personal_notify)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 imid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_imid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &imid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:personal_notify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:personal_notify)
  return false;
#undef DO_
}

void personal_notify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:personal_notify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 imid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->imid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:personal_notify)
}

::google::protobuf::uint8* personal_notify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:personal_notify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 imid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->imid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:personal_notify)
  return target;
}

size_t personal_notify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:personal_notify)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 imid = 1;
  if (has_imid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->imid());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void personal_notify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:personal_notify)
  GOOGLE_DCHECK_NE(&from, this);
  const personal_notify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const personal_notify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:personal_notify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:personal_notify)
    MergeFrom(*source);
  }
}

void personal_notify::MergeFrom(const personal_notify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:personal_notify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_imid()) {
    set_imid(from.imid());
  }
}

void personal_notify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:personal_notify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void personal_notify::CopyFrom(const personal_notify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:personal_notify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool personal_notify::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void personal_notify::Swap(personal_notify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void personal_notify::InternalSwap(personal_notify* other) {
  using std::swap;
  swap(imid_, other->imid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata personal_notify::GetMetadata() const {
  protobuf_server_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_server_5finternal_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void group_notify::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int group_notify::kImidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

group_notify::group_notify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_server_5finternal_2eproto::scc_info_group_notify.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:group_notify)
}
group_notify::group_notify(const group_notify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  imid_ = from.imid_;
  // @@protoc_insertion_point(copy_constructor:group_notify)
}

void group_notify::SharedCtor() {
  imid_ = 0u;
}

group_notify::~group_notify() {
  // @@protoc_insertion_point(destructor:group_notify)
  SharedDtor();
}

void group_notify::SharedDtor() {
}

void group_notify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* group_notify::descriptor() {
  ::protobuf_server_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_server_5finternal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const group_notify& group_notify::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_server_5finternal_2eproto::scc_info_group_notify.base);
  return *internal_default_instance();
}


void group_notify::Clear() {
// @@protoc_insertion_point(message_clear_start:group_notify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  imid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool group_notify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:group_notify)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 imid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_imid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &imid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:group_notify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:group_notify)
  return false;
#undef DO_
}

void group_notify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:group_notify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 imid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->imid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:group_notify)
}

::google::protobuf::uint8* group_notify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:group_notify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 imid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->imid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:group_notify)
  return target;
}

size_t group_notify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:group_notify)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 imid = 1;
  if (has_imid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->imid());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void group_notify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:group_notify)
  GOOGLE_DCHECK_NE(&from, this);
  const group_notify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const group_notify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:group_notify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:group_notify)
    MergeFrom(*source);
  }
}

void group_notify::MergeFrom(const group_notify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:group_notify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_imid()) {
    set_imid(from.imid());
  }
}

void group_notify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:group_notify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void group_notify::CopyFrom(const group_notify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:group_notify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool group_notify::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void group_notify::Swap(group_notify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void group_notify::InternalSwap(group_notify* other) {
  using std::swap;
  swap(imid_, other->imid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata group_notify::GetMetadata() const {
  protobuf_server_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_server_5finternal_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void offical_userset_notify::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int offical_userset_notify::kImidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

offical_userset_notify::offical_userset_notify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_server_5finternal_2eproto::scc_info_offical_userset_notify.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:offical_userset_notify)
}
offical_userset_notify::offical_userset_notify(const offical_userset_notify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  imid_ = from.imid_;
  // @@protoc_insertion_point(copy_constructor:offical_userset_notify)
}

void offical_userset_notify::SharedCtor() {
  imid_ = 0u;
}

offical_userset_notify::~offical_userset_notify() {
  // @@protoc_insertion_point(destructor:offical_userset_notify)
  SharedDtor();
}

void offical_userset_notify::SharedDtor() {
}

void offical_userset_notify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* offical_userset_notify::descriptor() {
  ::protobuf_server_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_server_5finternal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const offical_userset_notify& offical_userset_notify::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_server_5finternal_2eproto::scc_info_offical_userset_notify.base);
  return *internal_default_instance();
}


void offical_userset_notify::Clear() {
// @@protoc_insertion_point(message_clear_start:offical_userset_notify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  imid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool offical_userset_notify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:offical_userset_notify)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 imid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_imid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &imid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:offical_userset_notify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:offical_userset_notify)
  return false;
#undef DO_
}

void offical_userset_notify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:offical_userset_notify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 imid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->imid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:offical_userset_notify)
}

::google::protobuf::uint8* offical_userset_notify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:offical_userset_notify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 imid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->imid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:offical_userset_notify)
  return target;
}

size_t offical_userset_notify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:offical_userset_notify)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 imid = 1;
  if (has_imid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->imid());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void offical_userset_notify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:offical_userset_notify)
  GOOGLE_DCHECK_NE(&from, this);
  const offical_userset_notify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const offical_userset_notify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:offical_userset_notify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:offical_userset_notify)
    MergeFrom(*source);
  }
}

void offical_userset_notify::MergeFrom(const offical_userset_notify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:offical_userset_notify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_imid()) {
    set_imid(from.imid());
  }
}

void offical_userset_notify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:offical_userset_notify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void offical_userset_notify::CopyFrom(const offical_userset_notify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:offical_userset_notify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool offical_userset_notify::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void offical_userset_notify::Swap(offical_userset_notify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void offical_userset_notify::InternalSwap(offical_userset_notify* other) {
  using std::swap;
  swap(imid_, other->imid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata offical_userset_notify::GetMetadata() const {
  protobuf_server_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_server_5finternal_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void offical_specified_notify::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int offical_specified_notify::kImidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

offical_specified_notify::offical_specified_notify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_server_5finternal_2eproto::scc_info_offical_specified_notify.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:offical_specified_notify)
}
offical_specified_notify::offical_specified_notify(const offical_specified_notify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  imid_ = from.imid_;
  // @@protoc_insertion_point(copy_constructor:offical_specified_notify)
}

void offical_specified_notify::SharedCtor() {
  imid_ = 0u;
}

offical_specified_notify::~offical_specified_notify() {
  // @@protoc_insertion_point(destructor:offical_specified_notify)
  SharedDtor();
}

void offical_specified_notify::SharedDtor() {
}

void offical_specified_notify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* offical_specified_notify::descriptor() {
  ::protobuf_server_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_server_5finternal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const offical_specified_notify& offical_specified_notify::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_server_5finternal_2eproto::scc_info_offical_specified_notify.base);
  return *internal_default_instance();
}


void offical_specified_notify::Clear() {
// @@protoc_insertion_point(message_clear_start:offical_specified_notify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  imid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool offical_specified_notify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:offical_specified_notify)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 imid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_imid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &imid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:offical_specified_notify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:offical_specified_notify)
  return false;
#undef DO_
}

void offical_specified_notify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:offical_specified_notify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 imid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->imid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:offical_specified_notify)
}

::google::protobuf::uint8* offical_specified_notify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:offical_specified_notify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 imid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->imid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:offical_specified_notify)
  return target;
}

size_t offical_specified_notify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:offical_specified_notify)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 imid = 1;
  if (has_imid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->imid());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void offical_specified_notify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:offical_specified_notify)
  GOOGLE_DCHECK_NE(&from, this);
  const offical_specified_notify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const offical_specified_notify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:offical_specified_notify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:offical_specified_notify)
    MergeFrom(*source);
  }
}

void offical_specified_notify::MergeFrom(const offical_specified_notify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:offical_specified_notify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_imid()) {
    set_imid(from.imid());
  }
}

void offical_specified_notify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:offical_specified_notify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void offical_specified_notify::CopyFrom(const offical_specified_notify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:offical_specified_notify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool offical_specified_notify::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void offical_specified_notify::Swap(offical_specified_notify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void offical_specified_notify::InternalSwap(offical_specified_notify* other) {
  using std::swap;
  swap(imid_, other->imid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata offical_specified_notify::GetMetadata() const {
  protobuf_server_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_server_5finternal_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void user_register::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int user_register::kUserTypeFieldNumber;
const int user_register::kGuidFieldNumber;
const int user_register::kNicknameFieldNumber;
const int user_register::kAvatarFieldNumber;
const int user_register::kMobileFieldNumber;
const int user_register::kIntroductionFieldNumber;
const int user_register::kGenderFieldNumber;
const int user_register::kAddIdentityFieldNumber;
const int user_register::kDelIdentityFieldNumber;
const int user_register::kCompanyFieldNumber;
const int user_register::kOccupationFieldNumber;
const int user_register::kIndustryFieldNumber;
const int user_register::kAreaFieldNumber;
const int user_register::kPasswordFieldNumber;
const int user_register::kImidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

user_register::user_register()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_server_5finternal_2eproto::scc_info_user_register.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:user_register)
}
user_register::user_register(const user_register& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_guid()) {
    guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_);
  }
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nickname()) {
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  avatar_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_avatar()) {
    avatar_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.avatar_);
  }
  mobile_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_mobile()) {
    mobile_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mobile_);
  }
  introduction_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_introduction()) {
    introduction_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.introduction_);
  }
  company_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_company()) {
    company_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.company_);
  }
  occupation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_occupation()) {
    occupation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.occupation_);
  }
  industry_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_industry()) {
    industry_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.industry_);
  }
  area_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_area()) {
    area_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.area_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_password()) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  ::memcpy(&user_type_, &from.user_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&imid_) -
    reinterpret_cast<char*>(&user_type_)) + sizeof(imid_));
  // @@protoc_insertion_point(copy_constructor:user_register)
}

void user_register::SharedCtor() {
  guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  avatar_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mobile_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  introduction_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  company_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  occupation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  industry_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  area_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&imid_) -
      reinterpret_cast<char*>(&user_type_)) + sizeof(imid_));
}

user_register::~user_register() {
  // @@protoc_insertion_point(destructor:user_register)
  SharedDtor();
}

void user_register::SharedDtor() {
  guid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  avatar_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mobile_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  introduction_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  company_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  occupation_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  industry_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  area_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void user_register::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* user_register::descriptor() {
  ::protobuf_server_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_server_5finternal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const user_register& user_register::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_server_5finternal_2eproto::scc_info_user_register.base);
  return *internal_default_instance();
}


void user_register::Clear() {
// @@protoc_insertion_point(message_clear_start:user_register)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      guid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      nickname_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      avatar_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      mobile_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      introduction_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      company_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000040u) {
      occupation_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000080u) {
      industry_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 768u) {
    if (cached_has_bits & 0x00000100u) {
      area_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000200u) {
      password_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 31744u) {
    ::memset(&user_type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&imid_) -
        reinterpret_cast<char*>(&user_type_)) + sizeof(imid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool user_register::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:user_register)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 user_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_user_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes guid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_guid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes nickname = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_nickname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes avatar = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_avatar()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string mobile = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mobile()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mobile().data(), static_cast<int>(this->mobile().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "user_register.mobile");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes introduction = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_introduction()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 gender = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_gender();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gender_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 add_identity = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_add_identity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &add_identity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 del_identity = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_del_identity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &del_identity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes company = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_company()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes occupation = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_occupation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes industry = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_industry()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes area = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_area()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes password = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_password()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 imid = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          set_has_imid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &imid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:user_register)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:user_register)
  return false;
#undef DO_
}

void user_register::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:user_register)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 user_type = 1;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_type(), output);
  }

  // required bytes guid = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->guid(), output);
  }

  // optional bytes nickname = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->nickname(), output);
  }

  // optional bytes avatar = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->avatar(), output);
  }

  // optional string mobile = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mobile().data(), static_cast<int>(this->mobile().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "user_register.mobile");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->mobile(), output);
  }

  // optional bytes introduction = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->introduction(), output);
  }

  // optional int32 gender = 7;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->gender(), output);
  }

  // optional uint64 add_identity = 8;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->add_identity(), output);
  }

  // optional uint64 del_identity = 9;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(9, this->del_identity(), output);
  }

  // optional bytes company = 10;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      10, this->company(), output);
  }

  // optional bytes occupation = 11;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      11, this->occupation(), output);
  }

  // optional bytes industry = 12;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      12, this->industry(), output);
  }

  // optional bytes area = 13;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      13, this->area(), output);
  }

  // optional bytes password = 14;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      14, this->password(), output);
  }

  // optional uint32 imid = 15;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->imid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:user_register)
}

::google::protobuf::uint8* user_register::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:user_register)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 user_type = 1;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_type(), target);
  }

  // required bytes guid = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->guid(), target);
  }

  // optional bytes nickname = 3;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->nickname(), target);
  }

  // optional bytes avatar = 4;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->avatar(), target);
  }

  // optional string mobile = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mobile().data(), static_cast<int>(this->mobile().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "user_register.mobile");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->mobile(), target);
  }

  // optional bytes introduction = 6;
  if (cached_has_bits & 0x00000010u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->introduction(), target);
  }

  // optional int32 gender = 7;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->gender(), target);
  }

  // optional uint64 add_identity = 8;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->add_identity(), target);
  }

  // optional uint64 del_identity = 9;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(9, this->del_identity(), target);
  }

  // optional bytes company = 10;
  if (cached_has_bits & 0x00000020u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        10, this->company(), target);
  }

  // optional bytes occupation = 11;
  if (cached_has_bits & 0x00000040u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        11, this->occupation(), target);
  }

  // optional bytes industry = 12;
  if (cached_has_bits & 0x00000080u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        12, this->industry(), target);
  }

  // optional bytes area = 13;
  if (cached_has_bits & 0x00000100u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        13, this->area(), target);
  }

  // optional bytes password = 14;
  if (cached_has_bits & 0x00000200u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        14, this->password(), target);
  }

  // optional uint32 imid = 15;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->imid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:user_register)
  return target;
}

size_t user_register::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:user_register)
  size_t total_size = 0;

  if (has_guid()) {
    // required bytes guid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->guid());
  }

  if (has_user_type()) {
    // required uint32 user_type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_type());
  }

  return total_size;
}
size_t user_register::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:user_register)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000401) ^ 0x00000401) == 0) {  // All required fields are present.
    // required bytes guid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->guid());

    // required uint32 user_type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 254u) {
    // optional bytes nickname = 3;
    if (has_nickname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->nickname());
    }

    // optional bytes avatar = 4;
    if (has_avatar()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->avatar());
    }

    // optional string mobile = 5;
    if (has_mobile()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mobile());
    }

    // optional bytes introduction = 6;
    if (has_introduction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->introduction());
    }

    // optional bytes company = 10;
    if (has_company()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->company());
    }

    // optional bytes occupation = 11;
    if (has_occupation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->occupation());
    }

    // optional bytes industry = 12;
    if (has_industry()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->industry());
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional bytes area = 13;
    if (has_area()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->area());
    }

    // optional bytes password = 14;
    if (has_password()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->password());
    }

  }
  if (_has_bits_[8 / 32] & 30720u) {
    // optional int32 gender = 7;
    if (has_gender()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gender());
    }

    // optional uint64 add_identity = 8;
    if (has_add_identity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->add_identity());
    }

    // optional uint64 del_identity = 9;
    if (has_del_identity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->del_identity());
    }

    // optional uint32 imid = 15;
    if (has_imid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->imid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void user_register::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:user_register)
  GOOGLE_DCHECK_NE(&from, this);
  const user_register* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const user_register>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:user_register)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:user_register)
    MergeFrom(*source);
  }
}

void user_register::MergeFrom(const user_register& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:user_register)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_guid();
      guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_nickname();
      nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_avatar();
      avatar_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.avatar_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_mobile();
      mobile_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mobile_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_introduction();
      introduction_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.introduction_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_company();
      company_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.company_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_occupation();
      occupation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.occupation_);
    }
    if (cached_has_bits & 0x00000080u) {
      set_has_industry();
      industry_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.industry_);
    }
  }
  if (cached_has_bits & 32512u) {
    if (cached_has_bits & 0x00000100u) {
      set_has_area();
      area_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.area_);
    }
    if (cached_has_bits & 0x00000200u) {
      set_has_password();
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
    if (cached_has_bits & 0x00000400u) {
      user_type_ = from.user_type_;
    }
    if (cached_has_bits & 0x00000800u) {
      gender_ = from.gender_;
    }
    if (cached_has_bits & 0x00001000u) {
      add_identity_ = from.add_identity_;
    }
    if (cached_has_bits & 0x00002000u) {
      del_identity_ = from.del_identity_;
    }
    if (cached_has_bits & 0x00004000u) {
      imid_ = from.imid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void user_register::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:user_register)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void user_register::CopyFrom(const user_register& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:user_register)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool user_register::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000401) != 0x00000401) return false;
  return true;
}

void user_register::Swap(user_register* other) {
  if (other == this) return;
  InternalSwap(other);
}
void user_register::InternalSwap(user_register* other) {
  using std::swap;
  guid_.Swap(&other->guid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  nickname_.Swap(&other->nickname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  avatar_.Swap(&other->avatar_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  mobile_.Swap(&other->mobile_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  introduction_.Swap(&other->introduction_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  company_.Swap(&other->company_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  occupation_.Swap(&other->occupation_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  industry_.Swap(&other->industry_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  area_.Swap(&other->area_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  password_.Swap(&other->password_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(user_type_, other->user_type_);
  swap(gender_, other->gender_);
  swap(add_identity_, other->add_identity_);
  swap(del_identity_, other->del_identity_);
  swap(imid_, other->imid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata user_register::GetMetadata() const {
  protobuf_server_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_server_5finternal_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void user_register_ack::InitAsDefaultInstance() {
  ::_user_register_ack_default_instance_._instance.get_mutable()->error_ = const_cast< ::common::errorinfo*>(
      ::common::errorinfo::internal_default_instance());
}
void user_register_ack::clear_error() {
  if (error_ != NULL) error_->Clear();
  clear_has_error();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int user_register_ack::kErrorFieldNumber;
const int user_register_ack::kImidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

user_register_ack::user_register_ack()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_server_5finternal_2eproto::scc_info_user_register_ack.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:user_register_ack)
}
user_register_ack::user_register_ack(const user_register_ack& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_error()) {
    error_ = new ::common::errorinfo(*from.error_);
  } else {
    error_ = NULL;
  }
  imid_ = from.imid_;
  // @@protoc_insertion_point(copy_constructor:user_register_ack)
}

void user_register_ack::SharedCtor() {
  ::memset(&error_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&imid_) -
      reinterpret_cast<char*>(&error_)) + sizeof(imid_));
}

user_register_ack::~user_register_ack() {
  // @@protoc_insertion_point(destructor:user_register_ack)
  SharedDtor();
}

void user_register_ack::SharedDtor() {
  if (this != internal_default_instance()) delete error_;
}

void user_register_ack::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* user_register_ack::descriptor() {
  ::protobuf_server_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_server_5finternal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const user_register_ack& user_register_ack::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_server_5finternal_2eproto::scc_info_user_register_ack.base);
  return *internal_default_instance();
}


void user_register_ack::Clear() {
// @@protoc_insertion_point(message_clear_start:user_register_ack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(error_ != NULL);
    error_->Clear();
  }
  imid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool user_register_ack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:user_register_ack)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .common.errorinfo error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 imid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_imid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &imid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:user_register_ack)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:user_register_ack)
  return false;
#undef DO_
}

void user_register_ack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:user_register_ack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .common.errorinfo error = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_error(), output);
  }

  // optional uint32 imid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->imid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:user_register_ack)
}

::google::protobuf::uint8* user_register_ack::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:user_register_ack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .common.errorinfo error = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_error(), deterministic, target);
  }

  // optional uint32 imid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->imid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:user_register_ack)
  return target;
}

size_t user_register_ack::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:user_register_ack)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .common.errorinfo error = 1;
    if (has_error()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *error_);
    }

    // optional uint32 imid = 2;
    if (has_imid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->imid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void user_register_ack::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:user_register_ack)
  GOOGLE_DCHECK_NE(&from, this);
  const user_register_ack* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const user_register_ack>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:user_register_ack)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:user_register_ack)
    MergeFrom(*source);
  }
}

void user_register_ack::MergeFrom(const user_register_ack& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:user_register_ack)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_error()->::common::errorinfo::MergeFrom(from.error());
    }
    if (cached_has_bits & 0x00000002u) {
      imid_ = from.imid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void user_register_ack::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:user_register_ack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void user_register_ack::CopyFrom(const user_register_ack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:user_register_ack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool user_register_ack::IsInitialized() const {
  if (has_error()) {
    if (!this->error_->IsInitialized()) return false;
  }
  return true;
}

void user_register_ack::Swap(user_register_ack* other) {
  if (other == this) return;
  InternalSwap(other);
}
void user_register_ack::InternalSwap(user_register_ack* other) {
  using std::swap;
  swap(error_, other->error_);
  swap(imid_, other->imid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata user_register_ack::GetMetadata() const {
  protobuf_server_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_server_5finternal_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::personal_notify* Arena::CreateMaybeMessage< ::personal_notify >(Arena* arena) {
  return Arena::CreateInternal< ::personal_notify >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::group_notify* Arena::CreateMaybeMessage< ::group_notify >(Arena* arena) {
  return Arena::CreateInternal< ::group_notify >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::offical_userset_notify* Arena::CreateMaybeMessage< ::offical_userset_notify >(Arena* arena) {
  return Arena::CreateInternal< ::offical_userset_notify >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::offical_specified_notify* Arena::CreateMaybeMessage< ::offical_specified_notify >(Arena* arena) {
  return Arena::CreateInternal< ::offical_specified_notify >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::user_register* Arena::CreateMaybeMessage< ::user_register >(Arena* arena) {
  return Arena::CreateInternal< ::user_register >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::user_register_ack* Arena::CreateMaybeMessage< ::user_register_ack >(Arena* arena) {
  return Arena::CreateInternal< ::user_register_ack >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
