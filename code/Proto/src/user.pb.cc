// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: user.proto

#include "user.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_common_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_errorinfo;
}  // namespace protobuf_common_2eproto
namespace im_user {
class uloginDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ulogin>
      _instance;
} _ulogin_default_instance_;
class ulogin_ackDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ulogin_ack>
      _instance;
} _ulogin_ack_default_instance_;
class ulogin_comfirmDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ulogin_comfirm>
      _instance;
} _ulogin_comfirm_default_instance_;
class ulogin_comfirm_ackDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ulogin_comfirm_ack>
      _instance;
} _ulogin_comfirm_ack_default_instance_;
class ulogoutDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ulogout>
      _instance;
} _ulogout_default_instance_;
class ulogout_ackDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ulogout_ack>
      _instance;
} _ulogout_ack_default_instance_;
class forced_offline_ntfDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<forced_offline_ntf>
      _instance;
} _forced_offline_ntf_default_instance_;
}  // namespace im_user
namespace protobuf_user_2eproto {
static void InitDefaultsulogin() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im_user::_ulogin_default_instance_;
    new (ptr) ::im_user::ulogin();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im_user::ulogin::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ulogin =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsulogin}, {}};

static void InitDefaultsulogin_ack() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im_user::_ulogin_ack_default_instance_;
    new (ptr) ::im_user::ulogin_ack();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im_user::ulogin_ack::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ulogin_ack =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsulogin_ack}, {
      &protobuf_common_2eproto::scc_info_errorinfo.base,}};

static void InitDefaultsulogin_comfirm() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im_user::_ulogin_comfirm_default_instance_;
    new (ptr) ::im_user::ulogin_comfirm();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im_user::ulogin_comfirm::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ulogin_comfirm =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsulogin_comfirm}, {}};

static void InitDefaultsulogin_comfirm_ack() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im_user::_ulogin_comfirm_ack_default_instance_;
    new (ptr) ::im_user::ulogin_comfirm_ack();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im_user::ulogin_comfirm_ack::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ulogin_comfirm_ack =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsulogin_comfirm_ack}, {
      &protobuf_common_2eproto::scc_info_errorinfo.base,}};

static void InitDefaultsulogout() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im_user::_ulogout_default_instance_;
    new (ptr) ::im_user::ulogout();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im_user::ulogout::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ulogout =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsulogout}, {}};

static void InitDefaultsulogout_ack() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im_user::_ulogout_ack_default_instance_;
    new (ptr) ::im_user::ulogout_ack();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im_user::ulogout_ack::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ulogout_ack =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsulogout_ack}, {
      &protobuf_common_2eproto::scc_info_errorinfo.base,}};

static void InitDefaultsforced_offline_ntf() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im_user::_forced_offline_ntf_default_instance_;
    new (ptr) ::im_user::forced_offline_ntf();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im_user::forced_offline_ntf::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_forced_offline_ntf =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsforced_offline_ntf}, {
      &protobuf_common_2eproto::scc_info_errorinfo.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ulogin.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ulogin_ack.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ulogin_comfirm.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ulogin_comfirm_ack.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ulogout.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ulogout_ack.base);
  ::google::protobuf::internal::InitSCC(&scc_info_forced_offline_ntf.base);
}

::google::protobuf::Metadata file_level_metadata[7];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im_user::ulogin, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im_user::ulogin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im_user::ulogin, imid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im_user::ulogin, imtoken_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im_user::ulogin, clienttype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im_user::ulogin, deviceinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im_user::ulogin, app_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im_user::ulogin, clientip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im_user::ulogin, serv_nodeidentify_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im_user::ulogin, push_chat_msg_),
  4,
  0,
  5,
  1,
  6,
  2,
  3,
  7,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im_user::ulogin_ack, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im_user::ulogin_ack, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im_user::ulogin_ack, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im_user::ulogin_ack, beat_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im_user::ulogin_ack, login_prompt_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im_user::ulogin_comfirm, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im_user::ulogin_comfirm, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im_user::ulogin_comfirm, deviceinfo_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im_user::ulogin_comfirm_ack, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im_user::ulogin_comfirm_ack, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im_user::ulogin_comfirm_ack, error_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im_user::ulogout, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im_user::ulogout, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im_user::ulogout, imid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im_user::ulogout_ack, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im_user::ulogout_ack, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im_user::ulogout_ack, error_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im_user::forced_offline_ntf, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im_user::forced_offline_ntf, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im_user::forced_offline_ntf, error_),
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 13, sizeof(::im_user::ulogin)},
  { 21, 29, sizeof(::im_user::ulogin_ack)},
  { 32, 38, sizeof(::im_user::ulogin_comfirm)},
  { 39, 45, sizeof(::im_user::ulogin_comfirm_ack)},
  { 46, 52, sizeof(::im_user::ulogout)},
  { 53, 59, sizeof(::im_user::ulogout_ack)},
  { 60, 66, sizeof(::im_user::forced_offline_ntf)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::im_user::_ulogin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::im_user::_ulogin_ack_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::im_user::_ulogin_comfirm_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::im_user::_ulogin_comfirm_ack_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::im_user::_ulogout_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::im_user::_ulogout_ack_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::im_user::_forced_offline_ntf_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "user.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\nuser.proto\022\007im_user\032\014common.proto\"\250\001\n\006"
      "ulogin\022\014\n\004imid\030\001 \002(\r\022\017\n\007imToken\030\002 \002(\014\022\022\n"
      "\nclienttype\030\003 \001(\r\022\022\n\ndeviceInfo\030\004 \001(\014\022\023\n"
      "\013app_version\030\005 \001(\r\022\020\n\010clientip\030\006 \001(\014\022\031\n\021"
      "serv_nodeIdentify\030\007 \001(\014\022\025\n\rpush_chat_msg"
      "\030\010 \001(\r\"W\n\nulogin_ack\022 \n\005error\030\001 \001(\0132\021.co"
      "mmon.errorinfo\022\021\n\tbeat_time\030\002 \001(\r\022\024\n\014log"
      "in_prompt\030\003 \001(\r\"$\n\016ulogin_comfirm\022\022\n\ndev"
      "iceInfo\030\001 \001(\014\"6\n\022ulogin_comfirm_ack\022 \n\005e"
      "rror\030\001 \001(\0132\021.common.errorinfo\"\027\n\007ulogout"
      "\022\014\n\004imid\030\001 \002(\r\"/\n\013ulogout_ack\022 \n\005error\030\001"
      " \001(\0132\021.common.errorinfo\"6\n\022forced_offlin"
      "e_ntf\022 \n\005error\030\001 \001(\0132\021.common.errorinfo"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 519);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "user.proto", &protobuf_RegisterTypes);
  ::protobuf_common_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_user_2eproto
namespace im_user {

// ===================================================================

void ulogin::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ulogin::kImidFieldNumber;
const int ulogin::kImTokenFieldNumber;
const int ulogin::kClienttypeFieldNumber;
const int ulogin::kDeviceInfoFieldNumber;
const int ulogin::kAppVersionFieldNumber;
const int ulogin::kClientipFieldNumber;
const int ulogin::kServNodeIdentifyFieldNumber;
const int ulogin::kPushChatMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ulogin::ulogin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_user_2eproto::scc_info_ulogin.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im_user.ulogin)
}
ulogin::ulogin(const ulogin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  imtoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_imtoken()) {
    imtoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imtoken_);
  }
  deviceinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_deviceinfo()) {
    deviceinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceinfo_);
  }
  clientip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_clientip()) {
    clientip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clientip_);
  }
  serv_nodeidentify_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_serv_nodeidentify()) {
    serv_nodeidentify_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serv_nodeidentify_);
  }
  ::memcpy(&imid_, &from.imid_,
    static_cast<size_t>(reinterpret_cast<char*>(&push_chat_msg_) -
    reinterpret_cast<char*>(&imid_)) + sizeof(push_chat_msg_));
  // @@protoc_insertion_point(copy_constructor:im_user.ulogin)
}

void ulogin::SharedCtor() {
  imtoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deviceinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clientip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serv_nodeidentify_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&imid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&push_chat_msg_) -
      reinterpret_cast<char*>(&imid_)) + sizeof(push_chat_msg_));
}

ulogin::~ulogin() {
  // @@protoc_insertion_point(destructor:im_user.ulogin)
  SharedDtor();
}

void ulogin::SharedDtor() {
  imtoken_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deviceinfo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clientip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serv_nodeidentify_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ulogin::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ulogin::descriptor() {
  ::protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ulogin& ulogin::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_user_2eproto::scc_info_ulogin.base);
  return *internal_default_instance();
}


void ulogin::Clear() {
// @@protoc_insertion_point(message_clear_start:im_user.ulogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      imtoken_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      deviceinfo_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      clientip_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      serv_nodeidentify_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 240u) {
    ::memset(&imid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&push_chat_msg_) -
        reinterpret_cast<char*>(&imid_)) + sizeof(push_chat_msg_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ulogin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im_user.ulogin)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 imid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_imid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &imid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes imToken = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_imtoken()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 clienttype = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_clienttype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &clienttype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes deviceInfo = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_deviceinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 app_version = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_app_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes clientip = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_clientip()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes serv_nodeIdentify = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_serv_nodeidentify()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 push_chat_msg = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_push_chat_msg();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &push_chat_msg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im_user.ulogin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im_user.ulogin)
  return false;
#undef DO_
}

void ulogin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im_user.ulogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 imid = 1;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->imid(), output);
  }

  // required bytes imToken = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->imtoken(), output);
  }

  // optional uint32 clienttype = 3;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->clienttype(), output);
  }

  // optional bytes deviceInfo = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->deviceinfo(), output);
  }

  // optional uint32 app_version = 5;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->app_version(), output);
  }

  // optional bytes clientip = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->clientip(), output);
  }

  // optional bytes serv_nodeIdentify = 7;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->serv_nodeidentify(), output);
  }

  // optional uint32 push_chat_msg = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->push_chat_msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:im_user.ulogin)
}

::google::protobuf::uint8* ulogin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:im_user.ulogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 imid = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->imid(), target);
  }

  // required bytes imToken = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->imtoken(), target);
  }

  // optional uint32 clienttype = 3;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->clienttype(), target);
  }

  // optional bytes deviceInfo = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->deviceinfo(), target);
  }

  // optional uint32 app_version = 5;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->app_version(), target);
  }

  // optional bytes clientip = 6;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->clientip(), target);
  }

  // optional bytes serv_nodeIdentify = 7;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->serv_nodeidentify(), target);
  }

  // optional uint32 push_chat_msg = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->push_chat_msg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:im_user.ulogin)
  return target;
}

size_t ulogin::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:im_user.ulogin)
  size_t total_size = 0;

  if (has_imtoken()) {
    // required bytes imToken = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->imtoken());
  }

  if (has_imid()) {
    // required uint32 imid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->imid());
  }

  return total_size;
}
size_t ulogin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im_user.ulogin)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000011) ^ 0x00000011) == 0) {  // All required fields are present.
    // required bytes imToken = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->imtoken());

    // required uint32 imid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->imid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 14u) {
    // optional bytes deviceInfo = 4;
    if (has_deviceinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->deviceinfo());
    }

    // optional bytes clientip = 6;
    if (has_clientip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->clientip());
    }

    // optional bytes serv_nodeIdentify = 7;
    if (has_serv_nodeidentify()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->serv_nodeidentify());
    }

  }
  if (_has_bits_[0 / 32] & 224u) {
    // optional uint32 clienttype = 3;
    if (has_clienttype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->clienttype());
    }

    // optional uint32 app_version = 5;
    if (has_app_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_version());
    }

    // optional uint32 push_chat_msg = 8;
    if (has_push_chat_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->push_chat_msg());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ulogin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:im_user.ulogin)
  GOOGLE_DCHECK_NE(&from, this);
  const ulogin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ulogin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:im_user.ulogin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:im_user.ulogin)
    MergeFrom(*source);
  }
}

void ulogin::MergeFrom(const ulogin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im_user.ulogin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_imtoken();
      imtoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imtoken_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_deviceinfo();
      deviceinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceinfo_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_clientip();
      clientip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clientip_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_serv_nodeidentify();
      serv_nodeidentify_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serv_nodeidentify_);
    }
    if (cached_has_bits & 0x00000010u) {
      imid_ = from.imid_;
    }
    if (cached_has_bits & 0x00000020u) {
      clienttype_ = from.clienttype_;
    }
    if (cached_has_bits & 0x00000040u) {
      app_version_ = from.app_version_;
    }
    if (cached_has_bits & 0x00000080u) {
      push_chat_msg_ = from.push_chat_msg_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ulogin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:im_user.ulogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ulogin::CopyFrom(const ulogin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im_user.ulogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ulogin::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000011) != 0x00000011) return false;
  return true;
}

void ulogin::Swap(ulogin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ulogin::InternalSwap(ulogin* other) {
  using std::swap;
  imtoken_.Swap(&other->imtoken_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  deviceinfo_.Swap(&other->deviceinfo_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  clientip_.Swap(&other->clientip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  serv_nodeidentify_.Swap(&other->serv_nodeidentify_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(imid_, other->imid_);
  swap(clienttype_, other->clienttype_);
  swap(app_version_, other->app_version_);
  swap(push_chat_msg_, other->push_chat_msg_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ulogin::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ulogin_ack::InitAsDefaultInstance() {
  ::im_user::_ulogin_ack_default_instance_._instance.get_mutable()->error_ = const_cast< ::common::errorinfo*>(
      ::common::errorinfo::internal_default_instance());
}
void ulogin_ack::clear_error() {
  if (error_ != NULL) error_->Clear();
  clear_has_error();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ulogin_ack::kErrorFieldNumber;
const int ulogin_ack::kBeatTimeFieldNumber;
const int ulogin_ack::kLoginPromptFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ulogin_ack::ulogin_ack()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_user_2eproto::scc_info_ulogin_ack.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im_user.ulogin_ack)
}
ulogin_ack::ulogin_ack(const ulogin_ack& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_error()) {
    error_ = new ::common::errorinfo(*from.error_);
  } else {
    error_ = NULL;
  }
  ::memcpy(&beat_time_, &from.beat_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&login_prompt_) -
    reinterpret_cast<char*>(&beat_time_)) + sizeof(login_prompt_));
  // @@protoc_insertion_point(copy_constructor:im_user.ulogin_ack)
}

void ulogin_ack::SharedCtor() {
  ::memset(&error_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&login_prompt_) -
      reinterpret_cast<char*>(&error_)) + sizeof(login_prompt_));
}

ulogin_ack::~ulogin_ack() {
  // @@protoc_insertion_point(destructor:im_user.ulogin_ack)
  SharedDtor();
}

void ulogin_ack::SharedDtor() {
  if (this != internal_default_instance()) delete error_;
}

void ulogin_ack::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ulogin_ack::descriptor() {
  ::protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ulogin_ack& ulogin_ack::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_user_2eproto::scc_info_ulogin_ack.base);
  return *internal_default_instance();
}


void ulogin_ack::Clear() {
// @@protoc_insertion_point(message_clear_start:im_user.ulogin_ack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(error_ != NULL);
    error_->Clear();
  }
  if (cached_has_bits & 6u) {
    ::memset(&beat_time_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&login_prompt_) -
        reinterpret_cast<char*>(&beat_time_)) + sizeof(login_prompt_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ulogin_ack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im_user.ulogin_ack)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .common.errorinfo error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 beat_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_beat_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &beat_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 login_prompt = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_login_prompt();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &login_prompt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im_user.ulogin_ack)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im_user.ulogin_ack)
  return false;
#undef DO_
}

void ulogin_ack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im_user.ulogin_ack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .common.errorinfo error = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_error(), output);
  }

  // optional uint32 beat_time = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->beat_time(), output);
  }

  // optional uint32 login_prompt = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->login_prompt(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:im_user.ulogin_ack)
}

::google::protobuf::uint8* ulogin_ack::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:im_user.ulogin_ack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .common.errorinfo error = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_error(), deterministic, target);
  }

  // optional uint32 beat_time = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->beat_time(), target);
  }

  // optional uint32 login_prompt = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->login_prompt(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:im_user.ulogin_ack)
  return target;
}

size_t ulogin_ack::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im_user.ulogin_ack)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional .common.errorinfo error = 1;
    if (has_error()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *error_);
    }

    // optional uint32 beat_time = 2;
    if (has_beat_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->beat_time());
    }

    // optional uint32 login_prompt = 3;
    if (has_login_prompt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->login_prompt());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ulogin_ack::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:im_user.ulogin_ack)
  GOOGLE_DCHECK_NE(&from, this);
  const ulogin_ack* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ulogin_ack>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:im_user.ulogin_ack)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:im_user.ulogin_ack)
    MergeFrom(*source);
  }
}

void ulogin_ack::MergeFrom(const ulogin_ack& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im_user.ulogin_ack)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_error()->::common::errorinfo::MergeFrom(from.error());
    }
    if (cached_has_bits & 0x00000002u) {
      beat_time_ = from.beat_time_;
    }
    if (cached_has_bits & 0x00000004u) {
      login_prompt_ = from.login_prompt_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ulogin_ack::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:im_user.ulogin_ack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ulogin_ack::CopyFrom(const ulogin_ack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im_user.ulogin_ack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ulogin_ack::IsInitialized() const {
  if (has_error()) {
    if (!this->error_->IsInitialized()) return false;
  }
  return true;
}

void ulogin_ack::Swap(ulogin_ack* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ulogin_ack::InternalSwap(ulogin_ack* other) {
  using std::swap;
  swap(error_, other->error_);
  swap(beat_time_, other->beat_time_);
  swap(login_prompt_, other->login_prompt_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ulogin_ack::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ulogin_comfirm::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ulogin_comfirm::kDeviceInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ulogin_comfirm::ulogin_comfirm()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_user_2eproto::scc_info_ulogin_comfirm.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im_user.ulogin_comfirm)
}
ulogin_comfirm::ulogin_comfirm(const ulogin_comfirm& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  deviceinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_deviceinfo()) {
    deviceinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceinfo_);
  }
  // @@protoc_insertion_point(copy_constructor:im_user.ulogin_comfirm)
}

void ulogin_comfirm::SharedCtor() {
  deviceinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ulogin_comfirm::~ulogin_comfirm() {
  // @@protoc_insertion_point(destructor:im_user.ulogin_comfirm)
  SharedDtor();
}

void ulogin_comfirm::SharedDtor() {
  deviceinfo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ulogin_comfirm::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ulogin_comfirm::descriptor() {
  ::protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ulogin_comfirm& ulogin_comfirm::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_user_2eproto::scc_info_ulogin_comfirm.base);
  return *internal_default_instance();
}


void ulogin_comfirm::Clear() {
// @@protoc_insertion_point(message_clear_start:im_user.ulogin_comfirm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    deviceinfo_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ulogin_comfirm::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im_user.ulogin_comfirm)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes deviceInfo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_deviceinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im_user.ulogin_comfirm)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im_user.ulogin_comfirm)
  return false;
#undef DO_
}

void ulogin_comfirm::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im_user.ulogin_comfirm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes deviceInfo = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->deviceinfo(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:im_user.ulogin_comfirm)
}

::google::protobuf::uint8* ulogin_comfirm::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:im_user.ulogin_comfirm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes deviceInfo = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->deviceinfo(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:im_user.ulogin_comfirm)
  return target;
}

size_t ulogin_comfirm::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im_user.ulogin_comfirm)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional bytes deviceInfo = 1;
  if (has_deviceinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->deviceinfo());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ulogin_comfirm::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:im_user.ulogin_comfirm)
  GOOGLE_DCHECK_NE(&from, this);
  const ulogin_comfirm* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ulogin_comfirm>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:im_user.ulogin_comfirm)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:im_user.ulogin_comfirm)
    MergeFrom(*source);
  }
}

void ulogin_comfirm::MergeFrom(const ulogin_comfirm& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im_user.ulogin_comfirm)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_deviceinfo()) {
    set_has_deviceinfo();
    deviceinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceinfo_);
  }
}

void ulogin_comfirm::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:im_user.ulogin_comfirm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ulogin_comfirm::CopyFrom(const ulogin_comfirm& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im_user.ulogin_comfirm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ulogin_comfirm::IsInitialized() const {
  return true;
}

void ulogin_comfirm::Swap(ulogin_comfirm* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ulogin_comfirm::InternalSwap(ulogin_comfirm* other) {
  using std::swap;
  deviceinfo_.Swap(&other->deviceinfo_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ulogin_comfirm::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ulogin_comfirm_ack::InitAsDefaultInstance() {
  ::im_user::_ulogin_comfirm_ack_default_instance_._instance.get_mutable()->error_ = const_cast< ::common::errorinfo*>(
      ::common::errorinfo::internal_default_instance());
}
void ulogin_comfirm_ack::clear_error() {
  if (error_ != NULL) error_->Clear();
  clear_has_error();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ulogin_comfirm_ack::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ulogin_comfirm_ack::ulogin_comfirm_ack()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_user_2eproto::scc_info_ulogin_comfirm_ack.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im_user.ulogin_comfirm_ack)
}
ulogin_comfirm_ack::ulogin_comfirm_ack(const ulogin_comfirm_ack& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_error()) {
    error_ = new ::common::errorinfo(*from.error_);
  } else {
    error_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:im_user.ulogin_comfirm_ack)
}

void ulogin_comfirm_ack::SharedCtor() {
  error_ = NULL;
}

ulogin_comfirm_ack::~ulogin_comfirm_ack() {
  // @@protoc_insertion_point(destructor:im_user.ulogin_comfirm_ack)
  SharedDtor();
}

void ulogin_comfirm_ack::SharedDtor() {
  if (this != internal_default_instance()) delete error_;
}

void ulogin_comfirm_ack::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ulogin_comfirm_ack::descriptor() {
  ::protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ulogin_comfirm_ack& ulogin_comfirm_ack::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_user_2eproto::scc_info_ulogin_comfirm_ack.base);
  return *internal_default_instance();
}


void ulogin_comfirm_ack::Clear() {
// @@protoc_insertion_point(message_clear_start:im_user.ulogin_comfirm_ack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(error_ != NULL);
    error_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ulogin_comfirm_ack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im_user.ulogin_comfirm_ack)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .common.errorinfo error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im_user.ulogin_comfirm_ack)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im_user.ulogin_comfirm_ack)
  return false;
#undef DO_
}

void ulogin_comfirm_ack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im_user.ulogin_comfirm_ack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .common.errorinfo error = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_error(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:im_user.ulogin_comfirm_ack)
}

::google::protobuf::uint8* ulogin_comfirm_ack::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:im_user.ulogin_comfirm_ack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .common.errorinfo error = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_error(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:im_user.ulogin_comfirm_ack)
  return target;
}

size_t ulogin_comfirm_ack::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im_user.ulogin_comfirm_ack)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .common.errorinfo error = 1;
  if (has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *error_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ulogin_comfirm_ack::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:im_user.ulogin_comfirm_ack)
  GOOGLE_DCHECK_NE(&from, this);
  const ulogin_comfirm_ack* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ulogin_comfirm_ack>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:im_user.ulogin_comfirm_ack)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:im_user.ulogin_comfirm_ack)
    MergeFrom(*source);
  }
}

void ulogin_comfirm_ack::MergeFrom(const ulogin_comfirm_ack& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im_user.ulogin_comfirm_ack)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_error()) {
    mutable_error()->::common::errorinfo::MergeFrom(from.error());
  }
}

void ulogin_comfirm_ack::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:im_user.ulogin_comfirm_ack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ulogin_comfirm_ack::CopyFrom(const ulogin_comfirm_ack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im_user.ulogin_comfirm_ack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ulogin_comfirm_ack::IsInitialized() const {
  if (has_error()) {
    if (!this->error_->IsInitialized()) return false;
  }
  return true;
}

void ulogin_comfirm_ack::Swap(ulogin_comfirm_ack* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ulogin_comfirm_ack::InternalSwap(ulogin_comfirm_ack* other) {
  using std::swap;
  swap(error_, other->error_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ulogin_comfirm_ack::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ulogout::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ulogout::kImidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ulogout::ulogout()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_user_2eproto::scc_info_ulogout.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im_user.ulogout)
}
ulogout::ulogout(const ulogout& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  imid_ = from.imid_;
  // @@protoc_insertion_point(copy_constructor:im_user.ulogout)
}

void ulogout::SharedCtor() {
  imid_ = 0u;
}

ulogout::~ulogout() {
  // @@protoc_insertion_point(destructor:im_user.ulogout)
  SharedDtor();
}

void ulogout::SharedDtor() {
}

void ulogout::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ulogout::descriptor() {
  ::protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ulogout& ulogout::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_user_2eproto::scc_info_ulogout.base);
  return *internal_default_instance();
}


void ulogout::Clear() {
// @@protoc_insertion_point(message_clear_start:im_user.ulogout)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  imid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ulogout::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im_user.ulogout)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 imid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_imid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &imid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im_user.ulogout)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im_user.ulogout)
  return false;
#undef DO_
}

void ulogout::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im_user.ulogout)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 imid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->imid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:im_user.ulogout)
}

::google::protobuf::uint8* ulogout::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:im_user.ulogout)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 imid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->imid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:im_user.ulogout)
  return target;
}

size_t ulogout::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im_user.ulogout)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 imid = 1;
  if (has_imid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->imid());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ulogout::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:im_user.ulogout)
  GOOGLE_DCHECK_NE(&from, this);
  const ulogout* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ulogout>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:im_user.ulogout)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:im_user.ulogout)
    MergeFrom(*source);
  }
}

void ulogout::MergeFrom(const ulogout& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im_user.ulogout)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_imid()) {
    set_imid(from.imid());
  }
}

void ulogout::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:im_user.ulogout)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ulogout::CopyFrom(const ulogout& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im_user.ulogout)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ulogout::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void ulogout::Swap(ulogout* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ulogout::InternalSwap(ulogout* other) {
  using std::swap;
  swap(imid_, other->imid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ulogout::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ulogout_ack::InitAsDefaultInstance() {
  ::im_user::_ulogout_ack_default_instance_._instance.get_mutable()->error_ = const_cast< ::common::errorinfo*>(
      ::common::errorinfo::internal_default_instance());
}
void ulogout_ack::clear_error() {
  if (error_ != NULL) error_->Clear();
  clear_has_error();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ulogout_ack::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ulogout_ack::ulogout_ack()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_user_2eproto::scc_info_ulogout_ack.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im_user.ulogout_ack)
}
ulogout_ack::ulogout_ack(const ulogout_ack& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_error()) {
    error_ = new ::common::errorinfo(*from.error_);
  } else {
    error_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:im_user.ulogout_ack)
}

void ulogout_ack::SharedCtor() {
  error_ = NULL;
}

ulogout_ack::~ulogout_ack() {
  // @@protoc_insertion_point(destructor:im_user.ulogout_ack)
  SharedDtor();
}

void ulogout_ack::SharedDtor() {
  if (this != internal_default_instance()) delete error_;
}

void ulogout_ack::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ulogout_ack::descriptor() {
  ::protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ulogout_ack& ulogout_ack::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_user_2eproto::scc_info_ulogout_ack.base);
  return *internal_default_instance();
}


void ulogout_ack::Clear() {
// @@protoc_insertion_point(message_clear_start:im_user.ulogout_ack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(error_ != NULL);
    error_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ulogout_ack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im_user.ulogout_ack)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .common.errorinfo error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im_user.ulogout_ack)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im_user.ulogout_ack)
  return false;
#undef DO_
}

void ulogout_ack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im_user.ulogout_ack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .common.errorinfo error = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_error(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:im_user.ulogout_ack)
}

::google::protobuf::uint8* ulogout_ack::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:im_user.ulogout_ack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .common.errorinfo error = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_error(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:im_user.ulogout_ack)
  return target;
}

size_t ulogout_ack::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im_user.ulogout_ack)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .common.errorinfo error = 1;
  if (has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *error_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ulogout_ack::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:im_user.ulogout_ack)
  GOOGLE_DCHECK_NE(&from, this);
  const ulogout_ack* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ulogout_ack>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:im_user.ulogout_ack)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:im_user.ulogout_ack)
    MergeFrom(*source);
  }
}

void ulogout_ack::MergeFrom(const ulogout_ack& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im_user.ulogout_ack)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_error()) {
    mutable_error()->::common::errorinfo::MergeFrom(from.error());
  }
}

void ulogout_ack::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:im_user.ulogout_ack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ulogout_ack::CopyFrom(const ulogout_ack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im_user.ulogout_ack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ulogout_ack::IsInitialized() const {
  if (has_error()) {
    if (!this->error_->IsInitialized()) return false;
  }
  return true;
}

void ulogout_ack::Swap(ulogout_ack* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ulogout_ack::InternalSwap(ulogout_ack* other) {
  using std::swap;
  swap(error_, other->error_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ulogout_ack::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void forced_offline_ntf::InitAsDefaultInstance() {
  ::im_user::_forced_offline_ntf_default_instance_._instance.get_mutable()->error_ = const_cast< ::common::errorinfo*>(
      ::common::errorinfo::internal_default_instance());
}
void forced_offline_ntf::clear_error() {
  if (error_ != NULL) error_->Clear();
  clear_has_error();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int forced_offline_ntf::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

forced_offline_ntf::forced_offline_ntf()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_user_2eproto::scc_info_forced_offline_ntf.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im_user.forced_offline_ntf)
}
forced_offline_ntf::forced_offline_ntf(const forced_offline_ntf& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_error()) {
    error_ = new ::common::errorinfo(*from.error_);
  } else {
    error_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:im_user.forced_offline_ntf)
}

void forced_offline_ntf::SharedCtor() {
  error_ = NULL;
}

forced_offline_ntf::~forced_offline_ntf() {
  // @@protoc_insertion_point(destructor:im_user.forced_offline_ntf)
  SharedDtor();
}

void forced_offline_ntf::SharedDtor() {
  if (this != internal_default_instance()) delete error_;
}

void forced_offline_ntf::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* forced_offline_ntf::descriptor() {
  ::protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const forced_offline_ntf& forced_offline_ntf::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_user_2eproto::scc_info_forced_offline_ntf.base);
  return *internal_default_instance();
}


void forced_offline_ntf::Clear() {
// @@protoc_insertion_point(message_clear_start:im_user.forced_offline_ntf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(error_ != NULL);
    error_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool forced_offline_ntf::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im_user.forced_offline_ntf)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .common.errorinfo error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im_user.forced_offline_ntf)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im_user.forced_offline_ntf)
  return false;
#undef DO_
}

void forced_offline_ntf::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im_user.forced_offline_ntf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .common.errorinfo error = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_error(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:im_user.forced_offline_ntf)
}

::google::protobuf::uint8* forced_offline_ntf::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:im_user.forced_offline_ntf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .common.errorinfo error = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_error(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:im_user.forced_offline_ntf)
  return target;
}

size_t forced_offline_ntf::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im_user.forced_offline_ntf)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .common.errorinfo error = 1;
  if (has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *error_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void forced_offline_ntf::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:im_user.forced_offline_ntf)
  GOOGLE_DCHECK_NE(&from, this);
  const forced_offline_ntf* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const forced_offline_ntf>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:im_user.forced_offline_ntf)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:im_user.forced_offline_ntf)
    MergeFrom(*source);
  }
}

void forced_offline_ntf::MergeFrom(const forced_offline_ntf& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im_user.forced_offline_ntf)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_error()) {
    mutable_error()->::common::errorinfo::MergeFrom(from.error());
  }
}

void forced_offline_ntf::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:im_user.forced_offline_ntf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void forced_offline_ntf::CopyFrom(const forced_offline_ntf& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im_user.forced_offline_ntf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool forced_offline_ntf::IsInitialized() const {
  if (has_error()) {
    if (!this->error_->IsInitialized()) return false;
  }
  return true;
}

void forced_offline_ntf::Swap(forced_offline_ntf* other) {
  if (other == this) return;
  InternalSwap(other);
}
void forced_offline_ntf::InternalSwap(forced_offline_ntf* other) {
  using std::swap;
  swap(error_, other->error_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata forced_offline_ntf::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace im_user
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im_user::ulogin* Arena::CreateMaybeMessage< ::im_user::ulogin >(Arena* arena) {
  return Arena::CreateInternal< ::im_user::ulogin >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im_user::ulogin_ack* Arena::CreateMaybeMessage< ::im_user::ulogin_ack >(Arena* arena) {
  return Arena::CreateInternal< ::im_user::ulogin_ack >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im_user::ulogin_comfirm* Arena::CreateMaybeMessage< ::im_user::ulogin_comfirm >(Arena* arena) {
  return Arena::CreateInternal< ::im_user::ulogin_comfirm >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im_user::ulogin_comfirm_ack* Arena::CreateMaybeMessage< ::im_user::ulogin_comfirm_ack >(Arena* arena) {
  return Arena::CreateInternal< ::im_user::ulogin_comfirm_ack >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im_user::ulogout* Arena::CreateMaybeMessage< ::im_user::ulogout >(Arena* arena) {
  return Arena::CreateInternal< ::im_user::ulogout >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im_user::ulogout_ack* Arena::CreateMaybeMessage< ::im_user::ulogout_ack >(Arena* arena) {
  return Arena::CreateInternal< ::im_user::ulogout_ack >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im_user::forced_offline_ntf* Arena::CreateMaybeMessage< ::im_user::forced_offline_ntf >(Arena* arena) {
  return Arena::CreateInternal< ::im_user::forced_offline_ntf >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
