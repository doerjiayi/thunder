// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dataproxy.proto

#include "dataproxy.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_dataproxy_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dataproxy_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Field;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dataproxy_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MemOperate_DbOperate_Condition;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dataproxy_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MemOperate_DbOperate_OrderBy;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dataproxy_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MemRsp_DataLocate;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dataproxy_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_MemOperate_DbOperate_ConditionGroup;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dataproxy_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_MemOperate_RedisOperate;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dataproxy_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Record;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dataproxy_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_MemOperate_DbOperate;
}  // namespace protobuf_dataproxy_2eproto
namespace DataMem {
class MemOperate_RedisOperateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MemOperate_RedisOperate>
      _instance;
} _MemOperate_RedisOperate_default_instance_;
class MemOperate_DbOperate_ConditionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MemOperate_DbOperate_Condition>
      _instance;
} _MemOperate_DbOperate_Condition_default_instance_;
class MemOperate_DbOperate_ConditionGroupDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MemOperate_DbOperate_ConditionGroup>
      _instance;
} _MemOperate_DbOperate_ConditionGroup_default_instance_;
class MemOperate_DbOperate_OrderByDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MemOperate_DbOperate_OrderBy>
      _instance;
} _MemOperate_DbOperate_OrderBy_default_instance_;
class MemOperate_DbOperateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MemOperate_DbOperate>
      _instance;
} _MemOperate_DbOperate_default_instance_;
class MemOperateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MemOperate>
      _instance;
} _MemOperate_default_instance_;
class RecordDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Record>
      _instance;
} _Record_default_instance_;
class FieldDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Field>
      _instance;
} _Field_default_instance_;
class MemRsp_DataLocateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MemRsp_DataLocate>
      _instance;
} _MemRsp_DataLocate_default_instance_;
class MemRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MemRsp>
      _instance;
} _MemRsp_default_instance_;
}  // namespace DataMem
namespace protobuf_dataproxy_2eproto {
static void InitDefaultsMemOperate_RedisOperate() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::DataMem::_MemOperate_RedisOperate_default_instance_;
    new (ptr) ::DataMem::MemOperate_RedisOperate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DataMem::MemOperate_RedisOperate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MemOperate_RedisOperate =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMemOperate_RedisOperate}, {
      &protobuf_dataproxy_2eproto::scc_info_Field.base,}};

static void InitDefaultsMemOperate_DbOperate_Condition() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::DataMem::_MemOperate_DbOperate_Condition_default_instance_;
    new (ptr) ::DataMem::MemOperate_DbOperate_Condition();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DataMem::MemOperate_DbOperate_Condition::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MemOperate_DbOperate_Condition =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMemOperate_DbOperate_Condition}, {}};

static void InitDefaultsMemOperate_DbOperate_ConditionGroup() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::DataMem::_MemOperate_DbOperate_ConditionGroup_default_instance_;
    new (ptr) ::DataMem::MemOperate_DbOperate_ConditionGroup();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DataMem::MemOperate_DbOperate_ConditionGroup::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MemOperate_DbOperate_ConditionGroup =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMemOperate_DbOperate_ConditionGroup}, {
      &protobuf_dataproxy_2eproto::scc_info_MemOperate_DbOperate_Condition.base,}};

static void InitDefaultsMemOperate_DbOperate_OrderBy() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::DataMem::_MemOperate_DbOperate_OrderBy_default_instance_;
    new (ptr) ::DataMem::MemOperate_DbOperate_OrderBy();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DataMem::MemOperate_DbOperate_OrderBy::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MemOperate_DbOperate_OrderBy =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMemOperate_DbOperate_OrderBy}, {}};

static void InitDefaultsMemOperate_DbOperate() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::DataMem::_MemOperate_DbOperate_default_instance_;
    new (ptr) ::DataMem::MemOperate_DbOperate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DataMem::MemOperate_DbOperate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_MemOperate_DbOperate =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsMemOperate_DbOperate}, {
      &protobuf_dataproxy_2eproto::scc_info_Field.base,
      &protobuf_dataproxy_2eproto::scc_info_MemOperate_DbOperate_ConditionGroup.base,
      &protobuf_dataproxy_2eproto::scc_info_MemOperate_DbOperate_OrderBy.base,}};

static void InitDefaultsMemOperate() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::DataMem::_MemOperate_default_instance_;
    new (ptr) ::DataMem::MemOperate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DataMem::MemOperate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_MemOperate =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsMemOperate}, {
      &protobuf_dataproxy_2eproto::scc_info_MemOperate_RedisOperate.base,
      &protobuf_dataproxy_2eproto::scc_info_MemOperate_DbOperate.base,}};

static void InitDefaultsRecord() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::DataMem::_Record_default_instance_;
    new (ptr) ::DataMem::Record();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DataMem::Record::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Record =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRecord}, {
      &protobuf_dataproxy_2eproto::scc_info_Field.base,}};

static void InitDefaultsField() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::DataMem::_Field_default_instance_;
    new (ptr) ::DataMem::Field();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DataMem::Field::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Field =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsField}, {}};

static void InitDefaultsMemRsp_DataLocate() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::DataMem::_MemRsp_DataLocate_default_instance_;
    new (ptr) ::DataMem::MemRsp_DataLocate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DataMem::MemRsp_DataLocate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MemRsp_DataLocate =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMemRsp_DataLocate}, {}};

static void InitDefaultsMemRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::DataMem::_MemRsp_default_instance_;
    new (ptr) ::DataMem::MemRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DataMem::MemRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_MemRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsMemRsp}, {
      &protobuf_dataproxy_2eproto::scc_info_Record.base,
      &protobuf_dataproxy_2eproto::scc_info_MemRsp_DataLocate.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_MemOperate_RedisOperate.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MemOperate_DbOperate_Condition.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MemOperate_DbOperate_ConditionGroup.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MemOperate_DbOperate_OrderBy.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MemOperate_DbOperate.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MemOperate.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Record.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Field.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MemRsp_DataLocate.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MemRsp.base);
}

::google::protobuf::Metadata file_level_metadata[10];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[7];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataMem::MemOperate_RedisOperate, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataMem::MemOperate_RedisOperate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataMem::MemOperate_RedisOperate, key_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataMem::MemOperate_RedisOperate, redis_cmd_read_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataMem::MemOperate_RedisOperate, redis_cmd_write_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataMem::MemOperate_RedisOperate, op_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataMem::MemOperate_RedisOperate, fields_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataMem::MemOperate_RedisOperate, key_ttl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataMem::MemOperate_RedisOperate, redis_structure_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataMem::MemOperate_RedisOperate, data_purpose_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataMem::MemOperate_RedisOperate, hash_key_),
  0,
  1,
  2,
  4,
  ~0u,
  5,
  6,
  7,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataMem::MemOperate_DbOperate_Condition, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataMem::MemOperate_DbOperate_Condition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataMem::MemOperate_DbOperate_Condition, relation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataMem::MemOperate_DbOperate_Condition, col_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataMem::MemOperate_DbOperate_Condition, col_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataMem::MemOperate_DbOperate_Condition, col_values_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataMem::MemOperate_DbOperate_Condition, col_name_right_),
  2,
  3,
  0,
  ~0u,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataMem::MemOperate_DbOperate_ConditionGroup, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataMem::MemOperate_DbOperate_ConditionGroup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataMem::MemOperate_DbOperate_ConditionGroup, relation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataMem::MemOperate_DbOperate_ConditionGroup, condition_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataMem::MemOperate_DbOperate_OrderBy, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataMem::MemOperate_DbOperate_OrderBy, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataMem::MemOperate_DbOperate_OrderBy, relation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataMem::MemOperate_DbOperate_OrderBy, col_name_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataMem::MemOperate_DbOperate, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataMem::MemOperate_DbOperate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataMem::MemOperate_DbOperate, query_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataMem::MemOperate_DbOperate, table_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataMem::MemOperate_DbOperate, fields_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataMem::MemOperate_DbOperate, conditions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataMem::MemOperate_DbOperate, groupby_col_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataMem::MemOperate_DbOperate, orderby_col_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataMem::MemOperate_DbOperate, group_relation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataMem::MemOperate_DbOperate, limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataMem::MemOperate_DbOperate, limit_from_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataMem::MemOperate_DbOperate, mod_factor_),
  1,
  0,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataMem::MemOperate, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataMem::MemOperate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataMem::MemOperate, section_factor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataMem::MemOperate, redis_operate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataMem::MemOperate, db_operate_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataMem::Record, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataMem::Record, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataMem::Record, field_info_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataMem::Field, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataMem::Field, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataMem::Field, col_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataMem::Field, col_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataMem::Field, col_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataMem::Field, col_as_),
  0,
  3,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataMem::MemRsp_DataLocate, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataMem::MemRsp_DataLocate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataMem::MemRsp_DataLocate, section_from_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataMem::MemRsp_DataLocate, section_to_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataMem::MemRsp_DataLocate, hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataMem::MemRsp_DataLocate, divisor_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataMem::MemRsp, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataMem::MemRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataMem::MemRsp, err_no_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataMem::MemRsp, err_msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataMem::MemRsp, totalcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataMem::MemRsp, curcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataMem::MemRsp, record_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataMem::MemRsp, from_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataMem::MemRsp, locate_),
  2,
  0,
  3,
  4,
  ~0u,
  5,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 14, sizeof(::DataMem::MemOperate_RedisOperate)},
  { 23, 33, sizeof(::DataMem::MemOperate_DbOperate_Condition)},
  { 38, 45, sizeof(::DataMem::MemOperate_DbOperate_ConditionGroup)},
  { 47, 54, sizeof(::DataMem::MemOperate_DbOperate_OrderBy)},
  { 56, 71, sizeof(::DataMem::MemOperate_DbOperate)},
  { 81, 89, sizeof(::DataMem::MemOperate)},
  { 92, 98, sizeof(::DataMem::Record)},
  { 99, 108, sizeof(::DataMem::Field)},
  { 112, 121, sizeof(::DataMem::MemRsp_DataLocate)},
  { 125, 137, sizeof(::DataMem::MemRsp)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::DataMem::_MemOperate_RedisOperate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::DataMem::_MemOperate_DbOperate_Condition_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::DataMem::_MemOperate_DbOperate_ConditionGroup_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::DataMem::_MemOperate_DbOperate_OrderBy_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::DataMem::_MemOperate_DbOperate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::DataMem::_MemOperate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::DataMem::_Record_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::DataMem::_Field_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::DataMem::_MemRsp_DataLocate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::DataMem::_MemRsp_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "dataproxy.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 10);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017dataproxy.proto\022\007DataMem\"\224\r\n\nMemOperat"
      "e\022\026\n\016section_factor\030\001 \001(\004\0227\n\rredis_opera"
      "te\030\002 \001(\0132 .DataMem.MemOperate.RedisOpera"
      "te\0221\n\ndb_operate\030\003 \001(\0132\035.DataMem.MemOper"
      "ate.DbOperate\032\306\002\n\014RedisOperate\022\020\n\010key_na"
      "me\030\001 \001(\014\022\026\n\016redis_cmd_read\030\002 \001(\t\022\027\n\017redi"
      "s_cmd_write\030\003 \001(\t\022>\n\007op_type\030\004 \001(\0162-.Dat"
      "aMem.MemOperate.RedisOperate.OPERATE_TYP"
      "E\022\036\n\006fields\030\005 \003(\0132\016.DataMem.Field\022\017\n\007key"
      "_ttl\030\006 \001(\005\022\027\n\017redis_structure\030\007 \001(\005\022\024\n\014d"
      "ata_purpose\030\010 \001(\005\022\020\n\010hash_key\030\t \001(\014\"A\n\014O"
      "PERATE_TYPE\022\030\n\024OPERATE_TYPE_UNKNOWN\020\000\022\n\n"
      "\006T_READ\020\001\022\013\n\007T_WRITE\020\002\032\270\t\n\tDbOperate\022>\n\n"
      "query_type\030\001 \001(\0162*.DataMem.MemOperate.Db"
      "Operate.E_QUERY_TYPE\022\022\n\ntable_name\030\002 \001(\t"
      "\022\036\n\006fields\030\003 \003(\0132\016.DataMem.Field\022@\n\ncond"
      "itions\030\004 \003(\0132,.DataMem.MemOperate.DbOper"
      "ate.ConditionGroup\022\023\n\013groupby_col\030\005 \003(\t\022"
      ":\n\013orderby_col\030\006 \003(\0132%.DataMem.MemOperat"
      "e.DbOperate.OrderBy\022O\n\016group_relation\030\007 "
      "\001(\01627.DataMem.MemOperate.DbOperate.Condi"
      "tionGroup.E_RELATION\022\r\n\005limit\030\010 \001(\r\022\022\n\nl"
      "imit_from\030\t \001(\r\022\022\n\nmod_factor\030\n \001(\004\032\236\002\n\t"
      "Condition\022D\n\010relation\030\001 \001(\01622.DataMem.Me"
      "mOperate.DbOperate.Condition.E_RELATION\022"
      "%\n\010col_type\030\002 \001(\0162\023.DataMem.E_COL_TYPE\022\020"
      "\n\010col_name\030\003 \001(\t\022\022\n\ncol_values\030\004 \003(\014\022\026\n\016"
      "col_name_right\030\005 \001(\t\"f\n\nE_RELATION\022\026\n\022E_"
      "RELATION_UNKNOWN\020\000\022\006\n\002EQ\020\001\022\006\n\002NE\020\002\022\006\n\002GT"
      "\020\003\022\006\n\002LT\020\004\022\006\n\002GE\020\005\022\006\n\002LE\020\006\022\010\n\004LIKE\020\007\022\006\n\002"
      "IN\020\010\032\316\001\n\016ConditionGroup\022I\n\010relation\030\001 \001("
      "\01627.DataMem.MemOperate.DbOperate.Conditi"
      "onGroup.E_RELATION\022:\n\tcondition\030\002 \003(\0132\'."
      "DataMem.MemOperate.DbOperate.Condition\"5"
      "\n\nE_RELATION\022\026\n\022E_RELATION_UNKNOWN\020\000\022\007\n\003"
      "AND\020\001\022\006\n\002OR\020\002\032\230\001\n\007OrderBy\022B\n\010relation\030\001 "
      "\001(\01620.DataMem.MemOperate.DbOperate.Order"
      "By.E_RELATION\022\020\n\010col_name\030\002 \001(\t\"7\n\nE_REL"
      "ATION\022\026\n\022E_RELATION_UNKNOWN\020\000\022\007\n\003ASC\020\001\022\010"
      "\n\004DESC\020\002\"\216\001\n\014E_QUERY_TYPE\022\030\n\024E_QUERY_TYP"
      "E_UNKNONW\020\000\022\n\n\006SELECT\020\001\022\n\n\006INSERT\020\002\022\021\n\rI"
      "NSERT_IGNORE\020\003\022\n\n\006UPDATE\020\004\022\013\n\007REPLACE\020\005\022"
      "\n\n\006DELETE\020\006\022\n\n\006CUSTOM\020\007\022\010\n\004BULK\020\010\",\n\006Rec"
      "ord\022\"\n\nfield_info\030\001 \003(\0132\016.DataMem.Field\""
      "c\n\005Field\022\020\n\010col_name\030\001 \001(\t\022%\n\010col_type\030\002"
      " \001(\0162\023.DataMem.E_COL_TYPE\022\021\n\tcol_value\030\003"
      " \001(\014\022\016\n\006col_as\030\004 \001(\t\"\317\002\n\006MemRsp\022\016\n\006err_n"
      "o\030\001 \001(\005\022\017\n\007err_msg\030\002 \001(\014\022\022\n\ntotalcount\030\003"
      " \001(\005\022\020\n\010curcount\030\004 \001(\005\022$\n\013record_data\030\005 "
      "\003(\0132\017.DataMem.Record\022\014\n\004from\030\006 \001(\005\022*\n\006lo"
      "cate\030\007 \001(\0132\032.DataMem.MemRsp.DataLocate\032U"
      "\n\nDataLocate\022\024\n\014section_from\030\001 \001(\r\022\022\n\nse"
      "ction_to\030\002 \001(\r\022\014\n\004hash\030\003 \001(\r\022\017\n\007divisor\030"
      "\004 \001(\r\"G\n\rE_RESULT_FROM\022\031\n\025E_RESULT_FROM_"
      "UNKNOWN\020\000\022\016\n\nFROM_REDIS\020\001\022\013\n\007FROM_DB\020\002*D"
      "\n\nE_COL_TYPE\022\n\n\006STRING\020\000\022\007\n\003INT\020\001\022\n\n\006BIG"
      "INT\020\002\022\t\n\005FLOAT\020\003\022\n\n\006DOUBLE\020\004"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2268);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "dataproxy.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_dataproxy_2eproto
namespace DataMem {
const ::google::protobuf::EnumDescriptor* MemOperate_RedisOperate_OPERATE_TYPE_descriptor() {
  protobuf_dataproxy_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dataproxy_2eproto::file_level_enum_descriptors[0];
}
bool MemOperate_RedisOperate_OPERATE_TYPE_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MemOperate_RedisOperate_OPERATE_TYPE MemOperate_RedisOperate::OPERATE_TYPE_UNKNOWN;
const MemOperate_RedisOperate_OPERATE_TYPE MemOperate_RedisOperate::T_READ;
const MemOperate_RedisOperate_OPERATE_TYPE MemOperate_RedisOperate::T_WRITE;
const MemOperate_RedisOperate_OPERATE_TYPE MemOperate_RedisOperate::OPERATE_TYPE_MIN;
const MemOperate_RedisOperate_OPERATE_TYPE MemOperate_RedisOperate::OPERATE_TYPE_MAX;
const int MemOperate_RedisOperate::OPERATE_TYPE_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* MemOperate_DbOperate_Condition_E_RELATION_descriptor() {
  protobuf_dataproxy_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dataproxy_2eproto::file_level_enum_descriptors[1];
}
bool MemOperate_DbOperate_Condition_E_RELATION_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MemOperate_DbOperate_Condition_E_RELATION MemOperate_DbOperate_Condition::E_RELATION_UNKNOWN;
const MemOperate_DbOperate_Condition_E_RELATION MemOperate_DbOperate_Condition::EQ;
const MemOperate_DbOperate_Condition_E_RELATION MemOperate_DbOperate_Condition::NE;
const MemOperate_DbOperate_Condition_E_RELATION MemOperate_DbOperate_Condition::GT;
const MemOperate_DbOperate_Condition_E_RELATION MemOperate_DbOperate_Condition::LT;
const MemOperate_DbOperate_Condition_E_RELATION MemOperate_DbOperate_Condition::GE;
const MemOperate_DbOperate_Condition_E_RELATION MemOperate_DbOperate_Condition::LE;
const MemOperate_DbOperate_Condition_E_RELATION MemOperate_DbOperate_Condition::LIKE;
const MemOperate_DbOperate_Condition_E_RELATION MemOperate_DbOperate_Condition::IN;
const MemOperate_DbOperate_Condition_E_RELATION MemOperate_DbOperate_Condition::E_RELATION_MIN;
const MemOperate_DbOperate_Condition_E_RELATION MemOperate_DbOperate_Condition::E_RELATION_MAX;
const int MemOperate_DbOperate_Condition::E_RELATION_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* MemOperate_DbOperate_ConditionGroup_E_RELATION_descriptor() {
  protobuf_dataproxy_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dataproxy_2eproto::file_level_enum_descriptors[2];
}
bool MemOperate_DbOperate_ConditionGroup_E_RELATION_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MemOperate_DbOperate_ConditionGroup_E_RELATION MemOperate_DbOperate_ConditionGroup::E_RELATION_UNKNOWN;
const MemOperate_DbOperate_ConditionGroup_E_RELATION MemOperate_DbOperate_ConditionGroup::AND;
const MemOperate_DbOperate_ConditionGroup_E_RELATION MemOperate_DbOperate_ConditionGroup::OR;
const MemOperate_DbOperate_ConditionGroup_E_RELATION MemOperate_DbOperate_ConditionGroup::E_RELATION_MIN;
const MemOperate_DbOperate_ConditionGroup_E_RELATION MemOperate_DbOperate_ConditionGroup::E_RELATION_MAX;
const int MemOperate_DbOperate_ConditionGroup::E_RELATION_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* MemOperate_DbOperate_OrderBy_E_RELATION_descriptor() {
  protobuf_dataproxy_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dataproxy_2eproto::file_level_enum_descriptors[3];
}
bool MemOperate_DbOperate_OrderBy_E_RELATION_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MemOperate_DbOperate_OrderBy_E_RELATION MemOperate_DbOperate_OrderBy::E_RELATION_UNKNOWN;
const MemOperate_DbOperate_OrderBy_E_RELATION MemOperate_DbOperate_OrderBy::ASC;
const MemOperate_DbOperate_OrderBy_E_RELATION MemOperate_DbOperate_OrderBy::DESC;
const MemOperate_DbOperate_OrderBy_E_RELATION MemOperate_DbOperate_OrderBy::E_RELATION_MIN;
const MemOperate_DbOperate_OrderBy_E_RELATION MemOperate_DbOperate_OrderBy::E_RELATION_MAX;
const int MemOperate_DbOperate_OrderBy::E_RELATION_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* MemOperate_DbOperate_E_QUERY_TYPE_descriptor() {
  protobuf_dataproxy_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dataproxy_2eproto::file_level_enum_descriptors[4];
}
bool MemOperate_DbOperate_E_QUERY_TYPE_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MemOperate_DbOperate_E_QUERY_TYPE MemOperate_DbOperate::E_QUERY_TYPE_UNKNONW;
const MemOperate_DbOperate_E_QUERY_TYPE MemOperate_DbOperate::SELECT;
const MemOperate_DbOperate_E_QUERY_TYPE MemOperate_DbOperate::INSERT;
const MemOperate_DbOperate_E_QUERY_TYPE MemOperate_DbOperate::INSERT_IGNORE;
const MemOperate_DbOperate_E_QUERY_TYPE MemOperate_DbOperate::UPDATE;
const MemOperate_DbOperate_E_QUERY_TYPE MemOperate_DbOperate::REPLACE;
const MemOperate_DbOperate_E_QUERY_TYPE MemOperate_DbOperate::DELETE;
const MemOperate_DbOperate_E_QUERY_TYPE MemOperate_DbOperate::CUSTOM;
const MemOperate_DbOperate_E_QUERY_TYPE MemOperate_DbOperate::BULK;
const MemOperate_DbOperate_E_QUERY_TYPE MemOperate_DbOperate::E_QUERY_TYPE_MIN;
const MemOperate_DbOperate_E_QUERY_TYPE MemOperate_DbOperate::E_QUERY_TYPE_MAX;
const int MemOperate_DbOperate::E_QUERY_TYPE_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* MemRsp_E_RESULT_FROM_descriptor() {
  protobuf_dataproxy_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dataproxy_2eproto::file_level_enum_descriptors[5];
}
bool MemRsp_E_RESULT_FROM_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MemRsp_E_RESULT_FROM MemRsp::E_RESULT_FROM_UNKNOWN;
const MemRsp_E_RESULT_FROM MemRsp::FROM_REDIS;
const MemRsp_E_RESULT_FROM MemRsp::FROM_DB;
const MemRsp_E_RESULT_FROM MemRsp::E_RESULT_FROM_MIN;
const MemRsp_E_RESULT_FROM MemRsp::E_RESULT_FROM_MAX;
const int MemRsp::E_RESULT_FROM_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* E_COL_TYPE_descriptor() {
  protobuf_dataproxy_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dataproxy_2eproto::file_level_enum_descriptors[6];
}
bool E_COL_TYPE_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void MemOperate_RedisOperate::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MemOperate_RedisOperate::kKeyNameFieldNumber;
const int MemOperate_RedisOperate::kRedisCmdReadFieldNumber;
const int MemOperate_RedisOperate::kRedisCmdWriteFieldNumber;
const int MemOperate_RedisOperate::kOpTypeFieldNumber;
const int MemOperate_RedisOperate::kFieldsFieldNumber;
const int MemOperate_RedisOperate::kKeyTtlFieldNumber;
const int MemOperate_RedisOperate::kRedisStructureFieldNumber;
const int MemOperate_RedisOperate::kDataPurposeFieldNumber;
const int MemOperate_RedisOperate::kHashKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MemOperate_RedisOperate::MemOperate_RedisOperate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dataproxy_2eproto::scc_info_MemOperate_RedisOperate.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:DataMem.MemOperate.RedisOperate)
}
MemOperate_RedisOperate::MemOperate_RedisOperate(const MemOperate_RedisOperate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      fields_(from.fields_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key_name()) {
    key_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_name_);
  }
  redis_cmd_read_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_redis_cmd_read()) {
    redis_cmd_read_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.redis_cmd_read_);
  }
  redis_cmd_write_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_redis_cmd_write()) {
    redis_cmd_write_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.redis_cmd_write_);
  }
  hash_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_hash_key()) {
    hash_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_key_);
  }
  ::memcpy(&op_type_, &from.op_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&data_purpose_) -
    reinterpret_cast<char*>(&op_type_)) + sizeof(data_purpose_));
  // @@protoc_insertion_point(copy_constructor:DataMem.MemOperate.RedisOperate)
}

void MemOperate_RedisOperate::SharedCtor() {
  key_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  redis_cmd_read_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  redis_cmd_write_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hash_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&op_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&data_purpose_) -
      reinterpret_cast<char*>(&op_type_)) + sizeof(data_purpose_));
}

MemOperate_RedisOperate::~MemOperate_RedisOperate() {
  // @@protoc_insertion_point(destructor:DataMem.MemOperate.RedisOperate)
  SharedDtor();
}

void MemOperate_RedisOperate::SharedDtor() {
  key_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  redis_cmd_read_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  redis_cmd_write_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hash_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MemOperate_RedisOperate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MemOperate_RedisOperate::descriptor() {
  ::protobuf_dataproxy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dataproxy_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MemOperate_RedisOperate& MemOperate_RedisOperate::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dataproxy_2eproto::scc_info_MemOperate_RedisOperate.base);
  return *internal_default_instance();
}


void MemOperate_RedisOperate::Clear() {
// @@protoc_insertion_point(message_clear_start:DataMem.MemOperate.RedisOperate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fields_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      key_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      redis_cmd_read_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      redis_cmd_write_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      hash_key_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 240u) {
    ::memset(&op_type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&data_purpose_) -
        reinterpret_cast<char*>(&op_type_)) + sizeof(data_purpose_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MemOperate_RedisOperate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DataMem.MemOperate.RedisOperate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes key_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string redis_cmd_read = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_redis_cmd_read()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->redis_cmd_read().data(), static_cast<int>(this->redis_cmd_read().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "DataMem.MemOperate.RedisOperate.redis_cmd_read");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string redis_cmd_write = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_redis_cmd_write()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->redis_cmd_write().data(), static_cast<int>(this->redis_cmd_write().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "DataMem.MemOperate.RedisOperate.redis_cmd_write");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .DataMem.MemOperate.RedisOperate.OPERATE_TYPE op_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::DataMem::MemOperate_RedisOperate_OPERATE_TYPE_IsValid(value)) {
            set_op_type(static_cast< ::DataMem::MemOperate_RedisOperate_OPERATE_TYPE >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                4, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .DataMem.Field fields = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_fields()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 key_ttl = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_key_ttl();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &key_ttl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 redis_structure = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_redis_structure();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &redis_structure_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 data_purpose = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_data_purpose();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &data_purpose_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes hash_key = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_hash_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DataMem.MemOperate.RedisOperate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DataMem.MemOperate.RedisOperate)
  return false;
#undef DO_
}

void MemOperate_RedisOperate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DataMem.MemOperate.RedisOperate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes key_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->key_name(), output);
  }

  // optional string redis_cmd_read = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->redis_cmd_read().data(), static_cast<int>(this->redis_cmd_read().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DataMem.MemOperate.RedisOperate.redis_cmd_read");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->redis_cmd_read(), output);
  }

  // optional string redis_cmd_write = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->redis_cmd_write().data(), static_cast<int>(this->redis_cmd_write().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DataMem.MemOperate.RedisOperate.redis_cmd_write");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->redis_cmd_write(), output);
  }

  // optional .DataMem.MemOperate.RedisOperate.OPERATE_TYPE op_type = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->op_type(), output);
  }

  // repeated .DataMem.Field fields = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->fields_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->fields(static_cast<int>(i)),
      output);
  }

  // optional int32 key_ttl = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->key_ttl(), output);
  }

  // optional int32 redis_structure = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->redis_structure(), output);
  }

  // optional int32 data_purpose = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->data_purpose(), output);
  }

  // optional bytes hash_key = 9;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      9, this->hash_key(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DataMem.MemOperate.RedisOperate)
}

::google::protobuf::uint8* MemOperate_RedisOperate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DataMem.MemOperate.RedisOperate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes key_name = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->key_name(), target);
  }

  // optional string redis_cmd_read = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->redis_cmd_read().data(), static_cast<int>(this->redis_cmd_read().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DataMem.MemOperate.RedisOperate.redis_cmd_read");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->redis_cmd_read(), target);
  }

  // optional string redis_cmd_write = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->redis_cmd_write().data(), static_cast<int>(this->redis_cmd_write().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DataMem.MemOperate.RedisOperate.redis_cmd_write");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->redis_cmd_write(), target);
  }

  // optional .DataMem.MemOperate.RedisOperate.OPERATE_TYPE op_type = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->op_type(), target);
  }

  // repeated .DataMem.Field fields = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->fields_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->fields(static_cast<int>(i)), deterministic, target);
  }

  // optional int32 key_ttl = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->key_ttl(), target);
  }

  // optional int32 redis_structure = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->redis_structure(), target);
  }

  // optional int32 data_purpose = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->data_purpose(), target);
  }

  // optional bytes hash_key = 9;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        9, this->hash_key(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DataMem.MemOperate.RedisOperate)
  return target;
}

size_t MemOperate_RedisOperate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DataMem.MemOperate.RedisOperate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .DataMem.Field fields = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->fields_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->fields(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional bytes key_name = 1;
    if (has_key_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->key_name());
    }

    // optional string redis_cmd_read = 2;
    if (has_redis_cmd_read()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->redis_cmd_read());
    }

    // optional string redis_cmd_write = 3;
    if (has_redis_cmd_write()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->redis_cmd_write());
    }

    // optional bytes hash_key = 9;
    if (has_hash_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->hash_key());
    }

    // optional .DataMem.MemOperate.RedisOperate.OPERATE_TYPE op_type = 4;
    if (has_op_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->op_type());
    }

    // optional int32 key_ttl = 6;
    if (has_key_ttl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->key_ttl());
    }

    // optional int32 redis_structure = 7;
    if (has_redis_structure()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->redis_structure());
    }

    // optional int32 data_purpose = 8;
    if (has_data_purpose()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->data_purpose());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MemOperate_RedisOperate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DataMem.MemOperate.RedisOperate)
  GOOGLE_DCHECK_NE(&from, this);
  const MemOperate_RedisOperate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MemOperate_RedisOperate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DataMem.MemOperate.RedisOperate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DataMem.MemOperate.RedisOperate)
    MergeFrom(*source);
  }
}

void MemOperate_RedisOperate::MergeFrom(const MemOperate_RedisOperate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DataMem.MemOperate.RedisOperate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  fields_.MergeFrom(from.fields_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_key_name();
      key_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_redis_cmd_read();
      redis_cmd_read_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.redis_cmd_read_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_redis_cmd_write();
      redis_cmd_write_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.redis_cmd_write_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_hash_key();
      hash_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_key_);
    }
    if (cached_has_bits & 0x00000010u) {
      op_type_ = from.op_type_;
    }
    if (cached_has_bits & 0x00000020u) {
      key_ttl_ = from.key_ttl_;
    }
    if (cached_has_bits & 0x00000040u) {
      redis_structure_ = from.redis_structure_;
    }
    if (cached_has_bits & 0x00000080u) {
      data_purpose_ = from.data_purpose_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MemOperate_RedisOperate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DataMem.MemOperate.RedisOperate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MemOperate_RedisOperate::CopyFrom(const MemOperate_RedisOperate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DataMem.MemOperate.RedisOperate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MemOperate_RedisOperate::IsInitialized() const {
  return true;
}

void MemOperate_RedisOperate::Swap(MemOperate_RedisOperate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MemOperate_RedisOperate::InternalSwap(MemOperate_RedisOperate* other) {
  using std::swap;
  CastToBase(&fields_)->InternalSwap(CastToBase(&other->fields_));
  key_name_.Swap(&other->key_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  redis_cmd_read_.Swap(&other->redis_cmd_read_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  redis_cmd_write_.Swap(&other->redis_cmd_write_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  hash_key_.Swap(&other->hash_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(op_type_, other->op_type_);
  swap(key_ttl_, other->key_ttl_);
  swap(redis_structure_, other->redis_structure_);
  swap(data_purpose_, other->data_purpose_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MemOperate_RedisOperate::GetMetadata() const {
  protobuf_dataproxy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dataproxy_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MemOperate_DbOperate_Condition::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MemOperate_DbOperate_Condition::kRelationFieldNumber;
const int MemOperate_DbOperate_Condition::kColTypeFieldNumber;
const int MemOperate_DbOperate_Condition::kColNameFieldNumber;
const int MemOperate_DbOperate_Condition::kColValuesFieldNumber;
const int MemOperate_DbOperate_Condition::kColNameRightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MemOperate_DbOperate_Condition::MemOperate_DbOperate_Condition()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dataproxy_2eproto::scc_info_MemOperate_DbOperate_Condition.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:DataMem.MemOperate.DbOperate.Condition)
}
MemOperate_DbOperate_Condition::MemOperate_DbOperate_Condition(const MemOperate_DbOperate_Condition& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      col_values_(from.col_values_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  col_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_col_name()) {
    col_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.col_name_);
  }
  col_name_right_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_col_name_right()) {
    col_name_right_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.col_name_right_);
  }
  ::memcpy(&relation_, &from.relation_,
    static_cast<size_t>(reinterpret_cast<char*>(&col_type_) -
    reinterpret_cast<char*>(&relation_)) + sizeof(col_type_));
  // @@protoc_insertion_point(copy_constructor:DataMem.MemOperate.DbOperate.Condition)
}

void MemOperate_DbOperate_Condition::SharedCtor() {
  col_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  col_name_right_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&relation_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&col_type_) -
      reinterpret_cast<char*>(&relation_)) + sizeof(col_type_));
}

MemOperate_DbOperate_Condition::~MemOperate_DbOperate_Condition() {
  // @@protoc_insertion_point(destructor:DataMem.MemOperate.DbOperate.Condition)
  SharedDtor();
}

void MemOperate_DbOperate_Condition::SharedDtor() {
  col_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  col_name_right_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MemOperate_DbOperate_Condition::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MemOperate_DbOperate_Condition::descriptor() {
  ::protobuf_dataproxy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dataproxy_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MemOperate_DbOperate_Condition& MemOperate_DbOperate_Condition::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dataproxy_2eproto::scc_info_MemOperate_DbOperate_Condition.base);
  return *internal_default_instance();
}


void MemOperate_DbOperate_Condition::Clear() {
// @@protoc_insertion_point(message_clear_start:DataMem.MemOperate.DbOperate.Condition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  col_values_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      col_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      col_name_right_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 12u) {
    ::memset(&relation_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&col_type_) -
        reinterpret_cast<char*>(&relation_)) + sizeof(col_type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MemOperate_DbOperate_Condition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DataMem.MemOperate.DbOperate.Condition)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .DataMem.MemOperate.DbOperate.Condition.E_RELATION relation = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::DataMem::MemOperate_DbOperate_Condition_E_RELATION_IsValid(value)) {
            set_relation(static_cast< ::DataMem::MemOperate_DbOperate_Condition_E_RELATION >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .DataMem.E_COL_TYPE col_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::DataMem::E_COL_TYPE_IsValid(value)) {
            set_col_type(static_cast< ::DataMem::E_COL_TYPE >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string col_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_col_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->col_name().data(), static_cast<int>(this->col_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "DataMem.MemOperate.DbOperate.Condition.col_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes col_values = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_col_values()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string col_name_right = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_col_name_right()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->col_name_right().data(), static_cast<int>(this->col_name_right().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "DataMem.MemOperate.DbOperate.Condition.col_name_right");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DataMem.MemOperate.DbOperate.Condition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DataMem.MemOperate.DbOperate.Condition)
  return false;
#undef DO_
}

void MemOperate_DbOperate_Condition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DataMem.MemOperate.DbOperate.Condition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .DataMem.MemOperate.DbOperate.Condition.E_RELATION relation = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->relation(), output);
  }

  // optional .DataMem.E_COL_TYPE col_type = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->col_type(), output);
  }

  // optional string col_name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->col_name().data(), static_cast<int>(this->col_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DataMem.MemOperate.DbOperate.Condition.col_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->col_name(), output);
  }

  // repeated bytes col_values = 4;
  for (int i = 0, n = this->col_values_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      4, this->col_values(i), output);
  }

  // optional string col_name_right = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->col_name_right().data(), static_cast<int>(this->col_name_right().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DataMem.MemOperate.DbOperate.Condition.col_name_right");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->col_name_right(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DataMem.MemOperate.DbOperate.Condition)
}

::google::protobuf::uint8* MemOperate_DbOperate_Condition::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DataMem.MemOperate.DbOperate.Condition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .DataMem.MemOperate.DbOperate.Condition.E_RELATION relation = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->relation(), target);
  }

  // optional .DataMem.E_COL_TYPE col_type = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->col_type(), target);
  }

  // optional string col_name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->col_name().data(), static_cast<int>(this->col_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DataMem.MemOperate.DbOperate.Condition.col_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->col_name(), target);
  }

  // repeated bytes col_values = 4;
  for (int i = 0, n = this->col_values_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(4, this->col_values(i), target);
  }

  // optional string col_name_right = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->col_name_right().data(), static_cast<int>(this->col_name_right().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DataMem.MemOperate.DbOperate.Condition.col_name_right");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->col_name_right(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DataMem.MemOperate.DbOperate.Condition)
  return target;
}

size_t MemOperate_DbOperate_Condition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DataMem.MemOperate.DbOperate.Condition)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated bytes col_values = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->col_values_size());
  for (int i = 0, n = this->col_values_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->col_values(i));
  }

  if (_has_bits_[0 / 32] & 15u) {
    // optional string col_name = 3;
    if (has_col_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->col_name());
    }

    // optional string col_name_right = 5;
    if (has_col_name_right()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->col_name_right());
    }

    // optional .DataMem.MemOperate.DbOperate.Condition.E_RELATION relation = 1;
    if (has_relation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->relation());
    }

    // optional .DataMem.E_COL_TYPE col_type = 2;
    if (has_col_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->col_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MemOperate_DbOperate_Condition::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DataMem.MemOperate.DbOperate.Condition)
  GOOGLE_DCHECK_NE(&from, this);
  const MemOperate_DbOperate_Condition* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MemOperate_DbOperate_Condition>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DataMem.MemOperate.DbOperate.Condition)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DataMem.MemOperate.DbOperate.Condition)
    MergeFrom(*source);
  }
}

void MemOperate_DbOperate_Condition::MergeFrom(const MemOperate_DbOperate_Condition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DataMem.MemOperate.DbOperate.Condition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  col_values_.MergeFrom(from.col_values_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_col_name();
      col_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.col_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_col_name_right();
      col_name_right_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.col_name_right_);
    }
    if (cached_has_bits & 0x00000004u) {
      relation_ = from.relation_;
    }
    if (cached_has_bits & 0x00000008u) {
      col_type_ = from.col_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MemOperate_DbOperate_Condition::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DataMem.MemOperate.DbOperate.Condition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MemOperate_DbOperate_Condition::CopyFrom(const MemOperate_DbOperate_Condition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DataMem.MemOperate.DbOperate.Condition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MemOperate_DbOperate_Condition::IsInitialized() const {
  return true;
}

void MemOperate_DbOperate_Condition::Swap(MemOperate_DbOperate_Condition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MemOperate_DbOperate_Condition::InternalSwap(MemOperate_DbOperate_Condition* other) {
  using std::swap;
  col_values_.InternalSwap(CastToBase(&other->col_values_));
  col_name_.Swap(&other->col_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  col_name_right_.Swap(&other->col_name_right_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(relation_, other->relation_);
  swap(col_type_, other->col_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MemOperate_DbOperate_Condition::GetMetadata() const {
  protobuf_dataproxy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dataproxy_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MemOperate_DbOperate_ConditionGroup::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MemOperate_DbOperate_ConditionGroup::kRelationFieldNumber;
const int MemOperate_DbOperate_ConditionGroup::kConditionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MemOperate_DbOperate_ConditionGroup::MemOperate_DbOperate_ConditionGroup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dataproxy_2eproto::scc_info_MemOperate_DbOperate_ConditionGroup.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:DataMem.MemOperate.DbOperate.ConditionGroup)
}
MemOperate_DbOperate_ConditionGroup::MemOperate_DbOperate_ConditionGroup(const MemOperate_DbOperate_ConditionGroup& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      condition_(from.condition_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  relation_ = from.relation_;
  // @@protoc_insertion_point(copy_constructor:DataMem.MemOperate.DbOperate.ConditionGroup)
}

void MemOperate_DbOperate_ConditionGroup::SharedCtor() {
  relation_ = 0;
}

MemOperate_DbOperate_ConditionGroup::~MemOperate_DbOperate_ConditionGroup() {
  // @@protoc_insertion_point(destructor:DataMem.MemOperate.DbOperate.ConditionGroup)
  SharedDtor();
}

void MemOperate_DbOperate_ConditionGroup::SharedDtor() {
}

void MemOperate_DbOperate_ConditionGroup::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MemOperate_DbOperate_ConditionGroup::descriptor() {
  ::protobuf_dataproxy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dataproxy_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MemOperate_DbOperate_ConditionGroup& MemOperate_DbOperate_ConditionGroup::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dataproxy_2eproto::scc_info_MemOperate_DbOperate_ConditionGroup.base);
  return *internal_default_instance();
}


void MemOperate_DbOperate_ConditionGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:DataMem.MemOperate.DbOperate.ConditionGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  condition_.Clear();
  relation_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MemOperate_DbOperate_ConditionGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DataMem.MemOperate.DbOperate.ConditionGroup)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .DataMem.MemOperate.DbOperate.ConditionGroup.E_RELATION relation = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::DataMem::MemOperate_DbOperate_ConditionGroup_E_RELATION_IsValid(value)) {
            set_relation(static_cast< ::DataMem::MemOperate_DbOperate_ConditionGroup_E_RELATION >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .DataMem.MemOperate.DbOperate.Condition condition = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_condition()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DataMem.MemOperate.DbOperate.ConditionGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DataMem.MemOperate.DbOperate.ConditionGroup)
  return false;
#undef DO_
}

void MemOperate_DbOperate_ConditionGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DataMem.MemOperate.DbOperate.ConditionGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .DataMem.MemOperate.DbOperate.ConditionGroup.E_RELATION relation = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->relation(), output);
  }

  // repeated .DataMem.MemOperate.DbOperate.Condition condition = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->condition_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->condition(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DataMem.MemOperate.DbOperate.ConditionGroup)
}

::google::protobuf::uint8* MemOperate_DbOperate_ConditionGroup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DataMem.MemOperate.DbOperate.ConditionGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .DataMem.MemOperate.DbOperate.ConditionGroup.E_RELATION relation = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->relation(), target);
  }

  // repeated .DataMem.MemOperate.DbOperate.Condition condition = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->condition_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->condition(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DataMem.MemOperate.DbOperate.ConditionGroup)
  return target;
}

size_t MemOperate_DbOperate_ConditionGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DataMem.MemOperate.DbOperate.ConditionGroup)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .DataMem.MemOperate.DbOperate.Condition condition = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->condition_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->condition(static_cast<int>(i)));
    }
  }

  // optional .DataMem.MemOperate.DbOperate.ConditionGroup.E_RELATION relation = 1;
  if (has_relation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->relation());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MemOperate_DbOperate_ConditionGroup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DataMem.MemOperate.DbOperate.ConditionGroup)
  GOOGLE_DCHECK_NE(&from, this);
  const MemOperate_DbOperate_ConditionGroup* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MemOperate_DbOperate_ConditionGroup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DataMem.MemOperate.DbOperate.ConditionGroup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DataMem.MemOperate.DbOperate.ConditionGroup)
    MergeFrom(*source);
  }
}

void MemOperate_DbOperate_ConditionGroup::MergeFrom(const MemOperate_DbOperate_ConditionGroup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DataMem.MemOperate.DbOperate.ConditionGroup)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  condition_.MergeFrom(from.condition_);
  if (from.has_relation()) {
    set_relation(from.relation());
  }
}

void MemOperate_DbOperate_ConditionGroup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DataMem.MemOperate.DbOperate.ConditionGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MemOperate_DbOperate_ConditionGroup::CopyFrom(const MemOperate_DbOperate_ConditionGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DataMem.MemOperate.DbOperate.ConditionGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MemOperate_DbOperate_ConditionGroup::IsInitialized() const {
  return true;
}

void MemOperate_DbOperate_ConditionGroup::Swap(MemOperate_DbOperate_ConditionGroup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MemOperate_DbOperate_ConditionGroup::InternalSwap(MemOperate_DbOperate_ConditionGroup* other) {
  using std::swap;
  CastToBase(&condition_)->InternalSwap(CastToBase(&other->condition_));
  swap(relation_, other->relation_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MemOperate_DbOperate_ConditionGroup::GetMetadata() const {
  protobuf_dataproxy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dataproxy_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MemOperate_DbOperate_OrderBy::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MemOperate_DbOperate_OrderBy::kRelationFieldNumber;
const int MemOperate_DbOperate_OrderBy::kColNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MemOperate_DbOperate_OrderBy::MemOperate_DbOperate_OrderBy()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dataproxy_2eproto::scc_info_MemOperate_DbOperate_OrderBy.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:DataMem.MemOperate.DbOperate.OrderBy)
}
MemOperate_DbOperate_OrderBy::MemOperate_DbOperate_OrderBy(const MemOperate_DbOperate_OrderBy& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  col_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_col_name()) {
    col_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.col_name_);
  }
  relation_ = from.relation_;
  // @@protoc_insertion_point(copy_constructor:DataMem.MemOperate.DbOperate.OrderBy)
}

void MemOperate_DbOperate_OrderBy::SharedCtor() {
  col_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  relation_ = 0;
}

MemOperate_DbOperate_OrderBy::~MemOperate_DbOperate_OrderBy() {
  // @@protoc_insertion_point(destructor:DataMem.MemOperate.DbOperate.OrderBy)
  SharedDtor();
}

void MemOperate_DbOperate_OrderBy::SharedDtor() {
  col_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MemOperate_DbOperate_OrderBy::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MemOperate_DbOperate_OrderBy::descriptor() {
  ::protobuf_dataproxy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dataproxy_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MemOperate_DbOperate_OrderBy& MemOperate_DbOperate_OrderBy::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dataproxy_2eproto::scc_info_MemOperate_DbOperate_OrderBy.base);
  return *internal_default_instance();
}


void MemOperate_DbOperate_OrderBy::Clear() {
// @@protoc_insertion_point(message_clear_start:DataMem.MemOperate.DbOperate.OrderBy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    col_name_.ClearNonDefaultToEmptyNoArena();
  }
  relation_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MemOperate_DbOperate_OrderBy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DataMem.MemOperate.DbOperate.OrderBy)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .DataMem.MemOperate.DbOperate.OrderBy.E_RELATION relation = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::DataMem::MemOperate_DbOperate_OrderBy_E_RELATION_IsValid(value)) {
            set_relation(static_cast< ::DataMem::MemOperate_DbOperate_OrderBy_E_RELATION >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string col_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_col_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->col_name().data(), static_cast<int>(this->col_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "DataMem.MemOperate.DbOperate.OrderBy.col_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DataMem.MemOperate.DbOperate.OrderBy)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DataMem.MemOperate.DbOperate.OrderBy)
  return false;
#undef DO_
}

void MemOperate_DbOperate_OrderBy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DataMem.MemOperate.DbOperate.OrderBy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .DataMem.MemOperate.DbOperate.OrderBy.E_RELATION relation = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->relation(), output);
  }

  // optional string col_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->col_name().data(), static_cast<int>(this->col_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DataMem.MemOperate.DbOperate.OrderBy.col_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->col_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DataMem.MemOperate.DbOperate.OrderBy)
}

::google::protobuf::uint8* MemOperate_DbOperate_OrderBy::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DataMem.MemOperate.DbOperate.OrderBy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .DataMem.MemOperate.DbOperate.OrderBy.E_RELATION relation = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->relation(), target);
  }

  // optional string col_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->col_name().data(), static_cast<int>(this->col_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DataMem.MemOperate.DbOperate.OrderBy.col_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->col_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DataMem.MemOperate.DbOperate.OrderBy)
  return target;
}

size_t MemOperate_DbOperate_OrderBy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DataMem.MemOperate.DbOperate.OrderBy)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string col_name = 2;
    if (has_col_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->col_name());
    }

    // optional .DataMem.MemOperate.DbOperate.OrderBy.E_RELATION relation = 1;
    if (has_relation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->relation());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MemOperate_DbOperate_OrderBy::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DataMem.MemOperate.DbOperate.OrderBy)
  GOOGLE_DCHECK_NE(&from, this);
  const MemOperate_DbOperate_OrderBy* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MemOperate_DbOperate_OrderBy>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DataMem.MemOperate.DbOperate.OrderBy)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DataMem.MemOperate.DbOperate.OrderBy)
    MergeFrom(*source);
  }
}

void MemOperate_DbOperate_OrderBy::MergeFrom(const MemOperate_DbOperate_OrderBy& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DataMem.MemOperate.DbOperate.OrderBy)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_col_name();
      col_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.col_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      relation_ = from.relation_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MemOperate_DbOperate_OrderBy::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DataMem.MemOperate.DbOperate.OrderBy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MemOperate_DbOperate_OrderBy::CopyFrom(const MemOperate_DbOperate_OrderBy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DataMem.MemOperate.DbOperate.OrderBy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MemOperate_DbOperate_OrderBy::IsInitialized() const {
  return true;
}

void MemOperate_DbOperate_OrderBy::Swap(MemOperate_DbOperate_OrderBy* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MemOperate_DbOperate_OrderBy::InternalSwap(MemOperate_DbOperate_OrderBy* other) {
  using std::swap;
  col_name_.Swap(&other->col_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(relation_, other->relation_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MemOperate_DbOperate_OrderBy::GetMetadata() const {
  protobuf_dataproxy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dataproxy_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MemOperate_DbOperate::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MemOperate_DbOperate::kQueryTypeFieldNumber;
const int MemOperate_DbOperate::kTableNameFieldNumber;
const int MemOperate_DbOperate::kFieldsFieldNumber;
const int MemOperate_DbOperate::kConditionsFieldNumber;
const int MemOperate_DbOperate::kGroupbyColFieldNumber;
const int MemOperate_DbOperate::kOrderbyColFieldNumber;
const int MemOperate_DbOperate::kGroupRelationFieldNumber;
const int MemOperate_DbOperate::kLimitFieldNumber;
const int MemOperate_DbOperate::kLimitFromFieldNumber;
const int MemOperate_DbOperate::kModFactorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MemOperate_DbOperate::MemOperate_DbOperate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dataproxy_2eproto::scc_info_MemOperate_DbOperate.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:DataMem.MemOperate.DbOperate)
}
MemOperate_DbOperate::MemOperate_DbOperate(const MemOperate_DbOperate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      fields_(from.fields_),
      conditions_(from.conditions_),
      groupby_col_(from.groupby_col_),
      orderby_col_(from.orderby_col_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  table_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_table_name()) {
    table_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_name_);
  }
  ::memcpy(&query_type_, &from.query_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&mod_factor_) -
    reinterpret_cast<char*>(&query_type_)) + sizeof(mod_factor_));
  // @@protoc_insertion_point(copy_constructor:DataMem.MemOperate.DbOperate)
}

void MemOperate_DbOperate::SharedCtor() {
  table_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&query_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mod_factor_) -
      reinterpret_cast<char*>(&query_type_)) + sizeof(mod_factor_));
}

MemOperate_DbOperate::~MemOperate_DbOperate() {
  // @@protoc_insertion_point(destructor:DataMem.MemOperate.DbOperate)
  SharedDtor();
}

void MemOperate_DbOperate::SharedDtor() {
  table_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MemOperate_DbOperate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MemOperate_DbOperate::descriptor() {
  ::protobuf_dataproxy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dataproxy_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MemOperate_DbOperate& MemOperate_DbOperate::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dataproxy_2eproto::scc_info_MemOperate_DbOperate.base);
  return *internal_default_instance();
}


void MemOperate_DbOperate::Clear() {
// @@protoc_insertion_point(message_clear_start:DataMem.MemOperate.DbOperate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fields_.Clear();
  conditions_.Clear();
  groupby_col_.Clear();
  orderby_col_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    table_name_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 62u) {
    ::memset(&query_type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&mod_factor_) -
        reinterpret_cast<char*>(&query_type_)) + sizeof(mod_factor_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MemOperate_DbOperate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DataMem.MemOperate.DbOperate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .DataMem.MemOperate.DbOperate.E_QUERY_TYPE query_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::DataMem::MemOperate_DbOperate_E_QUERY_TYPE_IsValid(value)) {
            set_query_type(static_cast< ::DataMem::MemOperate_DbOperate_E_QUERY_TYPE >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string table_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_table_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->table_name().data(), static_cast<int>(this->table_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "DataMem.MemOperate.DbOperate.table_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .DataMem.Field fields = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_fields()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .DataMem.MemOperate.DbOperate.ConditionGroup conditions = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_conditions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string groupby_col = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_groupby_col()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->groupby_col(this->groupby_col_size() - 1).data(),
            static_cast<int>(this->groupby_col(this->groupby_col_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "DataMem.MemOperate.DbOperate.groupby_col");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .DataMem.MemOperate.DbOperate.OrderBy orderby_col = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_orderby_col()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .DataMem.MemOperate.DbOperate.ConditionGroup.E_RELATION group_relation = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::DataMem::MemOperate_DbOperate_ConditionGroup_E_RELATION_IsValid(value)) {
            set_group_relation(static_cast< ::DataMem::MemOperate_DbOperate_ConditionGroup_E_RELATION >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                7, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 limit = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_limit();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 limit_from = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_limit_from();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &limit_from_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 mod_factor = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_mod_factor();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &mod_factor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DataMem.MemOperate.DbOperate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DataMem.MemOperate.DbOperate)
  return false;
#undef DO_
}

void MemOperate_DbOperate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DataMem.MemOperate.DbOperate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .DataMem.MemOperate.DbOperate.E_QUERY_TYPE query_type = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->query_type(), output);
  }

  // optional string table_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->table_name().data(), static_cast<int>(this->table_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DataMem.MemOperate.DbOperate.table_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->table_name(), output);
  }

  // repeated .DataMem.Field fields = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->fields_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->fields(static_cast<int>(i)),
      output);
  }

  // repeated .DataMem.MemOperate.DbOperate.ConditionGroup conditions = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->conditions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->conditions(static_cast<int>(i)),
      output);
  }

  // repeated string groupby_col = 5;
  for (int i = 0, n = this->groupby_col_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->groupby_col(i).data(), static_cast<int>(this->groupby_col(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DataMem.MemOperate.DbOperate.groupby_col");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->groupby_col(i), output);
  }

  // repeated .DataMem.MemOperate.DbOperate.OrderBy orderby_col = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->orderby_col_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->orderby_col(static_cast<int>(i)),
      output);
  }

  // optional .DataMem.MemOperate.DbOperate.ConditionGroup.E_RELATION group_relation = 7;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->group_relation(), output);
  }

  // optional uint32 limit = 8;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->limit(), output);
  }

  // optional uint32 limit_from = 9;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->limit_from(), output);
  }

  // optional uint64 mod_factor = 10;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(10, this->mod_factor(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DataMem.MemOperate.DbOperate)
}

::google::protobuf::uint8* MemOperate_DbOperate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DataMem.MemOperate.DbOperate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .DataMem.MemOperate.DbOperate.E_QUERY_TYPE query_type = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->query_type(), target);
  }

  // optional string table_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->table_name().data(), static_cast<int>(this->table_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DataMem.MemOperate.DbOperate.table_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->table_name(), target);
  }

  // repeated .DataMem.Field fields = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->fields_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->fields(static_cast<int>(i)), deterministic, target);
  }

  // repeated .DataMem.MemOperate.DbOperate.ConditionGroup conditions = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->conditions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->conditions(static_cast<int>(i)), deterministic, target);
  }

  // repeated string groupby_col = 5;
  for (int i = 0, n = this->groupby_col_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->groupby_col(i).data(), static_cast<int>(this->groupby_col(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DataMem.MemOperate.DbOperate.groupby_col");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->groupby_col(i), target);
  }

  // repeated .DataMem.MemOperate.DbOperate.OrderBy orderby_col = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->orderby_col_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->orderby_col(static_cast<int>(i)), deterministic, target);
  }

  // optional .DataMem.MemOperate.DbOperate.ConditionGroup.E_RELATION group_relation = 7;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->group_relation(), target);
  }

  // optional uint32 limit = 8;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->limit(), target);
  }

  // optional uint32 limit_from = 9;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->limit_from(), target);
  }

  // optional uint64 mod_factor = 10;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(10, this->mod_factor(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DataMem.MemOperate.DbOperate)
  return target;
}

size_t MemOperate_DbOperate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DataMem.MemOperate.DbOperate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .DataMem.Field fields = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->fields_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->fields(static_cast<int>(i)));
    }
  }

  // repeated .DataMem.MemOperate.DbOperate.ConditionGroup conditions = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->conditions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->conditions(static_cast<int>(i)));
    }
  }

  // repeated string groupby_col = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->groupby_col_size());
  for (int i = 0, n = this->groupby_col_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->groupby_col(i));
  }

  // repeated .DataMem.MemOperate.DbOperate.OrderBy orderby_col = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->orderby_col_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->orderby_col(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 63u) {
    // optional string table_name = 2;
    if (has_table_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->table_name());
    }

    // optional .DataMem.MemOperate.DbOperate.E_QUERY_TYPE query_type = 1;
    if (has_query_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->query_type());
    }

    // optional .DataMem.MemOperate.DbOperate.ConditionGroup.E_RELATION group_relation = 7;
    if (has_group_relation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->group_relation());
    }

    // optional uint32 limit = 8;
    if (has_limit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->limit());
    }

    // optional uint32 limit_from = 9;
    if (has_limit_from()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->limit_from());
    }

    // optional uint64 mod_factor = 10;
    if (has_mod_factor()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->mod_factor());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MemOperate_DbOperate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DataMem.MemOperate.DbOperate)
  GOOGLE_DCHECK_NE(&from, this);
  const MemOperate_DbOperate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MemOperate_DbOperate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DataMem.MemOperate.DbOperate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DataMem.MemOperate.DbOperate)
    MergeFrom(*source);
  }
}

void MemOperate_DbOperate::MergeFrom(const MemOperate_DbOperate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DataMem.MemOperate.DbOperate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  fields_.MergeFrom(from.fields_);
  conditions_.MergeFrom(from.conditions_);
  groupby_col_.MergeFrom(from.groupby_col_);
  orderby_col_.MergeFrom(from.orderby_col_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_table_name();
      table_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      query_type_ = from.query_type_;
    }
    if (cached_has_bits & 0x00000004u) {
      group_relation_ = from.group_relation_;
    }
    if (cached_has_bits & 0x00000008u) {
      limit_ = from.limit_;
    }
    if (cached_has_bits & 0x00000010u) {
      limit_from_ = from.limit_from_;
    }
    if (cached_has_bits & 0x00000020u) {
      mod_factor_ = from.mod_factor_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MemOperate_DbOperate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DataMem.MemOperate.DbOperate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MemOperate_DbOperate::CopyFrom(const MemOperate_DbOperate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DataMem.MemOperate.DbOperate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MemOperate_DbOperate::IsInitialized() const {
  return true;
}

void MemOperate_DbOperate::Swap(MemOperate_DbOperate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MemOperate_DbOperate::InternalSwap(MemOperate_DbOperate* other) {
  using std::swap;
  CastToBase(&fields_)->InternalSwap(CastToBase(&other->fields_));
  CastToBase(&conditions_)->InternalSwap(CastToBase(&other->conditions_));
  groupby_col_.InternalSwap(CastToBase(&other->groupby_col_));
  CastToBase(&orderby_col_)->InternalSwap(CastToBase(&other->orderby_col_));
  table_name_.Swap(&other->table_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(query_type_, other->query_type_);
  swap(group_relation_, other->group_relation_);
  swap(limit_, other->limit_);
  swap(limit_from_, other->limit_from_);
  swap(mod_factor_, other->mod_factor_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MemOperate_DbOperate::GetMetadata() const {
  protobuf_dataproxy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dataproxy_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MemOperate::InitAsDefaultInstance() {
  ::DataMem::_MemOperate_default_instance_._instance.get_mutable()->redis_operate_ = const_cast< ::DataMem::MemOperate_RedisOperate*>(
      ::DataMem::MemOperate_RedisOperate::internal_default_instance());
  ::DataMem::_MemOperate_default_instance_._instance.get_mutable()->db_operate_ = const_cast< ::DataMem::MemOperate_DbOperate*>(
      ::DataMem::MemOperate_DbOperate::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MemOperate::kSectionFactorFieldNumber;
const int MemOperate::kRedisOperateFieldNumber;
const int MemOperate::kDbOperateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MemOperate::MemOperate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dataproxy_2eproto::scc_info_MemOperate.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:DataMem.MemOperate)
}
MemOperate::MemOperate(const MemOperate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_redis_operate()) {
    redis_operate_ = new ::DataMem::MemOperate_RedisOperate(*from.redis_operate_);
  } else {
    redis_operate_ = NULL;
  }
  if (from.has_db_operate()) {
    db_operate_ = new ::DataMem::MemOperate_DbOperate(*from.db_operate_);
  } else {
    db_operate_ = NULL;
  }
  section_factor_ = from.section_factor_;
  // @@protoc_insertion_point(copy_constructor:DataMem.MemOperate)
}

void MemOperate::SharedCtor() {
  ::memset(&redis_operate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&section_factor_) -
      reinterpret_cast<char*>(&redis_operate_)) + sizeof(section_factor_));
}

MemOperate::~MemOperate() {
  // @@protoc_insertion_point(destructor:DataMem.MemOperate)
  SharedDtor();
}

void MemOperate::SharedDtor() {
  if (this != internal_default_instance()) delete redis_operate_;
  if (this != internal_default_instance()) delete db_operate_;
}

void MemOperate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MemOperate::descriptor() {
  ::protobuf_dataproxy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dataproxy_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MemOperate& MemOperate::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dataproxy_2eproto::scc_info_MemOperate.base);
  return *internal_default_instance();
}


void MemOperate::Clear() {
// @@protoc_insertion_point(message_clear_start:DataMem.MemOperate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(redis_operate_ != NULL);
      redis_operate_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(db_operate_ != NULL);
      db_operate_->Clear();
    }
  }
  section_factor_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MemOperate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DataMem.MemOperate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 section_factor = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_section_factor();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &section_factor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .DataMem.MemOperate.RedisOperate redis_operate = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_redis_operate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .DataMem.MemOperate.DbOperate db_operate = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_db_operate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DataMem.MemOperate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DataMem.MemOperate)
  return false;
#undef DO_
}

void MemOperate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DataMem.MemOperate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 section_factor = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->section_factor(), output);
  }

  // optional .DataMem.MemOperate.RedisOperate redis_operate = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_redis_operate(), output);
  }

  // optional .DataMem.MemOperate.DbOperate db_operate = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_db_operate(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DataMem.MemOperate)
}

::google::protobuf::uint8* MemOperate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DataMem.MemOperate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 section_factor = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->section_factor(), target);
  }

  // optional .DataMem.MemOperate.RedisOperate redis_operate = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_redis_operate(), deterministic, target);
  }

  // optional .DataMem.MemOperate.DbOperate db_operate = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_db_operate(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DataMem.MemOperate)
  return target;
}

size_t MemOperate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DataMem.MemOperate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional .DataMem.MemOperate.RedisOperate redis_operate = 2;
    if (has_redis_operate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *redis_operate_);
    }

    // optional .DataMem.MemOperate.DbOperate db_operate = 3;
    if (has_db_operate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *db_operate_);
    }

    // optional uint64 section_factor = 1;
    if (has_section_factor()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->section_factor());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MemOperate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DataMem.MemOperate)
  GOOGLE_DCHECK_NE(&from, this);
  const MemOperate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MemOperate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DataMem.MemOperate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DataMem.MemOperate)
    MergeFrom(*source);
  }
}

void MemOperate::MergeFrom(const MemOperate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DataMem.MemOperate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_redis_operate()->::DataMem::MemOperate_RedisOperate::MergeFrom(from.redis_operate());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_db_operate()->::DataMem::MemOperate_DbOperate::MergeFrom(from.db_operate());
    }
    if (cached_has_bits & 0x00000004u) {
      section_factor_ = from.section_factor_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MemOperate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DataMem.MemOperate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MemOperate::CopyFrom(const MemOperate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DataMem.MemOperate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MemOperate::IsInitialized() const {
  return true;
}

void MemOperate::Swap(MemOperate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MemOperate::InternalSwap(MemOperate* other) {
  using std::swap;
  swap(redis_operate_, other->redis_operate_);
  swap(db_operate_, other->db_operate_);
  swap(section_factor_, other->section_factor_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MemOperate::GetMetadata() const {
  protobuf_dataproxy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dataproxy_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Record::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Record::kFieldInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Record::Record()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dataproxy_2eproto::scc_info_Record.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:DataMem.Record)
}
Record::Record(const Record& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      field_info_(from.field_info_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:DataMem.Record)
}

void Record::SharedCtor() {
}

Record::~Record() {
  // @@protoc_insertion_point(destructor:DataMem.Record)
  SharedDtor();
}

void Record::SharedDtor() {
}

void Record::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Record::descriptor() {
  ::protobuf_dataproxy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dataproxy_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Record& Record::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dataproxy_2eproto::scc_info_Record.base);
  return *internal_default_instance();
}


void Record::Clear() {
// @@protoc_insertion_point(message_clear_start:DataMem.Record)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  field_info_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Record::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DataMem.Record)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .DataMem.Field field_info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_field_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DataMem.Record)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DataMem.Record)
  return false;
#undef DO_
}

void Record::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DataMem.Record)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .DataMem.Field field_info = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->field_info_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->field_info(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DataMem.Record)
}

::google::protobuf::uint8* Record::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DataMem.Record)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .DataMem.Field field_info = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->field_info_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->field_info(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DataMem.Record)
  return target;
}

size_t Record::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DataMem.Record)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .DataMem.Field field_info = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->field_info_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->field_info(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Record::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DataMem.Record)
  GOOGLE_DCHECK_NE(&from, this);
  const Record* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Record>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DataMem.Record)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DataMem.Record)
    MergeFrom(*source);
  }
}

void Record::MergeFrom(const Record& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DataMem.Record)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  field_info_.MergeFrom(from.field_info_);
}

void Record::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DataMem.Record)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Record::CopyFrom(const Record& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DataMem.Record)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Record::IsInitialized() const {
  return true;
}

void Record::Swap(Record* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Record::InternalSwap(Record* other) {
  using std::swap;
  CastToBase(&field_info_)->InternalSwap(CastToBase(&other->field_info_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Record::GetMetadata() const {
  protobuf_dataproxy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dataproxy_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Field::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Field::kColNameFieldNumber;
const int Field::kColTypeFieldNumber;
const int Field::kColValueFieldNumber;
const int Field::kColAsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Field::Field()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dataproxy_2eproto::scc_info_Field.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:DataMem.Field)
}
Field::Field(const Field& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  col_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_col_name()) {
    col_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.col_name_);
  }
  col_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_col_value()) {
    col_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.col_value_);
  }
  col_as_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_col_as()) {
    col_as_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.col_as_);
  }
  col_type_ = from.col_type_;
  // @@protoc_insertion_point(copy_constructor:DataMem.Field)
}

void Field::SharedCtor() {
  col_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  col_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  col_as_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  col_type_ = 0;
}

Field::~Field() {
  // @@protoc_insertion_point(destructor:DataMem.Field)
  SharedDtor();
}

void Field::SharedDtor() {
  col_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  col_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  col_as_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Field::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Field::descriptor() {
  ::protobuf_dataproxy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dataproxy_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Field& Field::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dataproxy_2eproto::scc_info_Field.base);
  return *internal_default_instance();
}


void Field::Clear() {
// @@protoc_insertion_point(message_clear_start:DataMem.Field)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      col_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      col_value_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      col_as_.ClearNonDefaultToEmptyNoArena();
    }
  }
  col_type_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Field::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DataMem.Field)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string col_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_col_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->col_name().data(), static_cast<int>(this->col_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "DataMem.Field.col_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .DataMem.E_COL_TYPE col_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::DataMem::E_COL_TYPE_IsValid(value)) {
            set_col_type(static_cast< ::DataMem::E_COL_TYPE >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes col_value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_col_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string col_as = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_col_as()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->col_as().data(), static_cast<int>(this->col_as().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "DataMem.Field.col_as");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DataMem.Field)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DataMem.Field)
  return false;
#undef DO_
}

void Field::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DataMem.Field)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string col_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->col_name().data(), static_cast<int>(this->col_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DataMem.Field.col_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->col_name(), output);
  }

  // optional .DataMem.E_COL_TYPE col_type = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->col_type(), output);
  }

  // optional bytes col_value = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->col_value(), output);
  }

  // optional string col_as = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->col_as().data(), static_cast<int>(this->col_as().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DataMem.Field.col_as");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->col_as(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DataMem.Field)
}

::google::protobuf::uint8* Field::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DataMem.Field)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string col_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->col_name().data(), static_cast<int>(this->col_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DataMem.Field.col_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->col_name(), target);
  }

  // optional .DataMem.E_COL_TYPE col_type = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->col_type(), target);
  }

  // optional bytes col_value = 3;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->col_value(), target);
  }

  // optional string col_as = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->col_as().data(), static_cast<int>(this->col_as().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DataMem.Field.col_as");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->col_as(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DataMem.Field)
  return target;
}

size_t Field::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DataMem.Field)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string col_name = 1;
    if (has_col_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->col_name());
    }

    // optional bytes col_value = 3;
    if (has_col_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->col_value());
    }

    // optional string col_as = 4;
    if (has_col_as()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->col_as());
    }

    // optional .DataMem.E_COL_TYPE col_type = 2;
    if (has_col_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->col_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Field::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DataMem.Field)
  GOOGLE_DCHECK_NE(&from, this);
  const Field* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Field>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DataMem.Field)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DataMem.Field)
    MergeFrom(*source);
  }
}

void Field::MergeFrom(const Field& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DataMem.Field)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_col_name();
      col_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.col_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_col_value();
      col_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.col_value_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_col_as();
      col_as_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.col_as_);
    }
    if (cached_has_bits & 0x00000008u) {
      col_type_ = from.col_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Field::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DataMem.Field)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Field::CopyFrom(const Field& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DataMem.Field)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Field::IsInitialized() const {
  return true;
}

void Field::Swap(Field* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Field::InternalSwap(Field* other) {
  using std::swap;
  col_name_.Swap(&other->col_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  col_value_.Swap(&other->col_value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  col_as_.Swap(&other->col_as_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(col_type_, other->col_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Field::GetMetadata() const {
  protobuf_dataproxy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dataproxy_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MemRsp_DataLocate::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MemRsp_DataLocate::kSectionFromFieldNumber;
const int MemRsp_DataLocate::kSectionToFieldNumber;
const int MemRsp_DataLocate::kHashFieldNumber;
const int MemRsp_DataLocate::kDivisorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MemRsp_DataLocate::MemRsp_DataLocate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dataproxy_2eproto::scc_info_MemRsp_DataLocate.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:DataMem.MemRsp.DataLocate)
}
MemRsp_DataLocate::MemRsp_DataLocate(const MemRsp_DataLocate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&section_from_, &from.section_from_,
    static_cast<size_t>(reinterpret_cast<char*>(&divisor_) -
    reinterpret_cast<char*>(&section_from_)) + sizeof(divisor_));
  // @@protoc_insertion_point(copy_constructor:DataMem.MemRsp.DataLocate)
}

void MemRsp_DataLocate::SharedCtor() {
  ::memset(&section_from_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&divisor_) -
      reinterpret_cast<char*>(&section_from_)) + sizeof(divisor_));
}

MemRsp_DataLocate::~MemRsp_DataLocate() {
  // @@protoc_insertion_point(destructor:DataMem.MemRsp.DataLocate)
  SharedDtor();
}

void MemRsp_DataLocate::SharedDtor() {
}

void MemRsp_DataLocate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MemRsp_DataLocate::descriptor() {
  ::protobuf_dataproxy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dataproxy_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MemRsp_DataLocate& MemRsp_DataLocate::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dataproxy_2eproto::scc_info_MemRsp_DataLocate.base);
  return *internal_default_instance();
}


void MemRsp_DataLocate::Clear() {
// @@protoc_insertion_point(message_clear_start:DataMem.MemRsp.DataLocate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&section_from_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&divisor_) -
        reinterpret_cast<char*>(&section_from_)) + sizeof(divisor_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MemRsp_DataLocate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DataMem.MemRsp.DataLocate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 section_from = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_section_from();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &section_from_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 section_to = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_section_to();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &section_to_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 hash = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_hash();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hash_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 divisor = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_divisor();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &divisor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DataMem.MemRsp.DataLocate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DataMem.MemRsp.DataLocate)
  return false;
#undef DO_
}

void MemRsp_DataLocate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DataMem.MemRsp.DataLocate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 section_from = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->section_from(), output);
  }

  // optional uint32 section_to = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->section_to(), output);
  }

  // optional uint32 hash = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->hash(), output);
  }

  // optional uint32 divisor = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->divisor(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DataMem.MemRsp.DataLocate)
}

::google::protobuf::uint8* MemRsp_DataLocate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DataMem.MemRsp.DataLocate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 section_from = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->section_from(), target);
  }

  // optional uint32 section_to = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->section_to(), target);
  }

  // optional uint32 hash = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->hash(), target);
  }

  // optional uint32 divisor = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->divisor(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DataMem.MemRsp.DataLocate)
  return target;
}

size_t MemRsp_DataLocate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DataMem.MemRsp.DataLocate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional uint32 section_from = 1;
    if (has_section_from()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->section_from());
    }

    // optional uint32 section_to = 2;
    if (has_section_to()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->section_to());
    }

    // optional uint32 hash = 3;
    if (has_hash()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hash());
    }

    // optional uint32 divisor = 4;
    if (has_divisor()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->divisor());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MemRsp_DataLocate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DataMem.MemRsp.DataLocate)
  GOOGLE_DCHECK_NE(&from, this);
  const MemRsp_DataLocate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MemRsp_DataLocate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DataMem.MemRsp.DataLocate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DataMem.MemRsp.DataLocate)
    MergeFrom(*source);
  }
}

void MemRsp_DataLocate::MergeFrom(const MemRsp_DataLocate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DataMem.MemRsp.DataLocate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      section_from_ = from.section_from_;
    }
    if (cached_has_bits & 0x00000002u) {
      section_to_ = from.section_to_;
    }
    if (cached_has_bits & 0x00000004u) {
      hash_ = from.hash_;
    }
    if (cached_has_bits & 0x00000008u) {
      divisor_ = from.divisor_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MemRsp_DataLocate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DataMem.MemRsp.DataLocate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MemRsp_DataLocate::CopyFrom(const MemRsp_DataLocate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DataMem.MemRsp.DataLocate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MemRsp_DataLocate::IsInitialized() const {
  return true;
}

void MemRsp_DataLocate::Swap(MemRsp_DataLocate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MemRsp_DataLocate::InternalSwap(MemRsp_DataLocate* other) {
  using std::swap;
  swap(section_from_, other->section_from_);
  swap(section_to_, other->section_to_);
  swap(hash_, other->hash_);
  swap(divisor_, other->divisor_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MemRsp_DataLocate::GetMetadata() const {
  protobuf_dataproxy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dataproxy_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MemRsp::InitAsDefaultInstance() {
  ::DataMem::_MemRsp_default_instance_._instance.get_mutable()->locate_ = const_cast< ::DataMem::MemRsp_DataLocate*>(
      ::DataMem::MemRsp_DataLocate::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MemRsp::kErrNoFieldNumber;
const int MemRsp::kErrMsgFieldNumber;
const int MemRsp::kTotalcountFieldNumber;
const int MemRsp::kCurcountFieldNumber;
const int MemRsp::kRecordDataFieldNumber;
const int MemRsp::kFromFieldNumber;
const int MemRsp::kLocateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MemRsp::MemRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dataproxy_2eproto::scc_info_MemRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:DataMem.MemRsp)
}
MemRsp::MemRsp(const MemRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      record_data_(from.record_data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  err_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_err_msg()) {
    err_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_msg_);
  }
  if (from.has_locate()) {
    locate_ = new ::DataMem::MemRsp_DataLocate(*from.locate_);
  } else {
    locate_ = NULL;
  }
  ::memcpy(&err_no_, &from.err_no_,
    static_cast<size_t>(reinterpret_cast<char*>(&from_) -
    reinterpret_cast<char*>(&err_no_)) + sizeof(from_));
  // @@protoc_insertion_point(copy_constructor:DataMem.MemRsp)
}

void MemRsp::SharedCtor() {
  err_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&locate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&from_) -
      reinterpret_cast<char*>(&locate_)) + sizeof(from_));
}

MemRsp::~MemRsp() {
  // @@protoc_insertion_point(destructor:DataMem.MemRsp)
  SharedDtor();
}

void MemRsp::SharedDtor() {
  err_msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete locate_;
}

void MemRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MemRsp::descriptor() {
  ::protobuf_dataproxy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dataproxy_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MemRsp& MemRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dataproxy_2eproto::scc_info_MemRsp.base);
  return *internal_default_instance();
}


void MemRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:DataMem.MemRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  record_data_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      err_msg_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(locate_ != NULL);
      locate_->Clear();
    }
  }
  if (cached_has_bits & 60u) {
    ::memset(&err_no_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&from_) -
        reinterpret_cast<char*>(&err_no_)) + sizeof(from_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MemRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DataMem.MemRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 err_no = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_err_no();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &err_no_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes err_msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_err_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 totalcount = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_totalcount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &totalcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 curcount = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_curcount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &curcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .DataMem.Record record_data = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_record_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 from = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_from();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &from_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .DataMem.MemRsp.DataLocate locate = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_locate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DataMem.MemRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DataMem.MemRsp)
  return false;
#undef DO_
}

void MemRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DataMem.MemRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 err_no = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->err_no(), output);
  }

  // optional bytes err_msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->err_msg(), output);
  }

  // optional int32 totalcount = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->totalcount(), output);
  }

  // optional int32 curcount = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->curcount(), output);
  }

  // repeated .DataMem.Record record_data = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->record_data_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->record_data(static_cast<int>(i)),
      output);
  }

  // optional int32 from = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->from(), output);
  }

  // optional .DataMem.MemRsp.DataLocate locate = 7;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_locate(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DataMem.MemRsp)
}

::google::protobuf::uint8* MemRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DataMem.MemRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 err_no = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->err_no(), target);
  }

  // optional bytes err_msg = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->err_msg(), target);
  }

  // optional int32 totalcount = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->totalcount(), target);
  }

  // optional int32 curcount = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->curcount(), target);
  }

  // repeated .DataMem.Record record_data = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->record_data_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->record_data(static_cast<int>(i)), deterministic, target);
  }

  // optional int32 from = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->from(), target);
  }

  // optional .DataMem.MemRsp.DataLocate locate = 7;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_locate(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DataMem.MemRsp)
  return target;
}

size_t MemRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DataMem.MemRsp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .DataMem.Record record_data = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->record_data_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->record_data(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 63u) {
    // optional bytes err_msg = 2;
    if (has_err_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->err_msg());
    }

    // optional .DataMem.MemRsp.DataLocate locate = 7;
    if (has_locate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *locate_);
    }

    // optional int32 err_no = 1;
    if (has_err_no()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->err_no());
    }

    // optional int32 totalcount = 3;
    if (has_totalcount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->totalcount());
    }

    // optional int32 curcount = 4;
    if (has_curcount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->curcount());
    }

    // optional int32 from = 6;
    if (has_from()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->from());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MemRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DataMem.MemRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const MemRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MemRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DataMem.MemRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DataMem.MemRsp)
    MergeFrom(*source);
  }
}

void MemRsp::MergeFrom(const MemRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DataMem.MemRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  record_data_.MergeFrom(from.record_data_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_err_msg();
      err_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_msg_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_locate()->::DataMem::MemRsp_DataLocate::MergeFrom(from.locate());
    }
    if (cached_has_bits & 0x00000004u) {
      err_no_ = from.err_no_;
    }
    if (cached_has_bits & 0x00000008u) {
      totalcount_ = from.totalcount_;
    }
    if (cached_has_bits & 0x00000010u) {
      curcount_ = from.curcount_;
    }
    if (cached_has_bits & 0x00000020u) {
      from_ = from.from_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MemRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DataMem.MemRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MemRsp::CopyFrom(const MemRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DataMem.MemRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MemRsp::IsInitialized() const {
  return true;
}

void MemRsp::Swap(MemRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MemRsp::InternalSwap(MemRsp* other) {
  using std::swap;
  CastToBase(&record_data_)->InternalSwap(CastToBase(&other->record_data_));
  err_msg_.Swap(&other->err_msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(locate_, other->locate_);
  swap(err_no_, other->err_no_);
  swap(totalcount_, other->totalcount_);
  swap(curcount_, other->curcount_);
  swap(from_, other->from_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MemRsp::GetMetadata() const {
  protobuf_dataproxy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dataproxy_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace DataMem
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::DataMem::MemOperate_RedisOperate* Arena::CreateMaybeMessage< ::DataMem::MemOperate_RedisOperate >(Arena* arena) {
  return Arena::CreateInternal< ::DataMem::MemOperate_RedisOperate >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::DataMem::MemOperate_DbOperate_Condition* Arena::CreateMaybeMessage< ::DataMem::MemOperate_DbOperate_Condition >(Arena* arena) {
  return Arena::CreateInternal< ::DataMem::MemOperate_DbOperate_Condition >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::DataMem::MemOperate_DbOperate_ConditionGroup* Arena::CreateMaybeMessage< ::DataMem::MemOperate_DbOperate_ConditionGroup >(Arena* arena) {
  return Arena::CreateInternal< ::DataMem::MemOperate_DbOperate_ConditionGroup >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::DataMem::MemOperate_DbOperate_OrderBy* Arena::CreateMaybeMessage< ::DataMem::MemOperate_DbOperate_OrderBy >(Arena* arena) {
  return Arena::CreateInternal< ::DataMem::MemOperate_DbOperate_OrderBy >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::DataMem::MemOperate_DbOperate* Arena::CreateMaybeMessage< ::DataMem::MemOperate_DbOperate >(Arena* arena) {
  return Arena::CreateInternal< ::DataMem::MemOperate_DbOperate >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::DataMem::MemOperate* Arena::CreateMaybeMessage< ::DataMem::MemOperate >(Arena* arena) {
  return Arena::CreateInternal< ::DataMem::MemOperate >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::DataMem::Record* Arena::CreateMaybeMessage< ::DataMem::Record >(Arena* arena) {
  return Arena::CreateInternal< ::DataMem::Record >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::DataMem::Field* Arena::CreateMaybeMessage< ::DataMem::Field >(Arena* arena) {
  return Arena::CreateInternal< ::DataMem::Field >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::DataMem::MemRsp_DataLocate* Arena::CreateMaybeMessage< ::DataMem::MemRsp_DataLocate >(Arena* arena) {
  return Arena::CreateInternal< ::DataMem::MemRsp_DataLocate >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::DataMem::MemRsp* Arena::CreateMaybeMessage< ::DataMem::MemRsp >(Arena* arena) {
  return Arena::CreateInternal< ::DataMem::MemRsp >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
