// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: oss_sys.proto

#include "oss_sys.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

class ConnectWorkerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConnectWorker>
      _instance;
} _ConnectWorker_default_instance_;
class TargetWorkerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TargetWorker>
      _instance;
} _TargetWorker_default_instance_;
class LogLevelDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LogLevel>
      _instance;
} _LogLevel_default_instance_;
class ConfigInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConfigInfo>
      _instance;
} _ConfigInfo_default_instance_;
class TraceLogDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TraceLog>
      _instance;
} _TraceLog_default_instance_;
namespace protobuf_oss_5fsys_2eproto {
static void InitDefaultsConnectWorker() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ConnectWorker_default_instance_;
    new (ptr) ::ConnectWorker();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ConnectWorker::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ConnectWorker =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsConnectWorker}, {}};

static void InitDefaultsTargetWorker() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_TargetWorker_default_instance_;
    new (ptr) ::TargetWorker();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TargetWorker::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TargetWorker =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTargetWorker}, {}};

static void InitDefaultsLogLevel() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_LogLevel_default_instance_;
    new (ptr) ::LogLevel();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LogLevel::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LogLevel =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLogLevel}, {}};

static void InitDefaultsConfigInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ConfigInfo_default_instance_;
    new (ptr) ::ConfigInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ConfigInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ConfigInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsConfigInfo}, {}};

static void InitDefaultsTraceLog() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_TraceLog_default_instance_;
    new (ptr) ::TraceLog();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TraceLog::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TraceLog =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTraceLog}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ConnectWorker.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TargetWorker.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LogLevel.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConfigInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TraceLog.base);
}

::google::protobuf::Metadata file_level_metadata[5];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ConnectWorker, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ConnectWorker, worker_index_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TargetWorker, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TargetWorker, err_no_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TargetWorker, worker_identify_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TargetWorker, node_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TargetWorker, err_msg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LogLevel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LogLevel, log_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LogLevel, net_log_level_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ConfigInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ConfigInfo, file_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ConfigInfo, file_content_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ConfigInfo, file_path_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TraceLog, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TraceLog, log_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TraceLog, node_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TraceLog, node_identify_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TraceLog, log_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TraceLog, code_file_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TraceLog, code_file_line_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TraceLog, code_function_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TraceLog, log_content_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ConnectWorker)},
  { 6, -1, sizeof(::TargetWorker)},
  { 15, -1, sizeof(::LogLevel)},
  { 22, -1, sizeof(::ConfigInfo)},
  { 30, -1, sizeof(::TraceLog)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ConnectWorker_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_TargetWorker_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_LogLevel_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ConfigInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_TraceLog_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "oss_sys.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\ross_sys.proto\"%\n\rConnectWorker\022\024\n\014work"
      "er_index\030\001 \001(\005\"[\n\014TargetWorker\022\016\n\006err_no"
      "\030\001 \001(\005\022\027\n\017worker_identify\030\002 \001(\t\022\021\n\tnode_"
      "type\030\003 \001(\t\022\017\n\007err_msg\030\004 \001(\t\"4\n\010LogLevel\022"
      "\021\n\tlog_level\030\001 \001(\005\022\025\n\rnet_log_level\030\002 \001("
      "\005\"H\n\nConfigInfo\022\021\n\tfile_name\030\001 \001(\t\022\024\n\014fi"
      "le_content\030\002 \001(\t\022\021\n\tfile_path\030\003 \001(\t\"\265\001\n\010"
      "TraceLog\022\020\n\010log_time\030\001 \001(\t\022\021\n\tnode_type\030"
      "\002 \001(\t\022\025\n\rnode_identify\030\003 \001(\t\022\021\n\tlog_leve"
      "l\030\004 \001(\t\022\026\n\016code_file_name\030\005 \001(\t\022\026\n\016code_"
      "file_line\030\006 \001(\r\022\025\n\rcode_function\030\007 \001(\t\022\023"
      "\n\013log_content\030\010 \001(\014b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 467);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "oss_sys.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_oss_5fsys_2eproto

// ===================================================================

void ConnectWorker::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConnectWorker::kWorkerIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConnectWorker::ConnectWorker()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_oss_5fsys_2eproto::scc_info_ConnectWorker.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ConnectWorker)
}
ConnectWorker::ConnectWorker(const ConnectWorker& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  worker_index_ = from.worker_index_;
  // @@protoc_insertion_point(copy_constructor:ConnectWorker)
}

void ConnectWorker::SharedCtor() {
  worker_index_ = 0;
}

ConnectWorker::~ConnectWorker() {
  // @@protoc_insertion_point(destructor:ConnectWorker)
  SharedDtor();
}

void ConnectWorker::SharedDtor() {
}

void ConnectWorker::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConnectWorker::descriptor() {
  ::protobuf_oss_5fsys_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_oss_5fsys_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConnectWorker& ConnectWorker::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_oss_5fsys_2eproto::scc_info_ConnectWorker.base);
  return *internal_default_instance();
}


void ConnectWorker::Clear() {
// @@protoc_insertion_point(message_clear_start:ConnectWorker)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  worker_index_ = 0;
  _internal_metadata_.Clear();
}

bool ConnectWorker::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ConnectWorker)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 worker_index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &worker_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ConnectWorker)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ConnectWorker)
  return false;
#undef DO_
}

void ConnectWorker::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ConnectWorker)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 worker_index = 1;
  if (this->worker_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->worker_index(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ConnectWorker)
}

::google::protobuf::uint8* ConnectWorker::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ConnectWorker)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 worker_index = 1;
  if (this->worker_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->worker_index(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConnectWorker)
  return target;
}

size_t ConnectWorker::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ConnectWorker)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 worker_index = 1;
  if (this->worker_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->worker_index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConnectWorker::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ConnectWorker)
  GOOGLE_DCHECK_NE(&from, this);
  const ConnectWorker* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConnectWorker>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ConnectWorker)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ConnectWorker)
    MergeFrom(*source);
  }
}

void ConnectWorker::MergeFrom(const ConnectWorker& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ConnectWorker)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.worker_index() != 0) {
    set_worker_index(from.worker_index());
  }
}

void ConnectWorker::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ConnectWorker)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConnectWorker::CopyFrom(const ConnectWorker& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ConnectWorker)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConnectWorker::IsInitialized() const {
  return true;
}

void ConnectWorker::Swap(ConnectWorker* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConnectWorker::InternalSwap(ConnectWorker* other) {
  using std::swap;
  swap(worker_index_, other->worker_index_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConnectWorker::GetMetadata() const {
  protobuf_oss_5fsys_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_oss_5fsys_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TargetWorker::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TargetWorker::kErrNoFieldNumber;
const int TargetWorker::kWorkerIdentifyFieldNumber;
const int TargetWorker::kNodeTypeFieldNumber;
const int TargetWorker::kErrMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TargetWorker::TargetWorker()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_oss_5fsys_2eproto::scc_info_TargetWorker.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TargetWorker)
}
TargetWorker::TargetWorker(const TargetWorker& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  worker_identify_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.worker_identify().size() > 0) {
    worker_identify_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.worker_identify_);
  }
  node_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.node_type().size() > 0) {
    node_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_type_);
  }
  err_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.err_msg().size() > 0) {
    err_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_msg_);
  }
  err_no_ = from.err_no_;
  // @@protoc_insertion_point(copy_constructor:TargetWorker)
}

void TargetWorker::SharedCtor() {
  worker_identify_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  err_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  err_no_ = 0;
}

TargetWorker::~TargetWorker() {
  // @@protoc_insertion_point(destructor:TargetWorker)
  SharedDtor();
}

void TargetWorker::SharedDtor() {
  worker_identify_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  err_msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TargetWorker::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TargetWorker::descriptor() {
  ::protobuf_oss_5fsys_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_oss_5fsys_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TargetWorker& TargetWorker::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_oss_5fsys_2eproto::scc_info_TargetWorker.base);
  return *internal_default_instance();
}


void TargetWorker::Clear() {
// @@protoc_insertion_point(message_clear_start:TargetWorker)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  worker_identify_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  err_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  err_no_ = 0;
  _internal_metadata_.Clear();
}

bool TargetWorker::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TargetWorker)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 err_no = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &err_no_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string worker_identify = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_worker_identify()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->worker_identify().data(), static_cast<int>(this->worker_identify().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TargetWorker.worker_identify"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string node_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_node_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->node_type().data(), static_cast<int>(this->node_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TargetWorker.node_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string err_msg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_err_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->err_msg().data(), static_cast<int>(this->err_msg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TargetWorker.err_msg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TargetWorker)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TargetWorker)
  return false;
#undef DO_
}

void TargetWorker::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TargetWorker)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 err_no = 1;
  if (this->err_no() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->err_no(), output);
  }

  // string worker_identify = 2;
  if (this->worker_identify().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->worker_identify().data(), static_cast<int>(this->worker_identify().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TargetWorker.worker_identify");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->worker_identify(), output);
  }

  // string node_type = 3;
  if (this->node_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_type().data(), static_cast<int>(this->node_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TargetWorker.node_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->node_type(), output);
  }

  // string err_msg = 4;
  if (this->err_msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->err_msg().data(), static_cast<int>(this->err_msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TargetWorker.err_msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->err_msg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TargetWorker)
}

::google::protobuf::uint8* TargetWorker::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TargetWorker)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 err_no = 1;
  if (this->err_no() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->err_no(), target);
  }

  // string worker_identify = 2;
  if (this->worker_identify().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->worker_identify().data(), static_cast<int>(this->worker_identify().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TargetWorker.worker_identify");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->worker_identify(), target);
  }

  // string node_type = 3;
  if (this->node_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_type().data(), static_cast<int>(this->node_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TargetWorker.node_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->node_type(), target);
  }

  // string err_msg = 4;
  if (this->err_msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->err_msg().data(), static_cast<int>(this->err_msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TargetWorker.err_msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->err_msg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TargetWorker)
  return target;
}

size_t TargetWorker::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TargetWorker)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string worker_identify = 2;
  if (this->worker_identify().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->worker_identify());
  }

  // string node_type = 3;
  if (this->node_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->node_type());
  }

  // string err_msg = 4;
  if (this->err_msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->err_msg());
  }

  // int32 err_no = 1;
  if (this->err_no() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->err_no());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TargetWorker::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TargetWorker)
  GOOGLE_DCHECK_NE(&from, this);
  const TargetWorker* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TargetWorker>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TargetWorker)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TargetWorker)
    MergeFrom(*source);
  }
}

void TargetWorker::MergeFrom(const TargetWorker& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TargetWorker)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.worker_identify().size() > 0) {

    worker_identify_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.worker_identify_);
  }
  if (from.node_type().size() > 0) {

    node_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_type_);
  }
  if (from.err_msg().size() > 0) {

    err_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_msg_);
  }
  if (from.err_no() != 0) {
    set_err_no(from.err_no());
  }
}

void TargetWorker::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TargetWorker)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TargetWorker::CopyFrom(const TargetWorker& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TargetWorker)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TargetWorker::IsInitialized() const {
  return true;
}

void TargetWorker::Swap(TargetWorker* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TargetWorker::InternalSwap(TargetWorker* other) {
  using std::swap;
  worker_identify_.Swap(&other->worker_identify_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  node_type_.Swap(&other->node_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  err_msg_.Swap(&other->err_msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(err_no_, other->err_no_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TargetWorker::GetMetadata() const {
  protobuf_oss_5fsys_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_oss_5fsys_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LogLevel::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogLevel::kLogLevelFieldNumber;
const int LogLevel::kNetLogLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogLevel::LogLevel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_oss_5fsys_2eproto::scc_info_LogLevel.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LogLevel)
}
LogLevel::LogLevel(const LogLevel& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&log_level_, &from.log_level_,
    static_cast<size_t>(reinterpret_cast<char*>(&net_log_level_) -
    reinterpret_cast<char*>(&log_level_)) + sizeof(net_log_level_));
  // @@protoc_insertion_point(copy_constructor:LogLevel)
}

void LogLevel::SharedCtor() {
  ::memset(&log_level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&net_log_level_) -
      reinterpret_cast<char*>(&log_level_)) + sizeof(net_log_level_));
}

LogLevel::~LogLevel() {
  // @@protoc_insertion_point(destructor:LogLevel)
  SharedDtor();
}

void LogLevel::SharedDtor() {
}

void LogLevel::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LogLevel::descriptor() {
  ::protobuf_oss_5fsys_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_oss_5fsys_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LogLevel& LogLevel::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_oss_5fsys_2eproto::scc_info_LogLevel.base);
  return *internal_default_instance();
}


void LogLevel::Clear() {
// @@protoc_insertion_point(message_clear_start:LogLevel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&log_level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&net_log_level_) -
      reinterpret_cast<char*>(&log_level_)) + sizeof(net_log_level_));
  _internal_metadata_.Clear();
}

bool LogLevel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LogLevel)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 log_level = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &log_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 net_log_level = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &net_log_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LogLevel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LogLevel)
  return false;
#undef DO_
}

void LogLevel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LogLevel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 log_level = 1;
  if (this->log_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->log_level(), output);
  }

  // int32 net_log_level = 2;
  if (this->net_log_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->net_log_level(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LogLevel)
}

::google::protobuf::uint8* LogLevel::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LogLevel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 log_level = 1;
  if (this->log_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->log_level(), target);
  }

  // int32 net_log_level = 2;
  if (this->net_log_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->net_log_level(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LogLevel)
  return target;
}

size_t LogLevel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LogLevel)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 log_level = 1;
  if (this->log_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->log_level());
  }

  // int32 net_log_level = 2;
  if (this->net_log_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->net_log_level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LogLevel::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LogLevel)
  GOOGLE_DCHECK_NE(&from, this);
  const LogLevel* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LogLevel>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LogLevel)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LogLevel)
    MergeFrom(*source);
  }
}

void LogLevel::MergeFrom(const LogLevel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LogLevel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.log_level() != 0) {
    set_log_level(from.log_level());
  }
  if (from.net_log_level() != 0) {
    set_net_log_level(from.net_log_level());
  }
}

void LogLevel::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LogLevel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogLevel::CopyFrom(const LogLevel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LogLevel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogLevel::IsInitialized() const {
  return true;
}

void LogLevel::Swap(LogLevel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LogLevel::InternalSwap(LogLevel* other) {
  using std::swap;
  swap(log_level_, other->log_level_);
  swap(net_log_level_, other->net_log_level_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LogLevel::GetMetadata() const {
  protobuf_oss_5fsys_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_oss_5fsys_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConfigInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigInfo::kFileNameFieldNumber;
const int ConfigInfo::kFileContentFieldNumber;
const int ConfigInfo::kFilePathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigInfo::ConfigInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_oss_5fsys_2eproto::scc_info_ConfigInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ConfigInfo)
}
ConfigInfo::ConfigInfo(const ConfigInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.file_name().size() > 0) {
    file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
  }
  file_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.file_content().size() > 0) {
    file_content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_content_);
  }
  file_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.file_path().size() > 0) {
    file_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_path_);
  }
  // @@protoc_insertion_point(copy_constructor:ConfigInfo)
}

void ConfigInfo::SharedCtor() {
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ConfigInfo::~ConfigInfo() {
  // @@protoc_insertion_point(destructor:ConfigInfo)
  SharedDtor();
}

void ConfigInfo::SharedDtor() {
  file_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ConfigInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConfigInfo::descriptor() {
  ::protobuf_oss_5fsys_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_oss_5fsys_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConfigInfo& ConfigInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_oss_5fsys_2eproto::scc_info_ConfigInfo.base);
  return *internal_default_instance();
}


void ConfigInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ConfigInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  file_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ConfigInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ConfigInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string file_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file_name().data(), static_cast<int>(this->file_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ConfigInfo.file_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string file_content = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_content()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file_content().data(), static_cast<int>(this->file_content().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ConfigInfo.file_content"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string file_path = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file_path().data(), static_cast<int>(this->file_path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ConfigInfo.file_path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ConfigInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ConfigInfo)
  return false;
#undef DO_
}

void ConfigInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ConfigInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string file_name = 1;
  if (this->file_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_name().data(), static_cast<int>(this->file_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ConfigInfo.file_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->file_name(), output);
  }

  // string file_content = 2;
  if (this->file_content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_content().data(), static_cast<int>(this->file_content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ConfigInfo.file_content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->file_content(), output);
  }

  // string file_path = 3;
  if (this->file_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_path().data(), static_cast<int>(this->file_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ConfigInfo.file_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->file_path(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ConfigInfo)
}

::google::protobuf::uint8* ConfigInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ConfigInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string file_name = 1;
  if (this->file_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_name().data(), static_cast<int>(this->file_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ConfigInfo.file_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->file_name(), target);
  }

  // string file_content = 2;
  if (this->file_content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_content().data(), static_cast<int>(this->file_content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ConfigInfo.file_content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->file_content(), target);
  }

  // string file_path = 3;
  if (this->file_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_path().data(), static_cast<int>(this->file_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ConfigInfo.file_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->file_path(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConfigInfo)
  return target;
}

size_t ConfigInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ConfigInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string file_name = 1;
  if (this->file_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_name());
  }

  // string file_content = 2;
  if (this->file_content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_content());
  }

  // string file_path = 3;
  if (this->file_path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_path());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConfigInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ConfigInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ConfigInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ConfigInfo)
    MergeFrom(*source);
  }
}

void ConfigInfo::MergeFrom(const ConfigInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ConfigInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.file_name().size() > 0) {

    file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
  }
  if (from.file_content().size() > 0) {

    file_content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_content_);
  }
  if (from.file_path().size() > 0) {

    file_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_path_);
  }
}

void ConfigInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ConfigInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigInfo::CopyFrom(const ConfigInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ConfigInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigInfo::IsInitialized() const {
  return true;
}

void ConfigInfo::Swap(ConfigInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConfigInfo::InternalSwap(ConfigInfo* other) {
  using std::swap;
  file_name_.Swap(&other->file_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  file_content_.Swap(&other->file_content_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  file_path_.Swap(&other->file_path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConfigInfo::GetMetadata() const {
  protobuf_oss_5fsys_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_oss_5fsys_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TraceLog::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TraceLog::kLogTimeFieldNumber;
const int TraceLog::kNodeTypeFieldNumber;
const int TraceLog::kNodeIdentifyFieldNumber;
const int TraceLog::kLogLevelFieldNumber;
const int TraceLog::kCodeFileNameFieldNumber;
const int TraceLog::kCodeFileLineFieldNumber;
const int TraceLog::kCodeFunctionFieldNumber;
const int TraceLog::kLogContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TraceLog::TraceLog()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_oss_5fsys_2eproto::scc_info_TraceLog.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TraceLog)
}
TraceLog::TraceLog(const TraceLog& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  log_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.log_time().size() > 0) {
    log_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.log_time_);
  }
  node_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.node_type().size() > 0) {
    node_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_type_);
  }
  node_identify_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.node_identify().size() > 0) {
    node_identify_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_identify_);
  }
  log_level_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.log_level().size() > 0) {
    log_level_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.log_level_);
  }
  code_file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.code_file_name().size() > 0) {
    code_file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_file_name_);
  }
  code_function_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.code_function().size() > 0) {
    code_function_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_function_);
  }
  log_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.log_content().size() > 0) {
    log_content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.log_content_);
  }
  code_file_line_ = from.code_file_line_;
  // @@protoc_insertion_point(copy_constructor:TraceLog)
}

void TraceLog::SharedCtor() {
  log_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_identify_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_level_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_function_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_file_line_ = 0u;
}

TraceLog::~TraceLog() {
  // @@protoc_insertion_point(destructor:TraceLog)
  SharedDtor();
}

void TraceLog::SharedDtor() {
  log_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_identify_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_level_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_file_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_function_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TraceLog::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TraceLog::descriptor() {
  ::protobuf_oss_5fsys_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_oss_5fsys_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TraceLog& TraceLog::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_oss_5fsys_2eproto::scc_info_TraceLog.base);
  return *internal_default_instance();
}


void TraceLog::Clear() {
// @@protoc_insertion_point(message_clear_start:TraceLog)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  log_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_identify_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_level_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_file_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_function_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_file_line_ = 0u;
  _internal_metadata_.Clear();
}

bool TraceLog::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TraceLog)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string log_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_log_time()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->log_time().data(), static_cast<int>(this->log_time().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TraceLog.log_time"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string node_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_node_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->node_type().data(), static_cast<int>(this->node_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TraceLog.node_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string node_identify = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_node_identify()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->node_identify().data(), static_cast<int>(this->node_identify().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TraceLog.node_identify"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string log_level = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_log_level()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->log_level().data(), static_cast<int>(this->log_level().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TraceLog.log_level"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string code_file_name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code_file_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->code_file_name().data(), static_cast<int>(this->code_file_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TraceLog.code_file_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 code_file_line = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &code_file_line_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string code_function = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code_function()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->code_function().data(), static_cast<int>(this->code_function().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TraceLog.code_function"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes log_content = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_log_content()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TraceLog)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TraceLog)
  return false;
#undef DO_
}

void TraceLog::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TraceLog)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string log_time = 1;
  if (this->log_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->log_time().data(), static_cast<int>(this->log_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TraceLog.log_time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->log_time(), output);
  }

  // string node_type = 2;
  if (this->node_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_type().data(), static_cast<int>(this->node_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TraceLog.node_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->node_type(), output);
  }

  // string node_identify = 3;
  if (this->node_identify().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_identify().data(), static_cast<int>(this->node_identify().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TraceLog.node_identify");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->node_identify(), output);
  }

  // string log_level = 4;
  if (this->log_level().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->log_level().data(), static_cast<int>(this->log_level().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TraceLog.log_level");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->log_level(), output);
  }

  // string code_file_name = 5;
  if (this->code_file_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code_file_name().data(), static_cast<int>(this->code_file_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TraceLog.code_file_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->code_file_name(), output);
  }

  // uint32 code_file_line = 6;
  if (this->code_file_line() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->code_file_line(), output);
  }

  // string code_function = 7;
  if (this->code_function().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code_function().data(), static_cast<int>(this->code_function().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TraceLog.code_function");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->code_function(), output);
  }

  // bytes log_content = 8;
  if (this->log_content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      8, this->log_content(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TraceLog)
}

::google::protobuf::uint8* TraceLog::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TraceLog)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string log_time = 1;
  if (this->log_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->log_time().data(), static_cast<int>(this->log_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TraceLog.log_time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->log_time(), target);
  }

  // string node_type = 2;
  if (this->node_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_type().data(), static_cast<int>(this->node_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TraceLog.node_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->node_type(), target);
  }

  // string node_identify = 3;
  if (this->node_identify().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_identify().data(), static_cast<int>(this->node_identify().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TraceLog.node_identify");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->node_identify(), target);
  }

  // string log_level = 4;
  if (this->log_level().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->log_level().data(), static_cast<int>(this->log_level().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TraceLog.log_level");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->log_level(), target);
  }

  // string code_file_name = 5;
  if (this->code_file_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code_file_name().data(), static_cast<int>(this->code_file_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TraceLog.code_file_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->code_file_name(), target);
  }

  // uint32 code_file_line = 6;
  if (this->code_file_line() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->code_file_line(), target);
  }

  // string code_function = 7;
  if (this->code_function().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code_function().data(), static_cast<int>(this->code_function().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TraceLog.code_function");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->code_function(), target);
  }

  // bytes log_content = 8;
  if (this->log_content().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        8, this->log_content(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TraceLog)
  return target;
}

size_t TraceLog::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TraceLog)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string log_time = 1;
  if (this->log_time().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->log_time());
  }

  // string node_type = 2;
  if (this->node_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->node_type());
  }

  // string node_identify = 3;
  if (this->node_identify().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->node_identify());
  }

  // string log_level = 4;
  if (this->log_level().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->log_level());
  }

  // string code_file_name = 5;
  if (this->code_file_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->code_file_name());
  }

  // string code_function = 7;
  if (this->code_function().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->code_function());
  }

  // bytes log_content = 8;
  if (this->log_content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->log_content());
  }

  // uint32 code_file_line = 6;
  if (this->code_file_line() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->code_file_line());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TraceLog::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TraceLog)
  GOOGLE_DCHECK_NE(&from, this);
  const TraceLog* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TraceLog>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TraceLog)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TraceLog)
    MergeFrom(*source);
  }
}

void TraceLog::MergeFrom(const TraceLog& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TraceLog)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.log_time().size() > 0) {

    log_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.log_time_);
  }
  if (from.node_type().size() > 0) {

    node_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_type_);
  }
  if (from.node_identify().size() > 0) {

    node_identify_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_identify_);
  }
  if (from.log_level().size() > 0) {

    log_level_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.log_level_);
  }
  if (from.code_file_name().size() > 0) {

    code_file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_file_name_);
  }
  if (from.code_function().size() > 0) {

    code_function_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_function_);
  }
  if (from.log_content().size() > 0) {

    log_content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.log_content_);
  }
  if (from.code_file_line() != 0) {
    set_code_file_line(from.code_file_line());
  }
}

void TraceLog::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TraceLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TraceLog::CopyFrom(const TraceLog& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TraceLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TraceLog::IsInitialized() const {
  return true;
}

void TraceLog::Swap(TraceLog* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TraceLog::InternalSwap(TraceLog* other) {
  using std::swap;
  log_time_.Swap(&other->log_time_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  node_type_.Swap(&other->node_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  node_identify_.Swap(&other->node_identify_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  log_level_.Swap(&other->log_level_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  code_file_name_.Swap(&other->code_file_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  code_function_.Swap(&other->code_function_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  log_content_.Swap(&other->log_content_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_file_line_, other->code_file_line_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TraceLog::GetMetadata() const {
  protobuf_oss_5fsys_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_oss_5fsys_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ConnectWorker* Arena::CreateMaybeMessage< ::ConnectWorker >(Arena* arena) {
  return Arena::CreateInternal< ::ConnectWorker >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TargetWorker* Arena::CreateMaybeMessage< ::TargetWorker >(Arena* arena) {
  return Arena::CreateInternal< ::TargetWorker >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LogLevel* Arena::CreateMaybeMessage< ::LogLevel >(Arena* arena) {
  return Arena::CreateInternal< ::LogLevel >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ConfigInfo* Arena::CreateMaybeMessage< ::ConfigInfo >(Arena* arena) {
  return Arena::CreateInternal< ::ConfigInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TraceLog* Arena::CreateMaybeMessage< ::TraceLog >(Arena* arena) {
  return Arena::CreateInternal< ::TraceLog >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
